name: Build and Deploy Server to Dist

on:
  push:
    branches:
      - main
      - dev
    paths:
      - 'back/**'
      - 'front/**'
      - 'front-app/**'
      - 'front-scripts/**'
      - 'package.json'
      - 'tsconfig.json'
  pull_request:
    branches:
      - main
      - dev
    paths:
      - 'back/**'
      - 'front/**'
      - 'front-app/**'
      - 'front-scripts/**'
      - 'package.json'
      - 'tsconfig.json'
  workflow_dispatch:

jobs:
  build-server:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install dependencies
        run: |
          npm install -g typescript tsc-alias

      - name: Install and Build (Root)
        working-directory: .
        run: |
          npm install
          npm run build

      - name: Install and Build (Front-App)
        working-directory: ./front-app
        run: |
          npm install
          npm run build
        
      - name: Install and Build (Front-Scripts)
        working-directory: ./front-scripts
        run: |
          npm install
          npm run build

      - name: Determine Target Branch
        id: branch-name
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "TARGET_BRANCH=dist-nightly" >> $GITHUB_ENV
          else
            echo "TARGET_BRANCH=dist" >> $GITHUB_ENV
          fi

      - name: Deploy to Target Branch
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

          git checkout --orphan $TARGET_BRANCH

          mkdir -p dist/front-app

          cp -R ./dist-back/ dist/
          cp -R ./front-app/dist/ dist/front-app/dist/
          cp -R ./front-scripts/dist-build/ dist/front-app/dist-build/
          cp -R ./front/ dist/front/
          cp ./index.js dist/index.js
          cp ./app.js dist/app.js
          cp ./package.json dist/package.json
          cp ./LICENSE dist/LICENSE
          cp ./.env.txt dist/.env.txt

          shopt -s extglob
          rm -rf !(dist)
          rm .gitignore
          rm -r .github
          mv dist/* ./
          rm -rf dist
          ls -al

      - name: Remove devDependencies
        run: |
          jq 'del(.devDependencies)' package.json > temp.json && mv temp.json package.json

      - name: Commit and Push
        run: |
          git add .
          git commit -m "Deploy build output to $TARGET_BRANCH"
          git push origin $TARGET_BRANCH --force
