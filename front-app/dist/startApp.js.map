{
  "version": 3,
  "sources": ["../src/core.ts", "../src/hub.ts", "../src/init/init.ts", "../src/var/mgl.ts", "../src/var/var.ts", "../src/var/html.ts", "../src/core/socket/socket.ts", "../src/utils/perm.ts", "../src/var/api.ts", "../src/core/mess/cmd.ts", "../src/ui/components/media.ts", "../src/core/mess/format/media.ts", "../src/core/mess/format/list.ts", "../src/core/mess/format/table.ts", "../src/core/mess/format/text.ts", "../src/core/mess/format.ts", "../src/api/file.ts", "../src/ui/components/emoji.ts", "../src/core/mess/interact.ts", "../src/lib/contextMenuLib.ts", "../src/ui/components/contextMenu.ts", "../src/var/staticData.ts", "../src/core/mess/format/embed.ts", "../src/core/mess/format/respone.ts", "../src/core/mess/mess.ts", "../src/core/mess/style.ts", "../src/ui/render/var.ts", "../src/ui/render/userStatusMarker.ts", "../src/ui/render/realm.ts", "../src/ui/render/utils.ts", "../src/ui/helpers/userStateManager.ts", "../src/core/cacheControllers/socketGeneral.ts", "../src/ui/interact/mainView.ts", "../src/types/core/socket.ts", "../src/ui/render/user.ts", "../src/ui/components/voice.ts", "../src/ui/render/event.ts", "../src/ui/render/realmInit.ts", "../src/ui/render/dm.ts", "../node_modules/idb/build/index.js", "../src/core/cacheControllers/mess.ts", "../src/core/socket/logic/mess.ts", "../src/core/socket/engine.ts", "../src/ui/components/mainView.ts", "../src/ui/render/forum.ts", "../src/core/coreFunc.ts", "../src/var/keys.ts", "../src/ui/interact/ui.ts", "../src/utils/utils.ts", "../src/utils/translate.ts", "../src/ui/helpers/uiFunc.ts", "../src/utils/code.ts", "../src/api/devices/web.ts", "../src/ui/helpers/stateManager.ts", "../src/api/devices/ele.ts", "../src/api/devices/rn.ts", "../src/api/devices/if.ts", "../src/api/apis.ts", "../src/core/debug.ts", "../src/core/socket/logic/evt.ts", "../src/core/socket/evt.ts", "../src/core/mess/messSocket.ts", "../src/core/mess/listeners.ts", "../src/lib/swipeLib.ts", "../src/init/features.ts", "../src/ui/helpers/reloadImages.ts", "../src/ui/settings/settingsData.ts", "../src/ui/settings/settingsLib.ts", "../src/ui/settings/realm/rs_utils.ts", "../src/ui/settings/realm/rs_var.ts", "../src/ui/settings/realm/rs_save.ts", "../src/ui/settings/realm/rs_meta.ts", "../src/utils/genId.ts", "../src/ui/settings/realm/rs_roles.ts", "../src/ui/settings/realm/rs_emoji.ts", "../src/ui/settings/realm/rs_channels.ts", "../src/ui/settings/realm/rs_webhooks.ts", "../src/ui/settings/realm/rs_users.ts", "../src/ui/settings/realm/types.ts", "../src/ui/settings/realm/rs_nav.ts", "../src/ui/settings/realm/realmSettings.ts", "../src/ui/settings/settings.ts", "../src/ui/interact/subscribeEventChnl.ts", "../src/ui/interact/context.ts", "../src/ui/interact/relations.ts", "../src/init/start.ts", "../src/common/warning.ts", "../src/startApp.ts"],
  "sourcesContent": ["globalThis.lo = console.log;\nglobalThis.delay = (ms: number): Promise<void> => new Promise(res => setTimeout(res, ms));\n\ndeclare global {\n    interface HTMLElement {\n        html(v?: string): string | HTMLElement;\n        on(event: string, fn: EventListenerOrEventListenerObject): void;\n        css(style: string | Record<string, string>, val?: string | null): void;\n        attrib(att: string, arg?: string | null): string | HTMLElement;\n        clA(arg: string): HTMLElement;\n        clR(arg: string): HTMLElement;\n        clT(className: string): HTMLElement;\n        animateFade(from: number, options?: { time?: number; cb?: () => void }): HTMLElement;\n        fadeIn(display?: string | (() => void), cb?: () => void): HTMLElement;\n        fadeOut(cb?: () => void): HTMLElement;\n        fadeToggle(): HTMLElement;\n        add(child: HTMLElement): HTMLElement;\n        addUp(child: HTMLElement): HTMLElement;\n        fade: boolean;\n    }\n\n    interface HTMLInputElement {\n        v(v?: string): string | HTMLInputElement;\n    }\n\n    var lo: typeof console.log;\n    var delay: (ms: number) => Promise<void>;\n}\n\nexport const cw = {\n    proto: {\n        html(this: HTMLElement, v?: string): string | HTMLElement {\n            if (v !== undefined) {\n                this.innerHTML = v;\n                return this;\n            } else {\n                return this.innerHTML;\n            }\n        },\n\n        v(this: HTMLInputElement, v?: string): string | HTMLInputElement {\n            if (v !== undefined) {\n                this.value = v;\n                return this;\n            } else {\n                return this.value;\n            }\n        },\n\n        on(this: HTMLElement, event: string, fn: EventListenerOrEventListenerObject): void {\n            this.addEventListener(event, fn);\n        },\n\n        css(this: HTMLElement, style: string | Record<string, string>, val: string | null = null): void {\n            if (typeof style === \"string\") {\n                if (val !== null) {\n                    this.style[style as any] = val;\n                } else {\n                    (this.style as any).cssText = style;\n                }\n            } else {\n                Object.assign(this.style, style);\n            }\n        },\n\n        attrib(this: HTMLElement, att: string, arg: string | null = null): string | HTMLElement {\n            if (arg !== null) {\n                this.setAttribute(att, arg);\n                return this;\n            } else {\n                return this.getAttribute(att) || \"\";\n            }\n        },\n\n        clA(this: HTMLElement, arg: string): HTMLElement {\n            this.classList.add(arg);\n            return this;\n        },\n\n        clR(this: HTMLElement, arg: string): HTMLElement {\n            this.classList.remove(arg);\n            return this;\n        },\n\n        clT(this: HTMLElement, className: string): HTMLElement {\n            this.classList.toggle(className);\n            return this;\n        },\n\n        animateFade(this: HTMLElement, from: number, options: { time?: number; cb?: () => void } = {}): HTMLElement {\n            const { time = 200, cb } = options;\n            const style = this.style;\n            const steps = 50;\n            const timeToStep = time / steps;\n            const d = (from === 0 ? 1 : -1) / steps;\n            let index = 0;\n            style.opacity = from.toString();\n\n            const interval = setInterval(() => {\n                if (index >= steps) {\n                    clearInterval(interval);\n                    cb?.();\n                    return;\n                }\n                style.opacity = (parseFloat(style.opacity || \"0\") + d).toString();\n                index++;\n            }, timeToStep);\n            return this;\n        },\n\n        fadeIn(this: HTMLElement, display: string | (() => void) = \"block\", cb?: () => void): HTMLElement {\n            if (typeof display === \"function\") {\n                cb = display;\n                display = \"block\";\n            }\n\n            this.css(\"display\", display);\n            this.animateFade(0, { cb });\n            (this as any).fade = true;\n            return this;\n        },\n\n        fadeOut(this: HTMLElement, cb?: () => void): HTMLElement {\n            this.animateFade(1, { time: 300, cb });\n            setTimeout(() => this.css(\"display\", \"none\"), 300);\n            (this as any).fade = false;\n            return this;\n        },\n\n        fadeToggle(this: HTMLElement): HTMLElement {\n            if ((this as any).fade) {\n                this.fadeOut();\n            } else {\n                this.fadeIn();\n            }\n            return this;\n        },\n\n        add(this: HTMLElement, child: HTMLElement): HTMLElement {\n            this.appendChild(child);\n            return this;\n        },\n\n        addUp(this: HTMLElement, child: HTMLElement): HTMLElement {\n            this.insertBefore(child, this.firstChild);\n            return this;\n        },\n\n        fade: true,\n    },\n\n    init(): void {\n        Object.assign(HTMLElement.prototype, this.proto);\n    },\n\n    rand(min: number, max: number): number {\n        return Math.round(Math.random() * (max - min) + min);\n    },\n\n    round(a: number, b: number): number {\n        const factor = Math.pow(10, b);\n        return Math.round(a * factor) / factor;\n    },\n\n    get(url: string): string{\n        if (!url) return \"\";\n        const xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", url, false);\n        xhr.send();\n\n        if (xhr.status === 200) {\n            return xhr.responseText;\n        } else if (xhr.status === 404) {\n            return \"\";\n        } else {\n            return \"\";\n        }\n    },\n};\n\ncw.init();\nexport default cw;", "const required = [\n//  api\n    \"apis\",\n    \"file\",\n//  common\n    \"warning\",\n//  core\n    // cacheControllers\n        \"cacheControllers/socketGeneral\",\n    // mess\n        // format\n            \"mess/format/embed\",\n            \"mess/format/list\",\n            \"mess/format/media\",\n            \"mess/format/respone\",\n            \"mess/format/table\",\n            \"mess/format/text\",\n        \"mess/cmd\",\n        \"mess/format\",\n        \"mess/interact\",\n        \"mess/listeners\",\n        \"mess\",\n        \"mess/socket\",\n        \"mess/style\",\n    // socket\n        \"socket/_evt\",\n        // logic\n            \"socket/evt\",\n            \"socket/mess\",\n        \"socket/engine\",\n        \"socket\",\n    \"coreFunc\",\n    \"debug\",\n//  \"init\",\n    \"features\",\n    \"init\",\n    \"start\",\n//  \"lib\",\n    \"contextMenuLib\",\n    \"swipeLib\",\n//  ui\n    // components\n        \"components/contextMenu\",\n        \"components/emoji\",\n        \"components/mainView\",\n        \"components/media\",\n        \"components/voice\",\n    // helpers\n        \"helpers/reloadImages\",\n        \"helpers/stateManager\",\n        \"helpers/uiFunc\",\n    // interact\n        \"interact/context\",\n        \"interact/mainView\",\n        \"interact/relations\",\n        \"interact/subscribeEventChnl\",\n        \"interact/ui\",\n    // render\n        \"render/dm\",\n        \"render/event\",\n        \"render/realm\",\n        \"render/realmInit\",\n        \"render/user\",\n        \"render/utils\",\n        \"render/var\",\n    // settings\n        // realm\n            \"realmSettings\",\n            \"rs/channels\",\n            \"rs/emoji\",\n            \"rs/meta\",\n            \"rs/nav\",\n            \"rs/roles\",\n            \"rs/save\",\n            \"rs/users\",\n            \"rs/utils\",\n            \"rs/var\",\n            \"rs/webhooks\",\n        \"settings\",\n        \"settingsData\",\n        \"settingsLib\",\n//  utils\n    \"genId\",\n    \"perm\",\n    \"translate\",\n    \"utils\",\n//  var\n    \"var/api\",\n    \"var/html\",\n    \"var/keys\",\n    \"var/staticData\",\n    \"var\",\n];\n\nconst registered: string[] = [];\n\nexport default (name: string) => {\n    if(registered.includes(name)) return;\n    registered.push(name);\n}\n\nexport const reqButNotReg = () => {\n    return required.filter((module) => !registered.includes(module));\n}\n\nexport const regButNotReq = () => {\n    return registered.filter((module) => !required.includes(module));\n}\n\nexport const getReq = () => {\n    return required;\n}\n\nexport const getReg = () => {\n    return registered;\n}", "import cw from \"../core\";\nimport hub from \"../hub\";\nhub(\"init\");\n\nif (!localStorage.getItem(\"token\")) window.location.href = \"/login\";\n\ndocument.querySelectorAll(\"[loadInner]\").forEach(e => {\n    e.innerHTML = cw.get(e.getAttribute(\"loadInner\"));\n});\n\ndocument.querySelectorAll(\".delete\").forEach(e => {\n    let time = parseInt(e.getAttribute(\"time\"));\n    setTimeout(() => e.remove(), time);\n});", "import { MglInt, MglVar } from \"../types/mgl\";\n\nexport const mglInt: MglInt = {}; // magistral for interactions functions\n\nexport const mglVar: MglVar = {}; // magistral for variables\n\nwindow.mglInt = mglInt;\nwindow.mglVar = mglVar;", "import hub from \"../hub\";\nimport Vars, { Vars_realm } from \"../types/var\";\nimport { mglVar } from \"./mgl\";\nhub(\"var\");\n\nconst vars: Vars = {\n    user: {\n        _id: localStorage.getItem(\"user_id\"),\n        fr: localStorage.getItem(\"from\"),\n        status: \"online\",\n        statusText: \"\",\n    },\n    chat: {\n        to: \"main\",\n        chnl: \"main\",\n        actMess: 0,\n        pinned: [],\n        selectedMess: null\n    },\n    temp: {\n        scrollBlock: false,\n        replyId: null,\n        editId: null,\n    }, // temporary\n    privs: [],\n    realms: [],\n    realm: getEmptyRealmConfig(),\n    mainView: {\n        friends: [],\n        requests: [],\n        page: \"online\"\n    },\n    settings: {\n        notifications: localStorage.getItem(\"notifications\") == \"true\" || false,\n        desktopHandling: localStorage.getItem(\"desktopHandling\") == \"true\" || false\n    },\n    blocked: []\n}\n\nexport default vars;\nmglVar.vars = vars;\n\nexport function getEmptyRealmConfig(): Vars_realm {\n    return {\n        users: [],\n        roles: [],\n        permission: 0,\n        text: [],\n        desc: {},\n        chnlPerms: {},\n        threads: []\n    }\n}", "import hub from \"../hub\";\nhub(\"var/html\");\n\nfunction qd(selector: string, container?: HTMLElement) {\n    return (container || document).querySelector<HTMLDivElement>(selector);\n}\n\nfunction mess() {\n    const nav = qd(\"#messages_nav\");\n\n    return {\n        div: qd(\"#messages\"),\n        input: document.querySelector<HTMLTextAreaElement>(\"#mess-input\"),\n        replyClose: qd(\"#replyClose\"),\n        editClose: qd(\"#editClose\"),\n        sendBtn: document.querySelector<HTMLButtonElement>(\"#barc__sendBtn\"),\n        linkClick: qd(\"#linkClick\"),\n        nav,\n        nav_priv: qd(\"#messages_nav__priv\", nav),\n        nav_realm: qd(\"#messages_nav__realm\", nav),\n        sendBtnImg: document.querySelector<SVGElement>(\"#barc__sendBtn__img\"),\n        bar: qd(\"#bar\"),\n        barc__commads: qd(\"#barc__commads\")\n    }\n}\n\nfunction nav() {\n    return {\n        nav: qd(\"#navs\"),\n        priv: qd(\"#navs__priv\"),\n        realm: qd(\"#navs__realm\"),\n        main: qd(\"#navs__main\"),\n        realms: qd(\"#navs__realms\"),\n        main__call: qd(\"#navs__main__call\"),\n        navs__user: qd(\"#navs__user\"),\n        user__name: qd(\"#navs__user__name\"),\n        user__status: qd(\"#navs__user__status\"),\n        realm__name: qd(\"#navs__realm__name\"),\n        realm__panel: qd(\"#navs__realm__panel\"),\n        realm__channels: qd(\"#navs__realm__channels\"),\n        realm__users: qd(\"#navs__realms__users\"),\n    }\n}\n\nfunction core() {\n    return {\n        messages_nav__realm__description: qd(\"#messages_nav__realm__description\"),\n    }\n}\n\nfunction render() {\n    const events = qd(\"#realmEvents\");\n    return {\n        navs__priv: qd(\"#navs__priv\"),\n        realms__content: qd(\"#realms__content\"),\n        userProfile: qd(\"#userProfile\"),\n        events,\n        events__container: qd(\"#realmEvents__container\", events),\n        events__add: qd(\"#realmEvents__add\", events),\n    }\n}\n\nfunction mainView() {\n    const div = qd(\"#main__view\");\n    return {\n        div,\n        nav: qd(\"#main__view__nav\"),\n        friends: qd(\"#main__view__friends\", div),\n        requests: qd(\"#main__view__requests\", div),\n        requestCount: qd(\"#main__view__requests__count\", div),\n        noFriends: qd(\"#main__view__noFriends\", div),\n        noRequests: qd(\"#main__view__noRequests\", div),\n        friendsContainer: qd(\"#main__view__friends_container\", div),\n        requestsContainer: qd(\"#main__view__requests_container\", div),\n    }\n}\n\nfunction other() {\n    return {\n        makeRealm: qd(\"#makeRealm\"),\n    }\n}\n\nfunction voice() {\n    return {\n        div: qd(\"#voice_call\"),\n        mediaContainer: qd(\"#voice_call_media\"),\n        users: qd(\"#voice_call_users\"),\n        muteMic: qd(\"#voice_call_mute_mic\"),\n        voiceShow: qd(\"#realms__voice_show\"),\n    }\n}\n\nfunction emoji() {\n    return {\n        div: qd(\"#emojiDiv\"),\n        input: document.querySelector(\"#emocji-input\") as HTMLInputElement,\n        container: qd(\"#emoji__container\"),\n        nav: qd(\"#emoji__nav\"),\n    }\n}\nexport const messHTML = mess();\nexport const navHTML = nav();\nexport const coreHTML = core();\nexport const renderHTML = render();\nexport const mainViewHTML = mainView();\nexport const otherHTML = other();\nexport const voiceHTML = voice();\nexport const emojiHTML = emoji();\n\nexport const mglHTML = { // magistral for html variables\n    mess: messHTML,\n    nav: navHTML,\n    core: coreHTML,\n    render: renderHTML,\n    mainView: mainViewHTML,\n    other: otherHTML,\n    voice: voiceHTML,\n    emoji: emojiHTML\n}\n\nwindow.mglHTML = mglHTML;", "import hub from \"../../hub\";\nimport { mglVar } from \"../../var/mgl\";\nhub(\"socket\");\n\nimport type SocketIOClient from \"socket.io-client\";\ndeclare var io: typeof SocketIOClient;\n\nconst socket = io(\"/\", {\n    transports: [\"websocket\"],\n    auth: {\n        token: localStorage.getItem(\"token\")\n    },\n    autoConnect: false,\n    reconnection: true,\n    reconnectionDelay: 1000,\n    reconnectionDelayMax: 5000,\n    reconnectionAttempts: Infinity,\n});\n\nexport default socket;\nmglVar.socket = socket;", "import hub from \"../hub\";\nhub(\"perm\");\n\nimport vars from \"../var/var\";\n\nexport enum PermissionFlags {\n    Admin = 1 << 0,\n    ManageMessages = 1 << 1,\n    BanUser = 1 << 2,\n    MuteUser = 1 << 3,\n    KickUser = 1 << 4,\n    ManageRoles = 1 << 5,\n    ManageEmojis = 1 << 6,\n    ManageInvites = 1 << 7,\n    ManageWebhooks = 1 << 8,\n    ManageChannels = 1 << 9,\n}\n\nconst permissionFunc = {\n    hasAllPermissions(userPermissions: number, requiredPermissions: number[]): boolean {\n        return requiredPermissions.every(permission => (userPermissions & permission) !== 0);\n    },\n\n    hasAnyPermission(userPermissions: number, requiredPermissions: number[]): boolean {\n        return requiredPermissions.some(permission => (userPermissions & permission) !== 0);\n    },\n\n    canAction(permissions: number | number[]): boolean {\n        const userPermissions = vars.realm.permission || 0;\n        if (!Array.isArray(permissions)) permissions = [permissions];\n        return this.hasPermission(userPermissions, PermissionFlags.Admin) || this.hasAnyPermission(userPermissions, permissions);\n    },\n\n    isAdmin(): boolean {\n        return this.hasPermission(vars.realm.permission || 0, PermissionFlags.Admin);\n    },\n\n    hasPermission(userPermissions: number, permission: number): boolean {\n        return (userPermissions & permission) !== 0;\n    },\n}\n\nexport default permissionFunc;", "import hub from \"../hub\";\nimport ApisVars from \"../types/apisVars\";\nimport { mglVar } from \"./mgl\";\nhub(\"var/api\");\n\nconst apiVars: ApisVars = {\n    temp: {\n        user: {\n            main: {},\n        },\n        realm: {},\n    },\n    user_state: {},\n    lastMess: {},\n}\n\nexport default apiVars;\nmglVar.apiVars = apiVars;", "import hub from \"../../hub\";\nhub(\"mess/cmd\");\n\nimport messStyle from \"./style\";\nimport vars from \"../../var/var\";\nimport coreFunc from \"../coreFunc\";\nimport socket from \"../socket/socket\";\nimport { messHTML } from \"../../var/html\";\nimport LangPkg from \"../../utils/translate\";\nimport uiFunc from \"../../ui/helpers/uiFunc\";\nimport permissionFunc, { PermissionFlags } from \"../../utils/perm\";\nimport {\n    Core_mess__command,\n    Core_mess__command_arg_list,\n    Core_mess__sendMessage,\n} from \"../../types/core/mess\";\nimport apiVars from \"../../var/api\";\n\nconst barc__commads = messHTML.barc__commads;\nbarc__commads.style.display = \"none\";\n\nexport const messCmds: {\n    [category: string]: {\n        [key: string]: Core_mess__command\n    }\n} = {\n    system: {\n        silent: {\n            args: [\n                { name: \"silent\", type: \"boolean\" },\n                { name: \"message\", type: \"text\" }\n            ],\n            exe(msg: Core_mess__sendMessage, args: any[]) {\n                if (args.length == 0) return 1;\n                if (args[0]) msg.silent = true;\n                msg.msg = args[1];\n            }\n        },\n        search: {\n            args: [\n                { name: \"from\", type: \"user\", optional: true },\n                { name: \"mentions\", type: \"text\", optional: true },\n                { name: \"before\", type: \"date\", optional: true },\n                { name: \"during\", type: \"date\", optional: true },\n                { name: \"after\", type: \"date\", optional: true },\n                { name: \"pinned\", type: \"boolean\", optional: true },\n                { name: \"message\", type: \"text\", optional: true }\n            ],\n            exe(msg: Core_mess__sendMessage, args: any[]) {\n                if (args.length == 0) return 1;\n                const query = {\n                    from: args[0],\n                    mentions: args[1],\n                    before: args[2],\n                    during: args[3],\n                    after: args[4],\n                    pinned: args[5],\n                    message: args[6]\n                };\n\n                socket.emit(\"message.search\", vars.chat.to, vars.chat.chnl, query);\n                return 1;\n            }\n        },\n        createLinkEmbed: {\n            args: [\n                { name: \"url\", type: \"text\" }\n            ],\n            exe(msg: Core_mess__sendMessage, args: any[]) {\n                if (args.length == 0) return 1;\n                socket.emit(\"send.embed.og\", vars.chat.to, vars.chat.chnl, args[0]);\n                return 1;\n            }\n        },\n        createDataEmbed: {\n            args: [\n                { name: \"title\", type: \"text\" },\n                { name: \"description\", type: \"text\", optional: true },\n                { name: \"url\", type: \"text\", optional: true },\n                { name: \"image\", type: \"text\", optional: true },\n                { name: \"custom fields\", type: \"map\", optional: true }\n            ],\n            exe(msg: Core_mess__sendMessage, args: any[]) {\n                if (args.length == 0) return 1;\n                const embed = {\n                    title: args[0],\n                    description: args[1],\n                    url: args[2],\n                    image: args[3],\n                    customFields: args[4]\n                }\n\n                socket.emit(\"send.embed.data\", vars.chat.to, vars.chat.chnl, embed);\n                return 1;\n            }\n        },\n        clear: {\n            args: [{ name: \"delete\", type: \"number\" }],\n            exe(msg: Core_mess__sendMessage, args: any[]) {\n                if (args.length == 0) return 1;\n                let userIsMod = false;\n                if (vars.chat.to.startsWith(\"$\")) userIsMod = false;\n                else if (vars.chat.to == \"main\") return 1;\n                else {\n                    const realm = vars.realm;\n                    if (!realm) return 1;\n                    userIsMod = permissionFunc.canAction(PermissionFlags.ManageMessages);\n                }\n\n                const msgs =\n                    Array.from(document.querySelectorAll(\".mess_message\"))\n                        .slice(-args[0])\n                        .map(container => {\n                            const id = container.id.replace(\"mess__\", \"\");\n                            const fr = container.querySelector(\".mess_meta\").getAttribute(\"_author\");\n                            if (fr == vars.user._id) return id;\n                            return userIsMod ? id : null;\n                        })\n                        .filter(id => id);\n\n                socket.emit(\"messages.delete\", vars.chat.to, msgs);\n\n                return 1;\n            }\n        }\n    }\n}\n\n// Add name\nObject.keys(messCmds).forEach(category => {\n    Object.keys(messCmds[category]).forEach(key => {\n        messCmds[category][key].name = key;\n    })\n});\n\nexport let currentCmd: Core_mess__command | null = null;\nexport function setCurrentCmd(cmd: Core_mess__command | null) {\n    currentCmd = cmd;\n}\n\nconst messCmd = {\n    temp: [],\n\n    check() {\n        let msg = messHTML.input.value;\n        if (currentCmd) {\n            if (!msg.trim() || msg == \"/\") messCmd.close();\n            return;\n        }\n\n        if (!msg.startsWith(\"/\") && msg != \"/\") {\n            barc__commads.style.display = \"none\";\n            return;\n        }\n\n        if (msg.split(\"\\n\").length > 1) return messCmd.close();\n\n        barc__commads.style.display = \"\";\n        barc__commads.innerHTML = \"\";\n\n        const cmdName = msg.trim().split(\" \")[0].substring(1);\n        const availableCmds = {};\n        Object.keys(messCmds).forEach(category => {\n            Object.keys(messCmds[category]).forEach(key => {\n                if (key.startsWith(cmdName) || cmdName == \"\") {\n                    if (!availableCmds[category]) availableCmds[category] = {};\n                    availableCmds[category][key] = messCmds[category][key];\n                }\n            });\n        });\n\n        const allCmds: Core_mess__command[] = [];\n        const allCmdsNames: { c: string, name: string }[] = [];\n        Object.keys(availableCmds).forEach(category => {\n            Object.keys(availableCmds[category]).forEach(key => {\n                allCmds.push(availableCmds[category][key]);\n                allCmdsNames.push({ c: category, name: key });\n            });\n        });\n\n        if (allCmds.length == 0) {\n            barc__commads.innerHTML = \"<h2>No commands</h2>\";\n            currentCmd = null;\n            return;\n        }\n\n        if (allCmds.length == 1) {\n            currentCmd = allCmds[0];\n            const { name } = allCmdsNames[0];\n            const args = msg.split(\" \");\n            args[0] = \"/\" + name;\n            messHTML.input.value = args.join(\" \") + \" \";\n\n            messCmd.handleCommandInput();\n\n            setTimeout(() => {\n                messStyle.setSelectionStart();\n            }, 100)\n\n            coreFunc.focusInp();\n            return;\n        }\n\n        currentCmd = null;\n        Object.keys(availableCmds).forEach(category => {\n            const categoryDiv = document.createElement(\"div\");\n            categoryDiv.innerHTML = `<h2>${category}</h2>`;\n\n            const ul = document.createElement(\"ul\");\n            categoryDiv.appendChild(ul);\n\n            Object.keys(availableCmds[category]).forEach(key => {\n                const cmdLi = document.createElement(\"li\");\n                cmdLi.innerHTML = key;\n                cmdLi.style.cursor = \"pointer\";\n                cmdLi.tabIndex = 0;\n                cmdLi.addEventListener(\"click\", selectCmd);\n                cmdLi.addEventListener(\"keydown\", (e) => {\n                    if (e.key == \"Enter\") selectCmd();\n                });\n                ul.appendChild(cmdLi);\n\n                function selectCmd() {\n                    currentCmd = availableCmds[category][key];\n                    const args = msg.split(\" \");\n                    args[0] = \"/\" + key;\n                    messHTML.input.value = args.join(\" \") + \" \";\n\n                    messCmd.handleCommandInput();\n\n                    setTimeout(() => {\n                        messStyle.setSelectionStart();\n                    }, 100)\n\n                    coreFunc.focusInp();\n                }\n            });\n\n            function tab(e: KeyboardEvent) {\n                if (e.key !== \"Tab\") return;\n\n                e.preventDefault();\n                ul.querySelector(\"li\")?.focus();\n                document.removeEventListener(\"keydown\", tab);\n            }\n\n            document.addEventListener(\"keydown\", tab);\n\n            barc__commads.appendChild(categoryDiv);\n        });\n    },\n\n    close() {\n        currentCmd = null;\n        barc__commads.style.display = \"none\";\n        messHTML.input.value = \"\";\n        messCmd.temp = [];\n    },\n\n    send(data: Core_mess__sendMessage) {\n        if (!currentCmd) {\n            this.close();\n            return 0;\n        }\n\n        const isValid = this.checkArgs();\n        if (!isValid) return 2;\n\n        this.changeArgs();\n        const args = messCmd.temp;\n        const exitCode = currentCmd.exe(data, args) || 0;\n        this.close();\n\n        return exitCode;\n    },\n\n    checkArgs() {\n        const argsVal = messCmd.temp;\n        const argsObj = currentCmd.args;\n\n        for (let i = 0; i < argsObj.length; i++) {\n            const arg = argsObj[i];\n            const val = argsVal[i];\n\n            if (arg.type != \"map\") {\n                if (!val || val.trim() == \"\") {\n                    if (arg.optional) continue;\n                    return false;\n                }\n            } else {\n                if (Object.keys(val).length == 0) {\n                    if (arg.optional) continue;\n                    return false;\n                }\n            }\n\n            if (arg.type == \"boolean\" && val != \"true\" && val != \"false\") return false;\n            else if (arg.type == \"number\" && isNaN(val)) return false;\n            else if (arg.type == \"text\" && val.trim() == \"\") return false;\n            else if (arg.type == \"user\" && val.trim() == \"\") return false;\n            else if ((arg.type == \"date\" || arg.type == \"date-time\") && isNaN(Date.parse(val))) return false;\n            else if (arg.type == \"time\") {\n                const [h, m] = val.split(\":\");\n                if (isNaN(h) || isNaN(m)) return false;\n            }\n            else if (arg.type == \"list\" && !(arg as Core_mess__command_arg_list).list.includes(val)) return false;\n            else if (arg.type == \"map\" && Object.keys(val).length == 0) return false;\n        }\n        return true;\n    },\n\n    changeArgs() {\n        const argsVal = messCmd.temp;\n        const argsObj = currentCmd.args;\n\n        for (let i = 0; i < argsObj.length; i++) {\n            const arg = argsObj[i];\n            const val = argsVal[i];\n\n            if (!val || (arg.type != \"map\" && val.trim() == \"\")) {\n                if (arg.optional) continue;\n                return false;\n            }\n\n            if (arg.type == \"boolean\") argsVal[i] = val == \"true\";\n            else if (arg.type == \"number\") argsVal[i] = Number(val);\n            else if (arg.type == \"user\") {\n                if (val.split(\"-\").length == 0) continue;\n                const idToName = apiVars.temp.user;\n                const usersMap = new Map();\n                Object.keys(idToName).forEach(id => {\n                    usersMap.set(idToName[id], id);\n                });\n                if (!usersMap.has(val)) {\n                    uiFunc.uiMsgT(LangPkg.ui.message.user_not_found);\n                    delete argsVal[i];\n                    continue;\n                }\n                argsVal[i] = usersMap.get(val);\n            } else if (arg.type == \"map\") {\n                if (Object.keys(val).length == 0) {\n                    argsVal[i] = {};\n                    continue;\n                }\n                const map = {};\n\n                Object.keys(val).forEach(valKey => {\n                    const data = val[valKey];\n                    if (!data.key || !data.value) return;\n                    map[data.key] = data.value;\n                });\n                argsVal[i] = map;\n            }\n        }\n    },\n\n    handleCommandInput() {\n        if (!currentCmd) return;\n\n        const container = barc__commads;\n\n        const categoryDiv = document.createElement(\"div\");\n        categoryDiv.innerHTML = \"<h2>\" + LangPkg.ui.message.command + \" (\" + currentCmd.name + \")</h2>\";\n\n        const ul = document.createElement(\"ul\");\n\n        const cmdArgs = currentCmd.args;\n        messCmd.temp = new Array(cmdArgs.length);\n\n        let firstTabEle = null;\n\n        const argsList = document.createElement(\"ul\");\n        cmdArgs.forEach((arg, index) => {\n            const argItem = document.createElement(\"li\");\n            argItem.innerHTML = arg.name;\n            let typeDesc = \"\";\n            let ele;\n            switch (arg.type) {\n                case \"boolean\":\n                    typeDesc = \"true/false\";\n                    ele = document.createElement(\"select\");\n                    [\"false\", \"true\"].forEach((opt) => {\n                        const option = document.createElement(\"option\");\n                        option.value = opt;\n                        option.text = opt;\n                        ele.appendChild(option);\n                    });\n                    ele.value = \"false\";\n                    messCmd.temp[index] = \"false\";\n\n                    ele.addEventListener(\"change\", () => {\n                        messCmd.temp[index] = ele.value === \"true\" ? \"true\" : \"false\";\n                    });\n                    break;\n                case \"number\":\n                    typeDesc = \"number\";\n                    ele = document.createElement(\"input\");\n                    ele.type = \"number\";\n                    ele.addEventListener(\"input\", () => {\n                        messCmd.temp[index] = ele.value;\n                    });\n                    break;\n                case \"text\":\n                    typeDesc = \"text\";\n                    ele = document.createElement(\"input\");\n                    ele.type = \"text\";\n                    ele.addEventListener(\"input\", () => {\n                        messCmd.temp[index] = ele.value;\n                    });\n                    break;\n                case \"user\":\n                    typeDesc = \"text\";\n                    ele = document.createElement(\"input\");\n                    ele.type = \"text\";\n                    ele.addEventListener(\"input\", () => {\n                        messCmd.temp[index] = ele.value;\n                    });\n                    break;\n                case \"date\":\n                    typeDesc = \"date\";\n                    ele = document.createElement(\"input\");\n                    ele.type = \"date\";\n                    ele.addEventListener(\"input\", () => {\n                        messCmd.temp[index] = ele.value;\n                    });\n                    break;\n                case \"time\":\n                    typeDesc = \"time\";\n                    ele = document.createElement(\"input\");\n                    ele.type = \"time\";\n                    ele.addEventListener(\"input\", () => {\n                        messCmd.temp[index] = ele.value;\n                    });\n                    break;\n                case \"date-time\":\n                    typeDesc = \"date-time\";\n                    ele = document.createElement(\"input\");\n                    ele.type = \"datetime-local\";\n                    ele.addEventListener(\"input\", () => {\n                        messCmd.temp[index] = ele.value;\n                    });\n                    break;\n                case \"list\":\n                    const argList = arg as Core_mess__command_arg_list;\n                    typeDesc = \"list\";\n                    ele = document.createElement(\"select\");\n                    argList.list.forEach((opt) => {\n                        const option = document.createElement(\"option\");\n                        option.value = opt;\n                        option.text = opt;\n                        ele.appendChild(option);\n                    });\n                    ele.value = argList.list[0];\n                    messCmd.temp[index] = argList.list[0];\n\n                    ele.addEventListener(\"change\", () => {\n                        messCmd.temp[index] = ele.value;\n                    });\n                    break;\n                case \"map\":\n                    typeDesc = \"map\";\n                    ele = document.createElement(\"div\");\n                    messCmd.temp[index] = {};\n\n                    const create = document.createElement(\"button\");\n                    create.innerHTML = \"Create Map\";\n                    create.style.marginTop = \"5px\";\n                    ele.appendChild(create);\n                    ele.appendChild(document.createElement(\"br\"));\n                    create.addEventListener(\"click\", () => {\n                        const key = document.createElement(\"input\");\n                        const value = document.createElement(\"input\");\n                        const span = document.createElement(\"span\");\n                        ele.appendChild(key);\n                        ele.appendChild(span);\n                        ele.appendChild(value);\n                        ele.appendChild(document.createElement(\"br\"));\n\n                        key.style.marginTop = \"5px\";\n                        span.innerHTML = \": \";\n                        const indexMap = Object.keys(messCmd.temp[index]).length;\n                        messCmd.temp[index][indexMap] = {};\n\n                        key.addEventListener(\"input\", () => {\n                            messCmd.temp[index][indexMap].key = key.value;\n                        });\n                        value.addEventListener(\"input\", () => {\n                            messCmd.temp[index][indexMap].value = value.value;\n                        });\n                    });\n                    break;\n            }\n            argItem.innerHTML += ` (${typeDesc})${arg.optional ? \" (optional)\" : \"\"} &nbsp;`;\n            if (ele) argItem.appendChild(ele);\n            if (!firstTabEle && ele) firstTabEle = ele;\n            argsList.appendChild(argItem);\n        });\n\n        ul.appendChild(argsList);\n\n        function tab() {\n            if (!firstTabEle) return;\n            firstTabEle.focus();\n            document.removeEventListener(\"keydown\", tab);\n        }\n\n        document.addEventListener(\"keydown\", tab);\n\n        categoryDiv.appendChild(ul);\n        container.innerHTML = \"\";\n        container.appendChild(categoryDiv);\n    }\n};\n\nmessHTML.input.addEventListener(\"input\", messCmd.check);\nexport default messCmd;", "import hub from \"../../hub\";\nimport { Ui_Media__Options, Ui_Media__State } from \"../../types/ui/components\";\nimport LangPkg from \"../../utils/translate\";\nimport { mglInt } from \"../../var/mgl\";\nhub(\"components/media\");\n\nconst mediaPopupDiv = document.querySelector<HTMLElement>(\"#mediaPopup\");\n\nclass MediaPopup {\n    private container: HTMLElement;\n    private url: string;\n    private options: Required<Ui_Media__Options>;\n    private state: Ui_Media__State;\n    private overlay: HTMLElement;\n    private content: HTMLElement;\n    private media: HTMLImageElement | HTMLVideoElement;\n    private controlsResets: (() => void)[] = [];\n\n    constructor(container: HTMLElement, url: string, options: Ui_Media__Options) {\n        this.container = container;\n        this.url = url;\n        this.options = {\n            maxScale: options.maxScale || 10,\n            minScale: options.minScale || 0.1,\n            scaleStep: options.scaleStep || 0.1,\n            rotationStep: options.rotationStep || 15,\n            doubleTapDelay: options.doubleTapDelay || 300,\n            isVideo: \"auto\",\n            ...options\n        };\n\n        this.state = {\n            scale: 1,\n            rotation: 0,\n            position: { x: 0, y: 0 },\n            brightness: 100,\n            contrast: 100,\n            saturation: 100,\n            blur: 0,\n            isDragging: false,\n            dragStart: { x: 0, y: 0 },\n            lastTap: 0,\n            lastTapPosition: { x: 0, y: 0 },\n            initialPinchDistance: null,\n            initialRotation: null,\n            previousTouches: null,\n            isAnimating: false\n        };\n\n        this.init();\n    }\n\n    private init() {\n        this.overlay = document.createElement(\"div\");\n        this.overlay.className = \"media-popup-overlay\";\n        this.overlay.fadeIn(\"\");\n\n        this.content = document.createElement(\"div\");\n        this.content.className = \"media-popup-content\";\n\n        let isVideo = this.options.isVideo;\n        if (isVideo === \"auto\") isVideo = /\\.(mp4|webm|ogg|mkv|webm|avi)$/i.test(this.url);\n\n        this.media = document.createElement(isVideo ? \"video\" : \"img\");\n        this.media.className = \"media-popup-media\";\n        this.media.src = this.url;\n        // @ts-ignore if isVideo media will be video\n        if (isVideo) this.media.controls = true;\n\n        const controls = document.createElement(\"div\");\n        controls.className = \"media-popup-controls\";\n\n        this.controlsResets = [];\n        const lang = LangPkg.media;\n        this.addControlGroup(controls, [\n            { icon: lang.zoom + \"+\", action: () => this.zoom(1 + this.options.scaleStep), title: lang.zoom_in },\n            { icon: lang.zoom + \"-\", action: () => this.zoom(1 - this.options.scaleStep), title: lang.zoom_out },\n            { icon: lang.rotate + \" <\", action: () => this.rotate(-this.options.rotationStep), title: lang.rotate_left },\n            { icon: lang.rotate + \" >\", action: () => this.rotate(this.options.rotationStep), title: lang.rotate_right },\n            { icon: lang.flip, action: () => this.flip(), title: lang.flip },\n            { icon: lang.reset, action: () => this.resetTransforms(), title: lang.reset_transforms },\n            { icon: \"\u2716\", action: () => this.close(), title: LangPkg.uni.close }\n        ]);\n\n        controls.appendChild(document.createElement(\"br\"));\n\n        const sliders = document.createElement(\"div\");\n        sliders.className = \"media-popup-sliders\";\n        this.addSlider(sliders, \"brightness\", lang.brightness, 0, 200);\n        this.addSlider(sliders, \"contrast\", lang.contrast, 0, 200);\n        this.addSlider(sliders, \"saturation\", lang.saturation, 0, 200);\n        this.addSlider(sliders, \"blur\", lang.blur, 0, 10);\n        controls.appendChild(sliders);\n\n        this.content.appendChild(this.media);\n        this.overlay.appendChild(this.content);\n        this.overlay.appendChild(controls);\n        this.container.appendChild(this.overlay);\n\n        this.setupEventListeners();\n        this.updateTransform();\n    }\n\n    private addControlGroup(container: HTMLElement, controls: { icon: string, action: () => void, title: string }[]) {\n        const group = document.createElement(\"div\");\n        group.className = \"media-popup-control-group\";\n\n        controls.forEach(ctrl => {\n            const button = document.createElement(\"button\");\n            button.className = \"media-popup-btn\";\n            button.textContent = ctrl.icon;\n            button.title = ctrl.title;\n            button.onclick = ctrl.action;\n            group.appendChild(button);\n        });\n\n        container.appendChild(group);\n    }\n\n    private addSlider(container: HTMLElement, property: string, icon: string, min: number, max: number) {\n        const sliderContainer = document.createElement(\"div\");\n        sliderContainer.className = \"media-popup-slider-container\";\n\n        const iconSpan = document.createElement(\"span\");\n        iconSpan.textContent = icon;\n\n        const slider = document.createElement(\"input\");\n        slider.type = \"range\";\n        slider.className = \"media-popup-slider\";\n        slider.min = min.toString();\n        slider.max = max.toString();\n        const defaultValue = this.state[property] ?? 100;\n        slider.value = defaultValue;\n        this.controlsResets.push(() => slider.value = defaultValue);\n\n        const value = document.createElement(\"span\");\n        value.className = \"media-popup-value\";\n        value.textContent = slider.value;\n\n        slider.addEventListener(\"input\", (e) => {\n            const target = e.target as HTMLInputElement;\n            this.state[property] = target.value;\n            value.textContent = target.value;\n            this.updateFilters();\n        });\n\n        sliderContainer.appendChild(iconSpan);\n        sliderContainer.appendChild(slider);\n        sliderContainer.appendChild(value);\n        container.appendChild(sliderContainer);\n    }\n\n    private setupEventListeners() {\n        this.content.addEventListener(\"wheel\", (e: WheelEvent) => {\n            e.preventDefault();\n            const delta = e.deltaY > 0 ? -this.options.scaleStep : this.options.scaleStep;\n            this.zoom(1 + delta);\n        });\n\n        document.addEventListener(\"keydown\", (e: KeyboardEvent) => {\n            if (e.key === \"Escape\") this.close();\n            if (e.key === \"+\") this.zoom(1 + this.options.scaleStep);\n            if (e.key === \"-\") this.zoom(1 - this.options.scaleStep);\n            if (e.key === \"ArrowLeft\") this.rotate(-this.options.rotationStep);\n            if (e.key === \"ArrowRight\") this.rotate(this.options.rotationStep);\n        });\n\n        this.media.addEventListener(\"mousedown\", this.handleMouseDown.bind(this));\n        document.addEventListener(\"mousemove\", this.handleMouseMove.bind(this));\n        document.addEventListener(\"mouseup\", this.handleMouseUp.bind(this));\n\n        this.media.addEventListener(\"touchstart\", this.handleTouchStart.bind(this), { passive: false });\n        this.media.addEventListener(\"touchmove\", this.handleTouchMove.bind(this), { passive: false });\n        this.media.addEventListener(\"touchend\", this.handleTouchEnd.bind(this));\n        this.media.addEventListener(\"touchcancel\", this.handleTouchEnd.bind(this));\n    }\n\n    private handleMouseDown(e: MouseEvent) {\n        e.preventDefault();\n        this.state.isDragging = true;\n        this.state.dragStart = {\n            x: e.clientX - this.state.position.x,\n            y: e.clientY - this.state.position.y\n        };\n    }\n\n    private handleMouseMove(e: MouseEvent) {\n        if (!this.state.isDragging) return;\n\n        this.state.position = {\n            x: e.clientX - this.state.dragStart.x,\n            y: e.clientY - this.state.dragStart.y\n        };\n\n        this.updateTransform();\n    }\n\n    private handleMouseUp() {\n        this.state.isDragging = false;\n    }\n\n    private handleTouchStart(e: TouchEvent) {\n        e.preventDefault();\n        const touches = e.touches;\n        this.state.previousTouches = Array.from(touches).map(t => ({\n            identifier: t.identifier,\n            pageX: t.pageX,\n            pageY: t.pageY\n        }));\n\n        if (touches.length === 1) {\n            const touch = touches[0];\n            const now = Date.now();\n            const lastTap = this.state.lastTap;\n            const lastTapPosition = this.state.lastTapPosition;\n\n            if (now - lastTap < this.options.doubleTapDelay &&\n                this.getDistance(\n                    { x: touch.pageX, y: touch.pageY },\n                    lastTapPosition\n                ) < 30) {\n                this.handleDoubleTap(touch);\n            }\n\n            this.state.lastTap = now;\n            this.state.lastTapPosition = { x: touch.pageX, y: touch.pageY };\n            this.startDrag(touch);\n\n        } else if (touches.length === 2) {\n            this.state.initialPinchDistance = this.getPinchDistance(touches);\n            this.state.initialRotation = this.getRotationAngle(touches);\n            this.state.isDragging = false;\n        }\n    }\n\n    private handleTouchMove(e: TouchEvent) {\n        e.preventDefault();\n        const touches = e.touches;\n\n        if (!this.state.previousTouches) return;\n\n        if (touches.length === 1 && this.state.isDragging) {\n            this.drag(touches[0]);\n\n        } else if (touches.length === 2) {\n            const currentDistance = this.getPinchDistance(touches);\n            const currentRotation = this.getRotationAngle(touches);\n\n            if (this.state.initialPinchDistance > 0) {\n                const scale = currentDistance / this.state.initialPinchDistance;\n                this.handlePinch(scale);\n            }\n\n            if (this.state.initialRotation !== null) {\n                const rotation = currentRotation - this.state.initialRotation;\n                this.handleRotation(rotation);\n            }\n\n            this.state.previousTouches = Array.from(touches).map(t => ({\n                identifier: t.identifier,\n                pageX: t.pageX,\n                pageY: t.pageY\n            }));\n        }\n    }\n\n    private handleTouchEnd(e: TouchEvent) {\n        e.preventDefault();\n\n        if (e.touches.length === 0) {\n            this.state.isDragging = false;\n            this.state.initialPinchDistance = null;\n            this.state.initialRotation = null;\n            this.state.previousTouches = null;\n        }\n    }\n\n    private handleDoubleTap(touch: Touch) {\n        const zoomFactor = this.state.scale > 1 ? 1 : 2;\n        this.zoom(zoomFactor, touch.pageX, touch.pageY);\n    }\n\n    private startDrag(touch: Touch) {\n        this.state.isDragging = true;\n        this.state.dragStart = {\n            x: touch.pageX - this.state.position.x,\n            y: touch.pageY - this.state.position.y\n        };\n    }\n\n    private drag(touch: Touch) {\n        this.state.position = {\n            x: touch.pageX - this.state.dragStart.x,\n            y: touch.pageY - this.state.dragStart.y\n        };\n        this.updateTransform();\n    }\n\n    private handlePinch(scale: number) {\n        this.zoom(scale);\n    }\n\n    private handleRotation(angle: number) {\n        this.state.rotation = angle;\n        this.updateTransform();\n    }\n\n    private zoom(scaleFactor: number, centerX: number | undefined = undefined, centerY: number | undefined = undefined) {\n        const newScale = this.state.scale * scaleFactor;\n\n        if (newScale < this.options.minScale || newScale > this.options.maxScale) return;\n\n        if (centerX !== undefined && centerY !== undefined) {\n            this.state.position.x += (this.media.clientWidth / 2 - centerX) * (1 - scaleFactor);\n            this.state.position.y += (this.media.clientHeight / 2 - centerY) * (1 - scaleFactor);\n        }\n\n        this.state.scale = newScale;\n        this.updateTransform();\n    }\n\n    private rotate(angle: number) {\n        this.state.rotation += angle;\n        this.updateTransform();\n    }\n\n    private flip() {\n        this.state.rotation += 180;\n        this.updateTransform();\n    }\n\n    private resetTransforms() {\n        this.state = {\n            ...this.state,\n            scale: 1,\n            rotation: 0,\n            position: { x: 0, y: 0 },\n            brightness: 100,\n            contrast: 100,\n            saturation: 100,\n            blur: 0,\n        };\n        this.updateFilters();\n        this.updateTransform();\n        this.controlsResets.forEach(r => r());\n    }\n\n    private updateTransform() {\n        this.media.style.transform = `\n        translate(${this.state.position.x}px, ${this.state.position.y}px)\n        scale(${this.state.scale})\n        rotate(${this.state.rotation}deg)\n      `;\n    }\n\n    private updateFilters() {\n        this.media.style.filter = `\n        brightness(${this.state.brightness}%)\n        contrast(${this.state.contrast}%)\n        saturate(${this.state.saturation}%)\n        blur(${this.state.blur}px)\n      `;\n    }\n\n    private close() {\n        const _this = this;\n        this.overlay.fadeOut(() => _this.container.removeChild(_this.overlay));\n    }\n\n    private getPinchDistance(touches: TouchList) {\n        const dx = touches[0].pageX - touches[1].pageX;\n        const dy = touches[0].pageY - touches[1].pageY;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    private getRotationAngle(touches: TouchList) {\n        return Math.atan2(\n            touches[1].pageY - touches[0].pageY,\n            touches[1].pageX - touches[0].pageX\n        ) * (180 / Math.PI);\n    }\n\n    private getDistance(p1: { x: number, y: number }, p2: { x: number, y: number }) {\n        return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n    }\n}\n\nfunction createMediaPopup(media: string, options = {}) {\n    return new MediaPopup(mediaPopupDiv, media, options);\n}\n\nexport default createMediaPopup;\nexport { MediaPopup };\nmglInt.createMediaPopup = createMediaPopup;", "import cw from \"../../../core\";\nimport hub from \"../../../hub\";\nimport createMediaPopup from \"../../../ui/components/media\";\nhub(\"mess/format/media\");\n\nexport default function format_media(link: string) {\n    if (!link) return;\n\n    function check(link) {\n        const xhr = new XMLHttpRequest();\n        xhr.open(\"HEAD\", link, false);\n        xhr.send();\n        return xhr.status == 200;\n    }\n\n    if (/\\.(mp3|wav|ogg|.m4a)$/i.test(link)) {\n        if (!check(link)) return;\n        const ele = document.createElement(\"audio\");\n        ele.src = link;\n        ele.controls = true;\n        return ele;\n    }\n\n    if (/\\.(mp4|mkv|webm|avi)$/i.test(link)) {\n        if (!check(link)) return;\n        const ele = document.createElement(\"video\");\n        ele.src = link;\n        ele.controls = true;\n        ele.style.maxWidth = \"65%\";\n        ele.style.height = \"auto\";\n        ele.style.borderRadius = \"2rem\";\n        ele.style.cursor = \"zoom-in\";\n        ele.onclick = () => createMediaPopup(link, { isVideo: true });\n        return ele;\n    }\n\n    if (/\\.(png|jpg|gif|ico|jpeg|webp|svg)$/i.test(link)) {\n        if (!check(link)) return;\n        const ele = document.createElement(\"img\");\n        ele.src = link;\n        ele.style.maxWidth = \"100%\";\n        ele.style.height = \"auto\";\n        ele.style.cursor = \"zoom-in\";\n        ele.onclick = () => createMediaPopup(link, { isVideo: false });\n        return ele;\n    }\n\n    if (link.includes(\"youtube.com\") || link.includes(\"youtu.be\")) {\n        function extractYouTubeVideoId(link) {\n            const match = link.match(/(?:\\?v=|\\/embed\\/|\\.be\\/|\\/v\\/|\\/\\d{1,2}\\/|\\/e\\/|watch\\?v=|youtu\\.be\\/|youtube\\.com\\/(?:v|e|embed)\\/|youtube\\.com\\/user\\/[^#\\/]+#p\\/[^#\\/]+\\/)([^\"&?\\/ ]{11})/);\n            return (match && match[1]) ? match[1] : null;\n        }\n\n        const videoId = extractYouTubeVideoId(link);\n        const iframe = document.createElement(\"iframe\");\n        iframe.src = `https://www.youtube.com/embed/${videoId}`;\n\n        iframe.allowFullscreen = true;\n        iframe.style.maxWidth = \"100%\";\n        iframe.style.width = \"500px\";\n        iframe.style.height = \"300px\";\n        iframe.style.borderRadius = \"2rem\";\n        return iframe;\n    }\n\n    if (link.includes(\"tiktok.com\")) {\n        const iframe = document.createElement(\"iframe\");\n        function extractTikTokVideoId(link) {\n            const regex = /tiktok\\.com\\/(?:@[\\w.-]+\\/video\\/|v\\/|embed\\/v2\\/)([\\w-]+)/;\n            const match = link.match(regex);\n            return match ? match[1] : null;\n        }\n        const videoId = extractTikTokVideoId(link);\n        iframe.src = `https://www.tiktok.com/embed/v2/${videoId}`;\n        iframe.allowFullscreen = true;\n\n        iframe.style.maxWidth = \"100%\";\n        iframe.style.width = \"400px\";\n        iframe.style.height = \"700px\";\n        iframe.style.borderRadius = \"2rem\";\n        return iframe;\n    }\n\n    if (link.includes(\"reddit.com\")) {\n        const l = link.split(\"?\") || [link];\n        link = l[0];\n        if (!link.endsWith(\"/\")) link += \"/\";\n\n        const api = JSON.parse(cw.get(`${link}.json?limit=2`));\n        const post = api[0]?.data.children[0]?.data;\n        const ele = document.createElement(\"div\");\n\n        const title = post.title;\n        const author = post.author;\n        ele.innerHTML = `autor: ${author}<br />tytu\u0142: ${title}`\n        return ele;\n    }\n\n    if (link.includes(\"spotify.com\")) {\n        const iframe = document.createElement(\"iframe\");\n        function extractSpotifyId(link) {\n            const trackMatch = link.match(/track\\/([a-zA-Z0-9]+)/);\n            if (trackMatch && trackMatch[1]) {\n                return \"track/\" + trackMatch[1];\n            }\n            const playlistMatch = link.match(/playlist\\/([a-zA-Z0-9]+)/);\n            if (playlistMatch && playlistMatch[1]) {\n                return \"playlist/\" + playlistMatch[1];\n            }\n            return null;\n        }\n        const videoId = extractSpotifyId(link);\n        if (!videoId) return null;\n        iframe.src = `https://open.spotify.com/embed/${videoId}`;\n        iframe.allowFullscreen = true;\n\n        iframe.style.maxWidth = \"100%\";\n        iframe.style.width = \"400px\";\n        iframe.style.height = \"84px\";\n        iframe.style.borderRadius = \"1rem\";\n        return iframe;\n    }\n}", "import hub from \"../../../hub\";\nhub(\"mess/format/list\");\n\ninterface ListChild {\n    line: string;\n    lvl: number;\n}\n\nconst format_list = {\n    calculateLevels(lines: string[]) {\n        const result = [];\n        let spacePerLvl = null;\n\n        lines.forEach((line, index) => {\n            const trimmedLine = line.trim();\n            if (trimmedLine === \"\") {\n                result.push({ line, lvl: 0 });\n                return;\n            }\n\n            const spaces = line.length - line.trimStart().length;\n\n            if (spacePerLvl === null) {\n                if (index > 0 && spaces > 0) {\n                    const prevSpaces = lines[index - 1].length - lines[index - 1].trimStart().length;\n                    if (spaces > prevSpaces) {\n                        spacePerLvl = spaces - prevSpaces;\n                    }\n                }\n            }\n\n            if (spacePerLvl !== null && spaces % spacePerLvl !== 0) {\n                const fixedSpaces = Math.round(spaces / spacePerLvl) * spacePerLvl;\n                result.push({ line, lvl: fixedSpaces / spacePerLvl });\n            } else {\n                const lvl = spacePerLvl ? spaces / spacePerLvl : (spaces > 0 ? 1 : 0);\n                result.push({ line, lvl });\n            }\n        });\n\n        return result;\n    },\n\n    buildTree(linesWithLevels: ListChild[]) {\n        const listItemRegex = /^(?:[-*]|\\d+[.)]?|[a-zA-Z][.)])\\s/;\n        const root = [];\n        const stack = [{ children: root, lvl: -1 }];\n\n        function getBulletType(line: string) {\n            const trimmed = line.trim();\n            if (/^[-*]\\s/.test(trimmed)) return \"bullet\";\n            if (/^\\d[.)]?\\s/.test(trimmed)) return \"decimal\";\n            if (/^[a-z][.)]?\\s/.test(trimmed)) return \"lower-alpha\";\n            if (/^[A-Z][.)]?\\s/.test(trimmed)) return \"upper-alpha\";\n            return null;\n        }\n\n        linesWithLevels.forEach(({ line, lvl }) => {\n            const trimmedLine = line.trim();\n            const isListItem = listItemRegex.test(trimmedLine);\n            const bulletType = isListItem ? getBulletType(trimmedLine) : null;\n\n            const node = { line, children: [], bulletType };\n\n            while (stack.length > 0 && stack[stack.length - 1].lvl >= lvl) {\n                stack.pop();\n            }\n\n            stack[stack.length - 1].children.push(node);\n            stack.push({ ...node, lvl });\n        });\n\n        return root;\n    },\n\n    treeToHtml(tree: ListChild[], marginValue: number, marginUnits: string) {\n        let html = \"\";\n        const listMapOl = [\"decimal\", \"lower-alpha\", \"upper-alpha\", \"lower-roman\", \"upper-roman\"];\n        let listEnd = true;\n\n        function processNode(node, lvl = 0) {\n            if (node.bulletType === null) {\n                html += node.line.trim() + \"<br />\";\n                listEnd = true;\n            } else {\n                const listTag = listMapOl.includes(node.bulletType) ? \"ol\" : \"ul\";\n                const [, ...content] = node.line.trim().split(/\\s+/);\n                if (listEnd) html += `<${listTag} style=\"list-style-type: ${node.bulletType};\">`;\n                html += `<li style=\"margin-left: ${marginValue * (lvl + 1)}${marginUnits}; list-style-type: ${node.bulletType};\">${content}</li>`;\n\n                if (node.children.length > 0) {\n                    listEnd = true;\n                    node.children.forEach((child: ListChild) => {\n                        processNode(child, lvl + 1);\n                    });\n                    listEnd = false;\n                }\n\n                if (listEnd) html += `</${listTag}>`;\n                listEnd = false;\n            }\n        }\n\n        tree.forEach(node => {\n            processNode(node);\n        });\n\n        return html;\n    },\n\n    cpu(text: string, marginValue: number = 0, marginUnits: string = \"\") {\n        const lines = text.split(/\\n|\\<br\\>|\\<br\\/\\>|\\<br \\/>/);\n        const levels = format_list.calculateLevels(lines);\n        const tree = format_list.buildTree(levels);\n        const html = format_list.treeToHtml(tree, marginValue, marginUnits);\n        return html.replace(/<br\\s*\\/?>\\s*$/i, \"\");\n    }\n}\n\nexport default format_list;", "import hub from \"../../../hub\";\nhub(\"mess/format/table\");\n\nexport default function format_wrapTable(tableText: string) {\n    const rows = tableText.trim().split(\"\\n\");\n    let htmlTable = `<div class=\"table_wrap\"><table>`;\n\n    rows.forEach((row, index) => {\n        const columns = row.split(\"|\").map(cell => cell.trim()).filter(cell => cell);\n\n        if (index === 0) {\n            htmlTable += \"<thead><tr>\";\n            columns.forEach(column => {\n                htmlTable += `<th>${column}</th>`;\n            });\n            htmlTable += \"</tr></thead><tbody>\";\n        } else {\n            htmlTable += \"<tr>\";\n            columns.forEach(column => {\n                htmlTable += `<td>${column}</td>`;\n            });\n            htmlTable += \"</tr>\";\n        }\n    });\n    htmlTable += \"</tbody></table></div>\";\n    return htmlTable;\n}", "import hub from \"../../../hub\";\nimport utils from \"../../../utils/utils\";\nimport vars from \"../../../var/var\";\nimport format_list from \"./list\";\nimport format_wrapTable from \"./table\";\nhub(\"mess/format/text\");\n\nexport default function format_text(text: string) {\n    text = text\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n\n    const excludePattern = /\\`\\`\\`(.*?)\\`\\`\\`/gs;\n    const excludeMatches = text.match(excludePattern);\n    const exclusions = [];\n    if (excludeMatches) {\n        for (const match of excludeMatches) {\n            const exclusion = match.slice(3, -3);\n            exclusions.push(exclusion);\n            const placeholder = `@EXCLUSION${exclusions.length}@`;\n            text = text.replace(match, placeholder);\n        }\n    }\n\n    text = text.replace(/((?:^\\|.*\\|$\\n?)+)/gm, match => format_wrapTable(match))\n\n    text = markCpu(text, \"**\", \"b\");\n    text = markCpu(text, \"//\", \"i\");\n    text = markCpu(text, \"--\", \"strike\");\n    text = markCpu(text, \"__\", \"u\");\n\n    text = text\n        .replace(/(https?:\\/\\/[^\\s]+)/g, '<a href=\"$1\" onclick=\"mglInt.mess.linkClick(event)\">$1</a>')\n        .replace(/(\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\\b)/g, '<a href=\"mailto:$1\">$1</a>')\n\n        .replace(/##([0-9A-Fa-f]{3,6})\\s(.*?)\\s#c/g, '<span style=\"color:#$1\">$2</span>')\n        .replace(/#([a-zA-Z]+)\\s(.*?)\\s#c/g, '<span style=\"color:$1\">$2</span>')\n        .replace(/#(fc)\\s(.*?)\\s#c/gi, '<span style=\"color:var(--accent)\">$2</span>')\n\n        .replace(/(?:&lt;|<)\\!\\s*(.*?)\\s*!(?:&gt;|>)/g, '<span class=\"spoiler\" onclick=\"mglInt.mess.spoiler(event)\">$1</span>')\n\n        .replaceAll(\"\\n\", \"<br />\")\n        .replaceAll(\"\\\\n\", \"<br />\")\n        .replace(/(?<=^|\\s)---(?=\\s|$)/g, \"<hr />\")\n\n    text = format_list.cpu(text, 1, \"rem\");\n\n    for (let i = 0; i < exclusions.length; i++) {\n        const exclusion = `<pre>${exclusions[i]}</pre>`;\n        const placeholder = `@EXCLUSION${i + 1}@`;\n        text = text.replace(placeholder, exclusion);\n    }\n\n    text = text.replace(/:([a-z0-9]+-[a-z0-9]+-[a-z0-9]+):/g, (match, emojiId) => {\n        return `<img src=\"/userFiles/realms/${vars.chat.to}/emojis/${emojiId}.png\" class=\"message_emoji\" alt=\":${emojiId}:\">`;\n    });\n\n    return text;\n}\n\nfunction markCpu(text: string, marker: string, htmlTag: string): string {\n    let result = '';\n    let isInsideMarker = false;\n    let tempBuffer = '';\n\n    for (let i = 0; i < text.length; i++) {\n        if (text.slice(i, i + marker.length) === marker) {\n            if (isInsideMarker) {\n                // Closing marker found\n                if (tempBuffer.trim() === '' || tempBuffer.startsWith(' ') || tempBuffer.endsWith(' ')) {\n                    result += marker + tempBuffer + marker; // Invalid case, keep original\n                } else {\n                    result += `<${htmlTag}>${tempBuffer}</${htmlTag}>`;\n                }\n                tempBuffer = '';\n                isInsideMarker = false;\n            } else {\n                // Opening marker found\n                if (tempBuffer === '') {\n                    isInsideMarker = true;\n                } else {\n                    result += tempBuffer;\n                }\n                tempBuffer = '';\n            }\n            i += marker.length - 1; // Skip the marker\n        } else {\n            if (isInsideMarker) {\n                tempBuffer += text[i];\n            } else {\n                result += text[i];\n            }\n        }\n    }\n\n    // Handle unclosed markers\n    if (isInsideMarker) {\n        result += marker + tempBuffer; // Add back the incomplete marker\n    }\n\n    return result;\n}", "import hub from \"../../hub\";\nimport format_media from \"./format/media\";\nimport format_text from \"./format/text\";\nhub(\"mess/format\");\n\nconst formatFunc = {\n    formatMess(mess_plain: string, div: HTMLDivElement) {\n        let mess = format_text(mess_plain);\n        div.innerHTML = mess;\n\n        const elements = formatFunc.getElements(mess_plain);\n        for (const element of elements) {\n            div.appendChild(document.createElement(\"br\"));\n            div.appendChild(element);\n        }\n\n        if(isEmojiMessage(mess_plain, div)) {\n            div.classList.add(\"mess__text__emoji\");\n        }\n    },\n\n    getElements(text: string) {\n        const regex = /(https?:\\/\\/[^\\s]+)/g;\n        const matches = text.match(regex);\n        if (!matches) return [];\n        return matches.map(link => format_media(link)).filter(ele => !!ele);\n    },\n}\n\nfunction isEmojiMessage(mess_plain: string, div: HTMLDivElement) {\n    const isNativeEmoji = /^[\\p{Extended_Pictographic}]+$/u.test(mess_plain);\n    const isCustomEmoji = /^(:[a-z0-9]+-[a-z0-9]+-[a-z0-9]+:)+$/g.test(mess_plain);\n\n    if(isCustomEmoji){\n        div.querySelectorAll(\"img\").forEach(img => {\n            function notLoaded() {\n                img.removeEventListener(\"error\", notLoaded);\n                div.clR(\"mess__text__emoji\");\n            }\n            img.addEventListener(\"error\", notLoaded);\n        });\n    }\n\n    return isNativeEmoji || isCustomEmoji;\n}\n\nexport default formatFunc;", "import hub from \"../hub\";\nimport Id from \"../types/Id\";\nimport uiFunc from \"../ui/helpers/uiFunc\";\nimport { Api_fileFunc_read__options } from \"../types/api\";\nimport debugFunc, { LogLevel } from \"../core/debug\";\nimport LangPkg from \"../utils/translate\";\nhub(\"file\");\n\nconst fileFunc = {\n    read(options: Api_fileFunc_read__options) {\n        const { file, callback, maxSize, maxName, endpoint } = options;\n        if (!file || !callback || !maxSize || !maxName || !endpoint) {\n            return;\n        }\n\n        if (file.size > maxSize) {\n            uiFunc.uiMsgT(LangPkg.ui.file.size_limit, (maxSize / 1024 / 1024) + \"MB\");\n            return;\n        }\n        if (file.name.length > maxName) {\n            uiFunc.uiMsgT(LangPkg.ui.file.name_limit, maxName);\n            return;\n        }\n\n        const reader = new FileReader();\n        reader.onload = () => {\n            const xhr = new XMLHttpRequest();\n            xhr.open(\"POST\", endpoint);\n\n            xhr.onload = () => {\n                if (xhr.status === 200) {\n                    uiFunc.uiMsgT(LangPkg.ui.file.uploaded);\n                    callback(xhr);\n                } else {\n                    uiFunc.uiMsgT(LangPkg.ui.file.upload_error, [\": \" + xhr.statusText]);\n                }\n            };\n\n            xhr.onerror = () => {\n                uiFunc.uiMsgT(LangPkg.ui.file.upload_error);\n            }\n\n            const token = localStorage.getItem(\"token\");\n            if (!token) {\n                uiFunc.uiMsgT(LangPkg.api.auth_error);\n                return;\n            }\n\n            xhr.setRequestHeader(\"Authorization\", token);\n            const formData = new FormData();\n            formData.append(\"file\", file);\n            if (options.additionalFields) options.additionalFields(xhr, formData);\n            xhr.send(formData);\n        };\n\n        reader.readAsArrayBuffer(file);\n    },\n\n    profile(file: File) {\n        const opt: Api_fileFunc_read__options = {\n            file,\n            callback: () => {\n                debugFunc.msg(LogLevel.INFO, LangPkg.ui.file.uploaded);\n            },\n            maxSize: 4 * 1024 * 1024,\n            maxName: 60,\n            endpoint: \"/api/profile/upload\"\n        }\n\n        fileFunc.read(opt);\n    },\n\n    realm(file: File, id: Id) {\n        const opt: Api_fileFunc_read__options = {\n            file,\n            callback: () => {\n                debugFunc.msg(LogLevel.INFO, LangPkg.ui.file.uploaded);\n            },\n            maxSize: 4 * 1024 * 1024,\n            maxName: 60,\n            endpoint: \"/api/realm/profile/upload\",\n            additionalFields: (xhr: XMLHttpRequest) => {\n                xhr.setRequestHeader(\"realm\", id);\n            }\n        }\n\n        fileFunc.read(opt);\n    },\n\n    emocji(file: File, realmId: Id) {\n        const opts: Api_fileFunc_read__options = {\n            file: file,\n            callback: () => {\n                debugFunc.msg(LogLevel.INFO, LangPkg.ui.file.uploaded);\n            },\n            maxSize: 4 * 1024 * 1024,\n            maxName: 100,\n            endpoint: \"/api/emoji/upload\",\n            additionalFields: (xhr: XMLHttpRequest) => {\n                xhr.setRequestHeader(\"realm\", realmId);\n            }\n        };\n\n        fileFunc.read(opts);\n    },\n};\n\nexport default fileFunc;", "import cw from \"../../core\";\nimport hub from \"../../hub\";\nimport { Ui_EmojiData, Ui_EmojiData_emoji } from \"../../types/ui/components\";\nimport { emojiHTML } from \"../../var/html\";\nimport { mglVar } from \"../../var/mgl\";\nimport vars from \"../../var/var\";\nhub(\"components/emoji\");\n\nconst emojiData: Ui_EmojiData = JSON.parse(cw.get(\"/assets/emoji.json\"));\n\nexport const customEmoji: Ui_EmojiData = {\n    categories: [],\n    emojis: {},\n}\n\nconst emojiFunc = {\n    getMathEmojisName(searchEmojiName: string) {\n        const categories = [...customEmoji.categories, ...emojiData.categories];\n        const maths = {};\n\n        function processEmoji(cid, emojiName) {\n            if (emojiName.includes(searchEmojiName)) {\n                if (!maths[cid]) maths[cid] = [];\n                maths[cid].push(emojiName);\n            } else {\n                const emoji = emojiFunc.getEmojiFromName(emojiName);\n                if (emoji.keywords.filter(k => k.includes(searchEmojiName)).length > 0) {\n                    if (!maths[cid]) maths[cid] = [];\n                    maths[cid].push(emojiName);\n                }\n            }\n        }\n\n        for (const category of categories) {\n            for (const emojiName of category.emojis) {\n                processEmoji(category.id, emojiName);\n            }\n        }\n\n        return maths;\n    },\n\n    getEmojiFromName(emojiName: string): Ui_EmojiData_emoji | null {\n        let emoji = customEmoji.emojis[emojiName];\n        if (emoji) return emoji;\n\n        emoji = emojiData.emojis[emojiName];\n        return emoji ? emoji : null;\n    },\n\n    renderEmoji() {\n        const input = emojiHTML.input.value;\n        const maths = emojiFunc.getMathEmojisName(input);\n        emojiHTML.container.innerHTML = \"\";\n        emojiHTML.nav.innerHTML = \"\";\n\n        for (const cid of Object.keys(maths)) {\n            const category = maths[cid];\n            if (!category) continue;\n\n            const navButton = document.createElement(\"button\");\n            navButton.classList.add(\"btn\");\n            navButton.innerHTML = cid;\n            emojiHTML.nav.appendChild(navButton);\n\n            const catDiv = document.createElement(\"div\");\n            catDiv.innerHTML = `<h1>${cid}</h1>`;\n\n            const catContainer = document.createElement(\"div\");\n            catContainer.classList.add(\"emoji__category\");\n            catDiv.appendChild(catContainer);\n\n            for (const emojiName of category) {\n                const emoji = emojiFunc.getEmojiFromName(emojiName);\n                if (!emoji) continue;\n\n                let emojiDiv;\n                if (emoji.html) {\n                    emojiDiv = document.createElement(\"img\");\n                    emojiDiv.src = `/userFiles/realms/${vars.chat.to}/emojis/${emoji.id}.png`;\n                    emojiDiv.setAttribute(\"data-name\", emoji.name);\n                    emojiDiv.classList.add(\"emoji__img\");\n                } else {\n                    emojiDiv = document.createElement(\"span\");\n                    emojiDiv.innerHTML = emoji.skins[0]?.native;\n                }\n                emojiDiv.classList.add(\"emoji__item\");\n                catContainer.appendChild(emojiDiv);\n\n                emojiDiv.addEventListener(\"click\", emojiFunc.emojiClick);\n            }\n\n            emojiHTML.container.appendChild(catDiv);\n\n            navButton.addEventListener(\"click\", () => {\n                emojiHTML.container.scrollTop = catDiv.offsetTop - emojiHTML.container.offsetTop - 5;\n            });\n        }\n    },\n\n    emojiClick(e: MouseEvent) {\n        let emoji = \"\";\n        if (e) {\n            const target = e.target as HTMLElement;\n            const emojiName = target.getAttribute(\"data-name\");\n            if (emojiName) {\n                const emojiData = emojiFunc.getEmojiFromName(emojiName);\n                if (emojiData)\n                    emoji = `:${emojiData.id}:`;\n            } else {\n                emoji = target.innerHTML;\n            }\n        }\n        const event = new CustomEvent(\"emocji\", {\n            detail: emoji\n        });\n        emojiHTML.div.dispatchEvent(event);\n    }\n}\n\nemojiHTML.input.addEventListener(\"input\", emojiFunc.renderEmoji);\nemojiFunc.renderEmoji();\n\nexport default emojiFunc;\nmglVar.emojiFunc = emojiFunc;\nmglVar.customEmoji = customEmoji;", "import hub from \"../../hub\";\nhub(\"mess/interact\");\n\nimport messFunc from \"./mess\";\nimport messStyle from \"./style\";\nimport vars from \"../../var/var\";\nimport apis from \"../../api/apis\";\nimport coreFunc from \"../coreFunc\";\nimport socket from \"../socket/socket\";\nimport uiFunc from \"../../ui/helpers/uiFunc\";\nimport { Vars_realm__thread } from \"../../types/var\";\nimport messCmd, { messCmds, setCurrentCmd } from \"./cmd\";\nimport { emojiHTML, messHTML } from \"../../var/html\";\nimport { mglInt } from \"../../var/mgl\";\nimport emojiFunc, { customEmoji } from \"../../ui/components/emoji\";\nimport LangPkg from \"../../utils/translate\";\nimport Id from \"../../types/Id\";\n\nconst messInteract = {\n    replyClose() {\n        messHTML.replyClose.style.display = \"none\";\n        if (vars.temp.replyId) (document.querySelector(\"#mess__\" + vars.temp.replyId) as HTMLElement).style.backgroundColor = \"\";\n        vars.temp.replyId = null;\n    },\n\n    editMessClose() {\n        messHTML.editClose.style.display = \"none\";\n        messHTML.input.value = \"\";\n        vars.temp.editId = null;\n        coreFunc.focusInp();\n        messStyle.sendBtnStyle();\n        messStyle.messageHeight();\n        messStyle.setSelectionStart();\n    },\n\n    linkClick(e: MouseEvent) {\n        e.preventDefault();\n        let url = (e.target as HTMLElement).getAttribute(\"href\");\n        if (!url) return;\n\n        if (!/^(https?:\\/\\/)/i.test(url)) url = \"http://\" + url;\n\n        const urlParts = url.split(\"/\");\n        if (urlParts.length < 2) return uiFunc.uiMsgT(LangPkg.ui.message.invalid_link);\n        const urlColored =\n            urlParts[0] + \"//\" +\n            \"<span>\" + urlParts[2] + \"</span>\" +\n            \"/\" + urlParts.slice(3).join(\"/\")\n\n        const end = () => {\n            messHTML.linkClick.fadeOut();\n            messHTML.linkClick.querySelector(\"#linkClick_yes\").removeEventListener(\"click\", handleYesClick);\n            messHTML.linkClick.querySelector(\"#linkClick_no\").removeEventListener(\"click\", end);\n        }\n        const handleYesClick = () => {\n            window.open(url, \"_blank\");\n            end();\n        }\n        messHTML.linkClick.fadeIn();\n        messHTML.linkClick.querySelector(\"#linkClick_link\").innerHTML = urlColored;\n        messHTML.linkClick.querySelector(\"#linkClick_yes\").addEventListener(\"click\", handleYesClick);\n        messHTML.linkClick.querySelector(\"#linkClick_no\").addEventListener(\"click\", end);\n    },\n\n    emocjiPopup(cb: (emoticon: string) => void) {\n        emojiHTML.div.fadeIn();\n        function evt(e: CustomEvent) {\n            cb(e.detail);\n            emojiHTML.div.removeEventListener(\"emocji\", evt);\n            emojiHTML.div.fadeOut();\n            setTimeout(() => {\n                coreFunc.focusInp();\n                messStyle.setSelectionStart();\n            }, 100);\n        }\n\n        setTimeout(() => {\n            emojiHTML.div.addEventListener(\"emocji\", evt);\n            emojiHTML.input.value = \"\";\n            emojiFunc.renderEmoji();\n\n            const to = vars.chat.to;\n            if (to == \"main\" || to.startsWith(\"$\")) return;\n            socket.emit(\"realm.emojis.sync\", to, (emojis: {name: string, emoji: Id}[]) => {\n                customEmoji.categories = [{\n                    id: \"Custom\",\n                    emojis: [\n                        ...emojis.map(emoji => emoji.name)\n                    ]\n                }];\n\n                customEmoji.emojis = {}\n                emojis.forEach(emoji => {\n                    customEmoji.emojis[emoji.name] = {\n                        id: emoji.emoji,\n                        name: emoji.name,\n                        keywords: [emoji.name],\n                        skins: [],\n                        html: true\n                    }\n                });\n\n                emojiFunc.renderEmoji();\n            });\n        }, 100);\n    },\n\n    emocji() {\n        messInteract.emocjiPopup((emoticon: string) => {\n            messInteract.handleEmocji(emoticon);\n            setTimeout(() => {\n                messStyle.setSelectionStart();\n            }, 100);\n        });\n    },\n\n    handleEmocji(emoji: string) {\n        if (!emoji) return;\n        messHTML.input.value += emoji;\n    },\n\n    search() {\n        messHTML.input.value = \"/search \";\n        setCurrentCmd(messCmds.system.search);\n\n        const evt = new Event(\"input\");\n        messHTML.input.dispatchEvent(evt);\n\n        messCmd.handleCommandInput();\n    },\n\n    displayPinned() {\n        messHTML.div.innerHTML = \"<h2>\" + LangPkg.ui.pinned_messages + \"</h2>\";\n        if (vars.chat.pinned.length == 0) {\n            messHTML.div.innerHTML += LangPkg.ui.no_pinned_messages;\n            return;\n        }\n        vars.chat.pinned.forEach((m) => {\n            messFunc.addMess(m);\n        });\n    },\n\n    spoiler(e: MouseEvent) {\n        e.preventDefault();\n        const t = e.target as HTMLElement;\n        t.clT(\"spoiler__show\");\n    },\n\n    thread(thread: Vars_realm__thread, messDiv: HTMLDivElement) {\n        if (!thread) return;\n        if (!messDiv) return;\n        const { _id, name, author } = thread;\n\n        if (messDiv.querySelector(\"#thread__\" + _id)) return;\n\n        const div = document.createElement(\"div\");\n        div.classList.add(\"thread\");\n        div.id = \"thread__\" + _id;\n        div.innerHTML = `\n            \\`- <span class=\"thread__author\">${apis.www.changeUserID(author)}</span> |  \n            <span class=\"thread__name\">${name}</span>`;\n        div.addEventListener(\"click\", () => {\n            coreFunc.changeChnl(\"&\" + _id);\n        });\n        messDiv.add(div);\n    }\n}\n\nmessInteract.replyClose();\nexport default messInteract;\nmglInt.mess = messInteract;", "import hub from \"../hub\";\nhub(\"contextMenuLib\");\n\nconst contextMenuLib = {\n    menuShower(ele: HTMLElement, e: MouseEvent) {\n        ele.style.display = \"block\";\n        _handleClick(e);\n\n        function _handleClick(e: MouseEvent) {\n            window.getSelection().removeAllRanges();\n            contextMenuLib.menuMax(e, ele);\n            document.body.addEventListener(\"click\", _click);\n        }\n\n        function _click() {\n            _removeClick();\n            ele.style.display = \"none\";\n        }\n\n        function _removeClick() {\n            document.body.removeEventListener(\"click\", _click);\n        }\n    },\n\n    menuMax(e: MouseEvent, doc: HTMLElement) {\n        const x = e.clientX;\n        const y = e.clientY;\n        const w = doc.clientWidth;\n        const h = doc.clientHeight;\n\n        doc.style.left = (x + 10) + \"px\";\n        doc.style.top = (y + 10) + \"px\";\n        doc.style.right = \"auto\";\n        doc.style.bottom = \"auto\";\n\n        if (x < 0) doc.style.left = \"10px\";\n        if (y < 0) doc.style.top = \"10px\";\n\n        const width = window.innerWidth;\n        const height = window.innerHeight;\n        if (x + w > width) {\n            doc.style.left = \"auto\";\n            doc.style.right = \"10px\";\n        }\n        if (y + h > height) {\n            doc.style.top = \"auto\";\n            doc.style.bottom = \"10px\";\n        }\n    }\n}\n\nexport default contextMenuLib;", "import hub from \"../../hub\";\nhub(\"components/contextMenu\");\n\nimport contextMenuLib from \"../../lib/contextMenuLib\";\nimport Id from \"../../types/Id\";\nimport { Ui_contextMenu__channelOptions, Ui_contextMenu__messageOptions } from \"../../types/ui/components\";\nimport { Vars_realm__thread } from \"../../types/var\";\nimport permissionFunc, { PermissionFlags } from \"../../utils/perm\";\nimport utils from \"../../utils/utils\";\nimport vars from \"../../var/var\";\n\nconst contextMenu = {\n    showMenu(e: MouseEvent, ele: HTMLElement, id: Id) {\n        ele.setAttribute(\"_id\", id);\n        return contextMenuLib.menuShower(ele, e);\n    },\n\n    message(e: MouseEvent, id: Id, opts: Ui_contextMenu__messageOptions) {\n        const ele = document.querySelector<HTMLElement>(\"#message_context_menu\");\n\n        setDisplayByDataId(ele, \"pin\", opts.pin);\n        setDisplayByDataId(ele, \"unpin\", !opts.pin);\n        setDisplayByDataId(ele, \"delete\", opts.delete);\n        setDisplayByDataId(ele, \"edit\", opts.edit);\n        setDisplayByDataId(ele, \"add_reaction\", vars.realm.chnlPerms[vars.chat.chnl]?.react);\n        setDisplayByDataId(ele, \"create_thread\", vars.realm.chnlPerms[vars.chat.chnl]?.threadCreate);\n\n        this.showMenu(e, ele, id);\n    },\n\n    realm(e: MouseEvent, id: Id) {\n        const ele = document.querySelector<HTMLElement>(\"#realm_context_menu\");\n\n        setDisplayByDataId(ele, \"settings\", canUserManageRealm(id));\n\n        this.showMenu(e, ele, id);\n    },\n\n    channel(e: MouseEvent, id: Id, opts: Ui_contextMenu__channelOptions) {\n        opts = {\n            type: \"text\",\n            ...opts,\n        }\n        const ele = document.querySelector<HTMLElement>(\"#channel_context_menu\");\n\n        setDisplayByDataId(ele, \"subscribe\", [\"announcement\", \"open_announcement\"].includes(opts.type));\n        setDisplayByDataId(ele, \"create_thread\", vars.realm.chnlPerms[vars.chat.chnl]?.threadCreate);\n\n        this.showMenu(e, ele, id);\n    },\n\n    thread(e: MouseEvent, thread: Vars_realm__thread) {\n        const ele = document.querySelector<HTMLElement>(\"#thread_context_menu\");\n\n        const permToDelete = vars.user._id === thread.author || permissionFunc.isAdmin();\n        setDisplayByDataId(ele, \"delete\", permToDelete);\n\n        this.showMenu(e, ele, thread._id);\n    },\n\n\n    menuClickEvent(\n        div: HTMLElement,\n        call: (e: MouseEvent) => void,\n        conditionCb?: (target: HTMLElement) => boolean\n    ) {\n        if (!utils.isMobile()) {\n            div.addEventListener(\"contextmenu\", (e) => {\n                if (conditionCb && !conditionCb(e.target as HTMLElement)) return;\n                e.preventDefault();\n                call(e);\n                return false;\n            });\n            return;\n        }\n\n        let time: number;\n        let holdTimeout: NodeJS.Timeout;\n\n        div.addEventListener(\"mousedown\", startHold);\n        div.addEventListener(\"touchstart\", startHold);\n\n        div.addEventListener(\"mouseup\", cancelHold);\n        div.addEventListener(\"touchend\", cancelHold);\n\n        function startHold(e: MouseEvent | TouchEvent) {\n            time = new Date().getTime();\n            let mouseEvent: MouseEvent;\n\n            if (e instanceof TouchEvent) {\n                mouseEvent = convertTouchEventToMouseEvent(e);\n            } else {\n                mouseEvent = e;\n            }\n\n            holdTimeout = setTimeout(() => {\n                call(mouseEvent);\n            }, 1300);\n        }\n\n        function cancelHold(e: MouseEvent | TouchEvent) {\n            clearTimeout(holdTimeout);\n            time = new Date().getTime() - time;\n            if (time < 2000) return;\n\n            e.preventDefault();\n            return false;\n        }\n    },\n}\n\nfunction convertTouchEventToMouseEvent(touchEvent: TouchEvent): MouseEvent {\n    const touch = touchEvent.touches[0];\n\n    const mouseEvent = new MouseEvent(touchEvent.type, {\n        clientX: touch.clientX,\n        clientY: touch.clientY,\n    });\n\n    return mouseEvent;\n}\nfunction getByDataIdStyle(ele: HTMLElement, id: string) {\n    return ele.querySelector<HTMLElement>(`[data-id='${id}']`).style;\n}\n\nfunction setDisplayByDataId(ele: HTMLElement, id: string, display: boolean) {\n    getByDataIdStyle(ele, id).display = display ? \"\" : \"none\";\n}\n\nfunction canUserManageRealm(id: Id) {\n    const requiredPermissions = [\n        PermissionFlags.Admin,\n        PermissionFlags.ManageChannels,\n        PermissionFlags.ManageRoles,\n        PermissionFlags.ManageWebhooks,\n        PermissionFlags.ManageEmojis,\n    ];\n\n    const perm = vars.realms.find((realm) => realm.realm === id)?.p || 0;\n    return permissionFunc.hasAnyPermission(perm, requiredPermissions);\n}\n\nexport default contextMenu;", "import hub from \"../hub\";\nhub(\"var/staticData\");\n\nconst staticData = {\n    baseTitle: `Fusion Chat`,\n    messCount: 40,\n    uploadImgTypes: [\"image/png\", \"image/jpeg\", \"image/jpg\", \"image/gif\"],\n    contextmenuTags: [\"img\", \"video\", \"audio\", \"a\", \"input\", \"textarea\"],\n}\n\nexport default staticData;", "import hub from \"../../../hub\";\nimport { Core_mess__embed } from \"../../../types/core/mess\";\nhub(\"mess/format/embed\");\n\nexport function format_embed(embedData: Core_mess__embed, messDiv: HTMLDivElement) {\n    const embedContainer = document.createElement(\"div\");\n    embedContainer.classList.add(\"embed\");\n\n    embedContainer.innerHTML = `\n        <div style=\"display: flex;\">\n            ${embedData.image ? `<div style=\"width: 35%;\">\n                <img src=\"${embedData.image}\" style=\"width: 90%;\" />\n            </div>` : \"\"}\n            <div ${embedData.image ? 'style=\"width: 65%;\"' : \"\"}>\n                ${embedData.title ? `<h1>${embedData.title}</h1><br />` : \"\"}\n                ${embedData.description ? `<p>${embedData.description}</p><br />` : \"\"}\n                ${embedData.url ? `\n                    <b>Link: </b>\n                    <a href=\"${embedData.url}\" onclick=\"mglInt.mess.linkClick(event)\">${embedData.url}</a>\n                `: \"\"}\n            </div>\n        </div>\n    `\n\n    if (embedData.customFields) {\n        embedContainer.innerHTML += `<br /><hr>`;\n        const customFieldsContainer = document.createElement(\"div\");\n        customFieldsContainer.classList.add(\"custom-fields\");\n\n        for (const [key, value] of Object.entries(embedData.customFields)) {\n            const fieldContainer = document.createElement(\"div\");\n            fieldContainer.classList.add(\"custom-field\");\n\n            const fieldName = document.createElement(\"strong\");\n            fieldName.innerText = key + \": \";\n            fieldContainer.appendChild(fieldName);\n\n            const fieldValue = document.createElement(\"span\");\n            fieldValue.innerText = value as string;\n            fieldContainer.appendChild(fieldValue);\n\n            customFieldsContainer.appendChild(fieldContainer);\n        }\n        embedContainer.appendChild(customFieldsContainer);\n    }\n\n    messDiv.appendChild(embedContainer);\n}", "import hub from \"../../../hub\";\nimport Id from \"../../../types/Id\";\nhub(\"mess/format/respone\");\n\nexport default function format_responeMess(mess_id: Id, div: HTMLDivElement) {\n    const mess = document.querySelector(`#mess__${mess_id}`);\n    if (!mess) return;\n\n    const messContent = mess.querySelector(\".mess_content\").getAttribute(\"_plain\");\n\n    const resMsgDiv = document.createElement(\"div\");\n    resMsgDiv.innerHTML = messContent;\n    resMsgDiv.classList.add(\"res_msg\");\n    resMsgDiv.addEventListener(\"click\", () => {\n        mess.classList.add(\"res_msg__animate\");\n        setTimeout(() => mess.classList.remove(\"res_msg__animate\"), 3000);\n    });\n    div.addUp(resMsgDiv);\n}", "import hub from \"../../hub\";\nhub(\"mess\");\n\nimport messCmd from \"./cmd\";\nimport vars from \"../../var/var\";\nimport messStyle from \"./style\";\nimport apis from \"../../api/apis\";\nimport formatFunc from \"./format\";\nimport coreFunc from \"../coreFunc\";\nimport utils from \"../../utils/utils\";\nimport socket from \"../socket/socket\";\nimport fileFunc from \"../../api/file\";\nimport messInteract from \"./interact\";\nimport { messHTML } from \"../../var/html\";\nimport { mglVar } from \"../../var/mgl\";\nimport contextMenu from \"../../ui/components/contextMenu\";\nimport { Api_fileFunc_read__options } from \"../../types/api\";\nimport permissionFunc, { PermissionFlags } from \"../../utils/perm\";\nimport { Core_mess__dbMessage, Core_mess__sendMessage } from \"../../types/core/mess\";\nimport staticData from \"../../var/staticData\";\nimport { format_embed } from \"./format/embed\";\nimport format_responeMess from \"./format/respone\";\n\nexport const maxMessLen = 2000; \nexport const editMessText = `<span class=\"editMessText noneselect\" title=\"edit $$\">(edit)</span>`;\n\nconst messFunc = {\n    sendMess(){\n        if(!vars.chat.to || !vars.chat.chnl) return;\n        if(vars.chat.to == \"main\") return;\n\n        const mess = messHTML.input.value.trim();\n        if(!mess) return;\n        if(mess.length > maxMessLen) return;\n\n        if(!vars.temp.editId){\n            const data: Core_mess__sendMessage = {\n                to: vars.chat.to,\n                chnl: vars.chat.chnl,\n                msg: mess,\n                res: vars.temp.replyId,\n            }\n            const exitCode = messCmd.send(data);\n            if(exitCode == 0) socket.emit(\"mess\", data);\n        }else{\n            socket.emit(\"message.edit\", vars.chat.to, vars.temp.editId, mess);\n            messInteract.editMessClose();\n        }\n        messHTML.input.value = \"\";\n        messInteract.replyClose();\n        coreFunc.focusInp();\n        messStyle.sendBtnStyle();\n        messStyle.messageHeight();\n    },\n\n    addMess(data: Core_mess__dbMessage, scroll: boolean=true, up: boolean=false){\n        if(!data) return;\n\n        /*\n            .mess_message #mess__$id\n                .mess_meta attr: _author\n                    img\n                    .mess_meta_text\n                        span.mess_author_name\n                        span.mess_time\n                .mess_content attr: _plain\n        */\n\n        const messDiv = document.createElement(\"div\");\n        messDiv.classList.add(\"mess_message\");\n        messDiv.id = \"mess__\"+data._id;\n        if(data.res) messDiv.setAttribute(\"resMsgID\", data.res);\n\n        const fromDiv = document.createElement(\"div\");\n        fromDiv.classList.add(\"mess_meta\");\n        fromDiv.setAttribute(\"_author\", data.fr);\n\n        const fromDivImg = document.createElement(\"img\");\n        fromDivImg.src = \"/api/profile/img?id=\" + data.fr;\n        fromDiv.appendChild(fromDivImg);\n\n        const fromDivText = document.createElement(\"div\");\n        fromDivText.classList.add(\"mess_meta_text\");\n\n        const fromDivTextName = document.createElement(\"span\");\n        fromDivTextName.innerHTML = apis.www.changeUserID(data.fr);\n        fromDivTextName.classList.add(\"mess_author_name\");\n        if(![\"%\",\"^\",\"(\"].includes(data.fr[0])){ // if not system/api let show profile\n            fromDivTextName.addEventListener(\"click\", () => {\n                socket.emit(\"user.profile\", data.fr);\n            });\n        }\n        fromDivText.appendChild(fromDivTextName);\n\n        const timeDiv = document.createElement(\"span\");\n        timeDiv.classList.add(\"mess_time\");\n        timeDiv.innerHTML = utils.formatDateFormUnix(utils.extractTimeFromId(data._id));\n        fromDivText.appendChild(timeDiv);\n\n        fromDiv.appendChild(fromDivText);\n        messDiv.appendChild(fromDiv);\n\n        const messContentDiv = document.createElement(\"div\");\n        messContentDiv.classList.add(\"mess_content\");\n        formatFunc.formatMess(data.msg, messContentDiv);\n        messContentDiv.setAttribute(\"_plain\", data.msg);\n        messDiv.appendChild(messContentDiv);\n        if(data.lastEdit){\n            const replacer = utils.formatDateFormUnix(parseInt(data.lastEdit, 36) * 1000);\n            messContentDiv.innerHTML += editMessText.replace(\"$$\", replacer);\n        }\n        if(data.embed)\n           format_embed(data.embed, messContentDiv);\n\n        if(data.reacts){\n            const reactsDiv = document.createElement(\"div\");\n            reactsDiv.classList.add(\"mess_reacts\");\n\n            const keys = Object.keys(data.reacts);\n            for(let key of keys){\n                const users = data.reacts[key];\n                const span = document.createElement(\"span\");\n                span.setAttribute(\"_key\", key);\n                span.setAttribute(\"_users\", users.join(\",\"));\n                span.addEventListener(\"click\", () => {\n                    socket.emit(\"message.react\", vars.chat.to, data._id, key);\n                });\n                reactsDiv.appendChild(span);\n            }\n\n            messStyle.styleMessReacts(reactsDiv);\n            messDiv.appendChild(reactsDiv);\n        }\n\n        up ? messHTML.div.addUp(messDiv) : messHTML.div.add(messDiv);\n\n        setTimeout(() => {\n            const errMargin = 70; // (px)\n            const isScrollAtBottom = messHTML.div.scrollTop + messHTML.div.clientHeight + messDiv.clientHeight + errMargin >= messHTML.div.scrollHeight;\n            if(data.res) format_responeMess(data.res, messDiv);\n            if(scroll && isScrollAtBottom){\n                messDiv.scrollIntoView({behavior: \"smooth\"});\n            }\n        }, 100);\n\n        contextMenu.menuClickEvent(messDiv, (e) => {\n            const isMessPinned = vars.chat.pinned.findIndex((m) => m._id == data._id) != -1;\n            const canDelete = data.fr == vars.user._id || permissionFunc.canAction(PermissionFlags.ManageMessages);\n            contextMenu.message(e, data._id, {\n                pin: !isMessPinned,\n                edit: data.fr == vars.user._id,\n                delete: canDelete\n            });\n        }, (target) => {\n            return !staticData.contextmenuTags.includes(target.tagName.toLowerCase());\n        });\n\n        messDiv.addEventListener(\"click\", () => {\n            vars.chat.selectedMess = data._id;\n        })\n    },\n\n    sendFile(f: File | undefined){\n        // TODO add check permissions about sending files\n        if(f){\n            read(f);\n        }else{\n            const input = document.createElement(\"input\");\n            input.type = \"file\";\n            input.click();\n            input.addEventListener(\"change\", (e: Event) => {\n                const target = e.target as HTMLInputElement;\n                const file = target.files?.[0];\n                if (file) {\n                    read(file);\n                } else {\n                    console.error(\"No file selected.\");\n                }\n            });\n        }\n\n        function read(f: File){\n            const opt: Api_fileFunc_read__options = {\n                file: f,\n                callback: (xhr: XMLHttpRequest) => {\n                    const path = JSON.parse(xhr.responseText).path;\n                    const mess = location.origin + path;\n                    \n                    const data = {\n                        to: vars.chat.to,\n                        chnl: vars.chat.chnl,\n                        msg: mess,\n                    }\n                    socket.emit(\"mess\", data);\n                },\n                maxSize: 8*1024*1024,\n                maxName: 60,\n                endpoint: \"/api/file/upload\"\n            }\n\n            fileFunc.read(opt);\n        }\n    },\n}\n\nexport default messFunc;\nmglVar.messFunc = messFunc;", "import hub from \"../../hub\";\nhub(\"mess/style\");\n\nimport { messHTML } from \"../../var/html\";\nimport utils from \"../../utils/utils\";\nimport vars from \"../../var/var\";\nimport apis from \"../../api/apis\";\nimport { maxMessLen } from \"./mess\";\n\nconst { input } = messHTML\n\nconst messStyle = {\n    sendBtnStyle() {\n        const len = input.value.trim().length;\n        let prop = \"\";\n\n        if (len == 0) prop = \"grey\";\n        else if (len <= maxMessLen) prop = \"green\";\n        else if (len > maxMessLen) prop = \"red\";\n\n        messHTML.sendBtnImg.style.setProperty(\"--fil\", prop);\n        messHTML.sendBtn.disabled = len == 0 || len > maxMessLen;\n    },\n\n    messageHeight() {\n        let len = input.value.split(\"\\n\").length - 1;\n        len = len >= 2 ? Math.min(len, 20) : 0;\n        input.style.setProperty(\"--messHeight\", len + \"rem\");\n    },\n\n    hideFromMessageInfo() {\n        function getTimeFromMess(mess: HTMLElement) {\n            const id = mess.id.replace(\"mess__\", \"\");\n            return utils.extractTimeFromId(id);\n        }\n\n        const delayTime = 20; // seconds\n        const messages = document.querySelectorAll(\".mess_message\");\n        for (let i = 1; i < messages.length; i++) {\n            const message = messages[i] as HTMLElement;\n            const messageBefore = messages[i - 1] as HTMLElement;\n\n            const messageFrom_author = message.querySelector(\".mess_meta\").getAttribute(\"_author\");\n            const messageBeforeFrom_author = messageBefore.querySelector(\".mess_meta\").getAttribute(\"_author\");\n            if (messageFrom_author != messageBeforeFrom_author) continue;\n\n            const time = getTimeFromMess(message);\n            const timeBefore = getTimeFromMess(messageBefore);\n\n            const messageFromText = message.querySelector<HTMLElement>(\".mess_meta\");\n            messageFromText.style.display = time - timeBefore < delayTime ? \"none\" : \"\";\n        }\n    },\n\n    colorRole() {\n        const messages = document.querySelectorAll(\".mess_message\") as NodeListOf<HTMLElement>;\n        const roles = vars.realm.roles;\n        const users = vars.realm.users;\n        const userColor = new Map();\n\n        messages.forEach(mess => {\n            const author = mess.querySelector(\".mess_meta\").getAttribute(\"_author\");\n\n            if (userColor.has(author)) {\n                messStyle.colorRoleMess(mess, userColor.get(author));\n                return;\n            }\n\n            const user = users.find(u => u.uid == author);\n            if (!user) return;\n            if (user.roles.length == 0) return;\n            let color: string;\n\n            for (let i = 0; i < roles.length; i++) {\n                if (user.roles.includes(roles[i].name)) {\n                    color = roles[i].c;\n                    userColor.set(author, color);\n                    messStyle.colorRoleMess(mess, color);\n                    return;\n                }\n            }\n            messStyle.colorRoleMess(mess, \"\");\n        });\n    },\n\n    colorRoleMess(mess: HTMLElement, color: string) {\n        mess.querySelector<HTMLElement>(\".mess_author_name\").style.color = color;\n    },\n\n    styleMessReacts(reactsDiv: HTMLElement) {\n        const spans = reactsDiv.querySelectorAll(\"span\");\n        spans.forEach(span => {\n            const users = span.getAttribute(\"_users\").split(\",\");\n\n            if (users.length == 0 || users[0] == \"\") {\n                span.remove();\n                return;\n            }\n\n            span.classList.remove(\"userReacted\");\n            if (users.includes(vars.user._id)) {\n                span.classList.add(\"userReacted\");\n            }\n\n            span.title = users.map(u => apis.www.changeUserID(u)).join(\", \");\n            span.innerHTML = span.getAttribute(\"_key\") + \" \" + users.length;\n        });\n    },\n\n    setSelectionStart(position: number | undefined = undefined) {\n        if (!position) position = input.value.length;\n        input.setSelectionRange(position, position);\n    }\n}\n\nsetTimeout(() => {\n    messStyle.sendBtnStyle();\n    messStyle.messageHeight();\n}, 100); // Delay of 100ms to accommodate any cached input values in the browser\n\nexport default messStyle;", "import hub from \"../../hub\";\nhub(\"render/var\");\n\nexport const renderState = {\n    chnl_user: false\n}", "import { Core_socket__user_status_type } from \"../../types/core/socket\";\nimport Id from \"../../types/Id\";\n\nexport function updateUserProfileMarker(id: Id, status: Core_socket__user_status_type) {\n    const elements = document.querySelectorAll(`.userStatusMarker[data-status-id=\"${id}\"]`);\n    if (elements.length == 0) return;\n    elements.forEach((ele) => ele.setAttribute(\"data-status\", status || \"offline\"));\n}", "import hub from \"../../hub\";\nhub(\"render/realm\");\n\nimport vars from \"../../var/var\";\nimport Id from \"../../types/Id\";\nimport apis from \"../../api/apis\";\nimport renderUtils from \"./utils\";\nimport utils from \"../../utils/utils\";\nimport coreFunc from \"../../core/coreFunc\";\nimport socket from \"../../core/socket/socket\";\nimport contextMenu from \"../components/contextMenu\";\nimport { Ui_UserState } from \"../../types/ui/render\";\nimport { navHTML, renderHTML } from \"../../var/html\";\nimport { Vars_user__activity } from \"../../types/var\";\nimport { Core_socket__user_status_type } from \"../../types/core/socket\";\nimport { updateUserProfileMarker } from \"./userStatusMarker\";\nimport apiVars from \"../../var/api\";\n\nconst render_realm = {\n    realms(data) {\n        renderHTML.realms__content.innerHTML = \"\";\n        vars.realms = data;\n        data.forEach((realm) => {\n            const id = realm.realm;\n            const realmDiv = document.createElement(\"div\");\n            realmDiv.classList.add(\"realm\");\n            realmDiv.id = \"realm_chat_\" + id;\n            if (realm.img) {\n                realmDiv.innerHTML = `<img src=\"/userFiles/realms/${id}.png?time=${Date.now()}\" alt=\"${apis.www.changeChat(id)}\">`;\n            } else {\n                realmDiv.innerHTML = apis.www.changeChat(id);\n            }\n            renderHTML.realms__content.appendChild(realmDiv);\n\n            realmDiv.addEventListener(\"click\", () => {\n                coreFunc.changeChat(id);\n            });\n\n            contextMenu.menuClickEvent(realmDiv, (e) => {\n                contextMenu.realm(e, id);\n            });\n        });\n        coreFunc.markSelectedChat();\n    },\n\n    usersInChat() {\n        navHTML.realm__users.innerHTML = \"\";\n        const roles = vars.realm.roles;\n        const users = vars.realm.users;\n        const userColor = new Map();\n\n        function getColor(id: Id) {\n            if (userColor.has(id)) {\n                return userColor.get(id);\n            }\n\n            const user = users.find(u => u.uid == id);\n            if (!user) return;\n            if (user.roles.length == 0) return \"\";\n\n            for (let i = 0; i < roles.length; i++) {\n                if (user.roles.includes(roles[i].name)) {\n                    const color = roles[i].c;\n                    userColor.set(id, color);\n                    return color;\n                }\n            }\n            return \"\";\n        }\n\n        users.map(u => u.uid).forEach((userID) => {\n            const isBot = userID[0] == \"^\";\n            const userDiv = document.createElement(\"div\");\n            userDiv.classList.add(\"realm_user_div\");\n            userDiv.classList.add(\"userStatusMarker\");\n            userDiv.setAttribute(\"data-status-id\", userID);\n\n            if (!isBot) {\n                userDiv.addEventListener(\"click\", () => {\n                    socket.emit(\"user.profile\", userID);\n                });\n            }\n\n            const userImg = document.createElement(\"img\");\n            userImg.src = \"/api/profile/img?id=\" + userID.replace(\"^\", \"\");\n            userDiv.appendChild(userImg);\n\n            const textContainer = document.createElement(\"div\");\n\n            const nameDiv = document.createElement(\"div\");\n            nameDiv.innerHTML = apis.www.changeUserID(userID);\n            nameDiv.style.color = getColor(userID);\n            nameDiv.classList.add(\"realm_user_name\");\n            textContainer.appendChild(nameDiv);\n\n            const activityDiv = document.createElement(\"div\");\n            activityDiv.innerHTML = \"\";\n            activityDiv.id = \"user_status_\" + userID;\n            activityDiv.classList.add(\"realm_user_status\");\n            textContainer.appendChild(activityDiv);\n\n            userDiv.appendChild(textContainer);\n            navHTML.realm__users.appendChild(userDiv);\n            render_realm.realmUserStatus(userID);\n            updateUserProfileMarker(userID, apiVars.user_state[userID]?.status.get());\n        });\n    },\n\n    realmUserStatus(id: Id) {\n        const ele = document.querySelector(\"#user_status_\" + utils.escape(id));\n        if (!ele) return;\n        const data = apiVars.user_state[id];\n        if (!data){\n            updateUserProfileMarker(id, \"offline\");\n            return;\n        }\n        \n        updateUserProfileMarker(id, data.status.get() || \"offline\");\n\n        const act = data.activity.get();\n        if (!act?.state) {\n            ele.innerHTML = data.statusText.get() || \"\";\n            return;\n        }\n        ele.innerHTML = act.state + \" | \" + act.name;\n    }\n}\n\nexport default render_realm;", "import hub from \"../../hub\";\nhub(\"render/utils\");\n\nimport Id from \"../../types/Id\";\nimport utils from \"../../utils/utils\";\nimport { Utils_updater } from \"../../types/utils\";\nimport apiVars from \"../../var/api\";\n\nconst renderUtils = {\n    sortPrivs(data: Id[]): Id[] {\n        const sortedData = [...data];\n        sortedData.sort((a, b) => {\n            const la = apiVars.lastMess[\"$\" + a]?.main;\n            const lb = apiVars.lastMess[\"$\" + b]?.main;\n            if (!la || !lb) return 0;\n\n            return utils.extractTimeFromId(lb.mess) - utils.extractTimeFromId(la.mess);\n        });\n\n        return sortedData;\n    },\n\n    initPopup(popup: HTMLElement) {\n        if (!popup) return;\n\n        const isAlreadyOpen = popup.getAttribute(\"opened\");\n        if (isAlreadyOpen) {\n            popup.setAttribute(\"opened\", \"2\");\n            return;\n        }\n\n        popup.setAttribute(\"opened\", \"1\");\n        popup.fadeIn();\n\n        const closePopup = () => {\n            setTimeout(() => {\n                const isPopupStillOpen = popup.getAttribute(\"opened\") === \"2\";\n                if (isPopupStillOpen) {\n                    popup.setAttribute(\"opened\", \"1\");\n                    return;\n                }\n                popup.fadeOut();\n                document.body.removeEventListener(\"click\", closePopup);\n                setTimeout(() => {\n                    popup.removeAttribute(\"opened\");\n                }, 800);\n            }, 100);\n        };\n\n        setTimeout(() => {\n            document.body.addEventListener(\"click\", closePopup);\n        }, 100);\n    },\n\n    createUpdater<T>(cb: (value: T) => void, initialValue: T): Utils_updater<T> {\n        return {\n            _value: initialValue,\n            get() {\n                return this._value;\n            },\n            set(newValue) {\n                this._value = newValue;\n                cb(newValue);\n            }\n        }\n    },\n}\n\nexport default renderUtils;", "import { Core_socket__user_status_type } from \"../../types/core/socket\";\nimport Id from \"../../types/Id\";\nimport { Ui_UserState } from \"../../types/ui/render\";\nimport { Vars_user__activity } from \"../../types/var\";\nimport apiVars from \"../../var/api\";\nimport render_realm from \"../render/realm\";\nimport { updateUserProfileMarker } from \"../render/userStatusMarker\";\nimport renderUtils from \"../render/utils\";\n\nconst dataTemp = apiVars.user_state;\n\nconst UserStateManager = {\n    _initUser(id: Id) {\n        if (!dataTemp[id]) {\n            const cb = () => UserStateManager._updateUI(id);\n            dataTemp[id] = {\n                status: renderUtils.createUpdater<Core_socket__user_status_type>(cb, \"offline\"),\n                statusText: renderUtils.createUpdater<string>(cb, \"\"),\n                activity: renderUtils.createUpdater<Vars_user__activity | null>(cb, null),\n            }\n            UserStateManager._updateUI(id);\n        }\n    },\n\n    _updateUI(id: Id) {\n        render_realm.realmUserStatus(id);\n        updateUserProfileMarker(id, dataTemp[id].status.get());\n    },\n\n    set(id: Id, data: Ui_UserState) {\n        const { status, statusText, activity } = data;\n        UserStateManager._initUser(id);\n\n        if(status) dataTemp[id].status.set(status);\n        if(statusText) dataTemp[id].statusText.set(statusText);\n        if(activity) dataTemp[id].activity.set(activity);\n    }\n}\n\nexport default UserStateManager;", "import socket from \"../socket/socket\";\nimport hub from \"../../hub\";\nhub(\"cacheControllers/socketGeneral\");\n\nclass SocketController {\n    private evtName: string;\n    private cb: (...args: any[]) => void;\n\n    constructor(evtName: string, cb: (...args: any[]) => void) {\n        socket.on(evtName, cb);\n        this.evtName = evtName;\n        this.cb = cb;\n    }\n\n    private async sendToSocket(key: string, ...data: any[]) {\n        const customCb = typeof data[data.length - 1] === \"function\" ? data.pop() : null;\n        socket.emit(this.evtName, ...data, async (...socketReturnData: any[]) => {\n            await saveToDB({ id: key, data: [...socketReturnData] });\n            if (customCb) customCb(...socketReturnData);\n            else this.cb(...socketReturnData);\n        });\n    }\n\n    async emitId(id: string=\"\", ...data: any[]) {\n        const key = this.evtName + (id ? \"-\" + id : \"\");\n        if (socket.connected) {\n            await this.sendToSocket(key, ...data);\n        } else {\n            const cachedData = await getFromDB(key);\n            const customCb = typeof data[data.length - 1] === \"function\" ? data.pop() : null;\n            if (cachedData) {\n                if (customCb) customCb(...cachedData.data);\n                else this.cb(...cachedData.data);\n            } else {\n                await this.sendToSocket(key, ...data);\n            }\n        }\n    }\n\n    async emit(...data: any[]) {\n        this.emitId(\"\", ...data);\n    }\n\n    async emitDataId(id: string, ...data: any[]) {\n        this.emitId(id, ...[id, ...data]);\n    }\n}\n\nexport default SocketController;\n\nexport function openDB(): Promise<IDBDatabase> {\n    return new Promise((resolve, reject) => {\n        const request = indexedDB.open(\"socket\", 1);\n\n        request.onupgradeneeded = () => {\n            const db = request.result;\n            if (!db.objectStoreNames.contains(\"general\")) {\n                db.createObjectStore(\"general\", { keyPath: \"id\" });\n            }\n        };\n\n        request.onsuccess = () => resolve(request.result);\n        request.onerror = () => reject(request.error);\n    });\n}\n\nexport function saveToDB(entry: { id: string; data: unknown[] }): Promise<void> {\n    return new Promise(async (resolve, reject) => {\n        const db = await openDB();\n        const tx = db.transaction(\"general\", \"readwrite\");\n        const store = tx.objectStore(\"general\");\n        const putRequest = store.put(entry);\n\n        putRequest.onsuccess = () => {\n            db.close();\n            resolve();\n        };\n        putRequest.onerror = () => reject(putRequest.error);\n    });\n}\n\nexport function getFromDB(id: string): Promise<{ id: string; data: unknown[] } | undefined> {\n    return new Promise(async (resolve, reject) => {\n        const db = await openDB();\n        const tx = db.transaction(\"general\", \"readonly\");\n        const store = tx.objectStore(\"general\");\n        const getRequest = store.get(id);\n\n        getRequest.onsuccess = () => {\n            db.close();\n            resolve(getRequest.result);\n        };\n        getRequest.onerror = () => reject(getRequest.error);\n    });\n}", "import hub from \"../../hub\";\nhub(\"interact/mainView\");\n\nimport Id from \"../../types/Id\";\nimport uiFunc from \"../helpers/uiFunc\";\nimport socket from \"../../core/socket/socket\";\nimport mainView from \"../components/mainView\";\nimport { mainViewHTML } from \"../../var/html\";\nimport { mglInt } from \"../../var/mgl\";\nimport { Vars_mainView__page } from \"../../types/var\";\nimport LangPkg from \"../../utils/translate\";\nimport vars from \"../../var/var\";\n\nconst mainViewInteract = {\n    showNav() {\n        if (mainViewHTML.nav.clientHeight == 0) {\n            mainViewHTML.nav.fadeIn();\n        } else {\n            mainViewHTML.nav.fadeOut();\n        }\n    },\n\n    async addFriend(friend: Id) {\n        if (!friend) friend = await uiFunc.prompt(LangPkg.ui.enter_friend);\n        if (!friend) return;\n        socket.emit(\"friend.request\", friend);\n    },\n\n    changeView(page: Vars_mainView__page) {\n        mainView.changeView(page);\n    },\n\n    requestFriendResponse(user_id: Id, accept: boolean) {\n        if (!user_id) return;\n        const div = mainViewHTML.div.querySelector(`.main__view__friend[data-status-id=\"${user_id}\"]`);\n        if (!div) return;\n\n        socket.emit(\"friend.response\", user_id, accept);\n        div.remove();\n        vars.mainView.requests = vars.mainView.requests.filter(e => e != user_id);\n        mainViewHTML.requestCount.innerHTML = `(${vars.mainView.requests.length})`;\n\n        if (accept) socket.emit(\"friend.get.all\");\n    },\n}\n\nexport default mainViewInteract;\nmglInt.mainView = mainViewInteract;", "import Id from \"../Id\";\nimport { Vars_user__activity } from \"../var\";\n\nexport interface Core_socket__refresh {\n    evt: string;\n    realm?: Id;\n    chnl?: Id;\n    wait?: number;\n}\n\nexport interface Core_socket__dm {\n    priv: Id;\n    last: {\n        main: Id;\n    };\n    lastMessId: Id;\n}\n\nexport interface Core_socket__blocked {\n    blocked?: Id;\n    block?: Id;\n}\n\nexport type Core_socket__user_status_type = \"online\" | \"offline\" | \"idle\" | \"dnd\";\n\nexport interface Core_socket__user_profile {\n    _id: Id;\n    name: string;\n    status: Core_socket__user_status_type;\n    statusText: string;\n    friendStatus: Core_socket__friendStatus;\n    isBlocked: boolean;\n    activity: Vars_user__activity;\n}\n\nexport enum Core_socket__friendStatus {\n    NOT_FRIEND,\n    IS_FRIEND,\n    REQUEST_SENT,\n    REQUEST_RECEIVED,\n}", "import hub from \"../../hub\";\nhub(\"render/user\");\n\nimport vars from \"../../var/var\";\nimport apis from \"../../api/apis\";\nimport renderUtils from \"./utils\";\nimport coreFunc from \"../../core/coreFunc\";\nimport socket from \"../../core/socket/socket\";\nimport mainView from \"../components/mainView\";\nimport mainViewInteract from \"../interact/mainView\";\nimport { navHTML, renderHTML } from \"../../var/html\";\nimport { Core_socket__friendStatus, Core_socket__user_profile } from \"../../types/core/socket\";\nimport utils from \"../../utils/utils\";\nimport LangPkg from \"../../utils/translate\";\nimport { updateUserProfileMarker } from \"./userStatusMarker\";\nimport UserStateManager from \"../helpers/userStateManager\";\n\nconst render_user = {\n    localUserProfile() {\n        navHTML.user__name.innerHTML = apis.www.changeUserID(vars.user._id);\n        navHTML.user__status.innerHTML = vars.user.statusText || vars.user.status || \"Online\";\n        updateUserProfileMarker(vars.user._id, vars.user.status || \"online\");\n    },\n\n    userProfile(data: Core_socket__user_profile) {\n        if (!data) return;\n        const targetIsMe = data._id == vars.user._id;\n        const imgLink = \"/api/profile/img?id=\" + data._id;\n\n        renderHTML.userProfile.innerHTML = `\n            <div id=\"userProfileInfo\" class=\"userStatusMarker\">\n                <img src=\"${imgLink}\" onclick=\"mglInt.createMediaPopup('${imgLink}')\" alt=\"User logo\">\n                <div>\n                    <h1>${data.name}</h1>\n                    <p>${data.status}${data.statusText ? \" | \" + data.statusText : \"\"}</p>\n                    <div id=\"userProfileBtns\" style=\"margin-top: 10px;\"></div>\n                </div>\n            </div>\n            <div id=\"userProfileActivity\"></div>\n            <div id=\"userProfileAbout\"></div>\n        `.trim();\n\n        if (data.statusText || data.status) UserStateManager.set(data._id, { status: data.status, statusText: data.statusText });\n        renderHTML.userProfile.querySelector(\"#userProfileInfo\").setAttribute(\"data-status-id\", data._id);\n\n        if (!targetIsMe) {\n            const friendBtn = document.createElement(\"button\");\n            friendBtn.classList.add(\"btn\");\n            let friendBtnText: string;\n            switch (data.friendStatus) {\n                case Core_socket__friendStatus.NOT_FRIEND:\n                    friendBtnText = LangPkg.ui.friend.add;\n                    friendBtn.onclick = () => mainViewInteract.addFriend(data._id);\n                    break;\n                case Core_socket__friendStatus.IS_FRIEND:\n                    friendBtnText = LangPkg.ui.friend.remove;\n                    friendBtn.onclick = () => mainView.removeFriend(data._id);\n                    break;\n                case Core_socket__friendStatus.REQUEST_SENT:\n                    friendBtnText = LangPkg.ui.friend.request_sent;\n                    friendBtn.onclick = () => mainView.removeFriendRequest(data._id);\n                    break;\n                case Core_socket__friendStatus.REQUEST_RECEIVED:\n                    friendBtnText = LangPkg.ui.friend.request_received;\n                    friendBtn.onclick = () => {\n                        coreFunc.changeChat(\"main\");\n                        mainView.changeView(\"requests\");\n                    }\n                    break;\n            }\n            friendBtn.innerHTML = friendBtnText;\n            const btns = renderHTML.userProfile.querySelector(\"#userProfileBtns\");\n            btns.appendChild(friendBtn);\n\n            const blockBtn = document.createElement(\"button\");\n            blockBtn.classList.add(\"btn\");\n            blockBtn.style.marginLeft = \"10px\";\n            blockBtn.innerHTML = data.isBlocked ? LangPkg.ui.friend.unblock : LangPkg.ui.friend.block;\n            blockBtn.onclick = () => {\n                data.isBlocked = !data.isBlocked;\n                socket.emit(\"dm.block\", data._id, data.isBlocked);\n            }\n            btns.appendChild(blockBtn);\n\n            const openDmBtn = document.createElement(\"button\");\n            openDmBtn.classList.add(\"btn\");\n            openDmBtn.style.marginLeft = \"10px\";\n            openDmBtn.innerHTML = LangPkg.ui.friend.open_dm;\n            openDmBtn.onclick = () => {\n                coreFunc.changeChat(\"$\" + data._id);\n            }\n            btns.appendChild(openDmBtn);\n        }\n\n        const activityDiv = renderHTML.userProfile.querySelector(\"#userProfileActivity\");\n        if (data.activity?.state) {\n            const act = data.activity;\n            activityDiv.innerHTML = `\n                <h2>Activity</h2>\n                <p>${act.state} | ${act.name}</p>\n                ${act.details ? \"<p>\" + act.details + \"</p>\" : \"\"}\n                ${act.startTime ? '<p>Time: <span id=\"userProfileActivityTime\"></span></p>' : \"\"}\n                ${act.party ?\n                    \"<p>Party: \" +\n                    act.party.id + \" | \" +\n                    act.party.state +\n                    (act.party.max ? \" / \" + act.party.max : \"\") +\n                    \"</p>\"\n                    : \"\"}\n            `.trim();\n\n            UserStateManager.set(data._id, { activity: utils.rmRef(act) });\n\n            if (act.startTime) {\n                const timeP = activityDiv.querySelector(\"#userProfileActivityTime\");\n                function update() {\n                    const time = new Date().getTime() - new Date(act.startTime).getTime();\n                    const hours = Math.floor(time / 1000 / 60 / 60);\n                    const minutes = Math.floor(time / 1000 / 60) - (hours * 60);\n                    const seconds = Math.floor(time / 1000) - (hours * 60 * 60) - (minutes * 60);\n                    timeP.innerHTML = `${hours}:${minutes}:${seconds}`;\n                }\n                let interval = setInterval(() => {\n                    if (!timeP) return clearInterval(interval);\n                    update();\n                }, 1000);\n                update();\n            }\n        }\n\n        renderUtils.initPopup(renderHTML.userProfile);\n        UserStateManager.set(data._id, data);\n    },\n}\n\nexport default render_user;", "import hub from \"../../hub\";\nhub(\"components/voice\");\n\nimport { voiceHTML } from \"../../var/html\";\nimport { mglVar } from \"../../var/mgl\";\nimport socket from \"../../core/socket/socket\";\nimport apis from \"../../api/apis\";\nimport uiFunc from \"../helpers/uiFunc\";\nimport vars from \"../../var/var\";\nimport LangPkg, { langFunc } from \"../../utils/translate\";\nimport Id from \"../../types/Id\";\nimport debugFunc, { LogLevel } from \"../../core/debug\";\n\ninterface voiceFuncVar {\n    local_stream: null | MediaStream;\n    muteMic: boolean;\n    sending: boolean | NodeJS.Timeout;\n    joined: boolean | string;\n}\n\nconst voiceFuncVar: voiceFuncVar = {\n    local_stream: null,\n    muteMic: false,\n    sending: false,\n    joined: false,\n}\n\nconst voiceFunc = {\n    async initCall() {\n        try {\n            voiceHTML.voiceShow.style.display = \"\";\n            if (voiceFuncVar.local_stream) return;\n            const stream = await this.getStream(true, false);\n            voiceFuncVar.local_stream = stream;\n            voiceHTML.div.fadeIn();\n        } catch (error) {\n            console.error('initCall', `Error joining voice channel: ${error.message}`);\n        }\n    },\n\n    async joinToVoiceChannel(to: Id) {\n        await this.initCall();\n        voiceFuncVar.joined = to;\n        socket.emit(\"voice.join\", to);\n        socket.emit(\"voice.get.users\");\n        voiceHTML.muteMic.innerHTML = voiceFuncVar.muteMic ? LangPkg.ui.mute.unmute : LangPkg.ui.mute.mute;\n    },\n\n    send() {\n        if (voiceFuncVar.sending) return;\n\n        let buffer = [];\n        const mediaRecorder = new MediaRecorder(voiceFuncVar.local_stream, { mimeType: \"video/webm; codecs=vp8,opus\" });\n        mediaRecorder.ondataavailable = (event) => {\n            if (event.data.size == 0) return;\n            buffer.push(event.data);\n        };\n\n        mediaRecorder.onstop = () => {\n            if (buffer.length == 0) return debugFunc.msg(LogLevel.WARN, \"no voice data\");\n\n            socket.volatile.emit(\"voice.sendData\", buffer);\n            buffer = [];\n        };\n\n        voiceFuncVar.sending = setInterval(() => {\n            mediaRecorder.stop();\n            setTimeout(() => {\n                if (!voiceFuncVar.sending) return;\n                mediaRecorder.start();\n            }, 10);\n        }, 100);\n\n        mediaRecorder.start(100);\n    },\n\n    endCall() {\n        if (typeof voiceFuncVar.sending === \"number\") clearInterval(voiceFuncVar.sending);\n        voiceFuncVar.sending = false;\n        voiceFuncVar.joined = false;\n        socket.emit(\"voice.leave\");\n\n        voiceHTML.div.fadeOut();\n        voiceHTML.mediaContainer.innerHTML = \"\";\n        voiceHTML.voiceShow.style.display = \"none\";\n\n        if (apis.app.apiType == \"rn\") {\n            apis.api.send({\n                type: \"stopAudio\",\n            });\n        } else {\n            voiceFuncVar.local_stream.getTracks().forEach((track) => {\n                track.stop();\n            });\n            voiceFuncVar.local_stream = null;\n        }\n    },\n\n    async startCall() {\n        const id = vars.chat.to.replace(\"$\", \"\");\n        if (id == \"main\") return;\n\n        const isConfirm = await uiFunc.confirm(langFunc(LangPkg.ui.confirm.call_to, apis.www.changeUserID(id)) + \"?\");\n        if (!isConfirm) return;\n\n        socket.emit(\"call.dm.init\", id);\n    },\n\n    toggleMute() {\n        voiceFuncVar.muteMic = !voiceFuncVar.muteMic;\n        if (apis.app.apiType == \"rn\") {\n            apis.api.send({\n                type: voiceFuncVar.muteMic ? \"stopAudio\" : \"startAudio\",\n            })\n        } else {\n            const tracks = voiceFuncVar.local_stream.getAudioTracks();\n            tracks.forEach((track) => {\n                track.enabled = !voiceFuncVar.muteMic;\n            });\n        }\n\n        voiceHTML.muteMic.innerHTML = voiceFuncVar.muteMic ? LangPkg.ui.mute.unmute : LangPkg.ui.mute.mute;\n    },\n\n    async getStream(audio: boolean = true, video: boolean = false): Promise<MediaStream> {\n        if (apis.app.apiType === \"rn\") {\n            // React Native only\n            return await (window as any).processMediaRN.getStream() as MediaStream;\n        }\n\n        const stream = new MediaStream();\n\n        async function getUserMedia(options: {\n            audio?: { deviceId?: string } | boolean,\n            video?: { deviceId?: string } | boolean\n        }): Promise<MediaStream | undefined> {\n            if (navigator.mediaDevices?.getUserMedia) {\n                return await navigator.mediaDevices.getUserMedia(options);\n            } else if (\"webkitGetUserMedia\" in navigator) {\n                const webkitGetUserMedia = (navigator as any).webkitGetUserMedia.bind(navigator);\n                return new Promise<MediaStream>((resolve, reject) => {\n                    webkitGetUserMedia(options, resolve, reject);\n                });\n            } else if (\"mozGetUserMedia\" in navigator) {\n                const mozGetUserMedia = (navigator as any).mozGetUserMedia.bind(navigator);\n                return new Promise<MediaStream>((resolve, reject) => {\n                    mozGetUserMedia(options, resolve, reject);\n                });\n            }\n        }\n\n        async function selectDevice(\n            devices: MediaDeviceInfo[],\n            prompt: string\n        ): Promise<string | undefined> {\n            if (devices.length === 0) {\n                uiFunc.uiMsgT('No devices found');\n                return undefined;\n            }\n            const labels = devices.map(device => device.label || \"Unknown Device\");\n            const deviceIds = devices.map(device => device.deviceId);\n            const selectedIndex = await uiFunc.selectPrompt(prompt, labels, deviceIds) as number;\n            return deviceIds[selectedIndex];\n        }\n\n        try {\n            const permissions = await getUserMedia({ audio, video });\n            if (!permissions) {\n                uiFunc.uiMsgT('Error getting temporary stream');\n                return stream;\n            }\n\n            setTimeout(() => {\n                permissions.getTracks().forEach(track => track.stop());\n            }, 200);\n\n            const devices = await navigator.mediaDevices.enumerateDevices();\n            const audioDevices = devices.filter(device => device.kind === 'audioinput');\n            const videoDevices = devices.filter(device => device.kind === 'videoinput');\n\n            const audioOptions = audio\n                ? { deviceId: await selectDevice(audioDevices, LangPkg.ui.call.select_audio_device) }\n                : false;\n\n            const videoOptions = video\n                ? { deviceId: await selectDevice(videoDevices, LangPkg.ui.call.select_video_device) }\n                : false;\n\n            const mediaStream = await getUserMedia({ audio: audioOptions, video: videoOptions });\n            if (mediaStream) {\n                mediaStream.getTracks().forEach(track => stream.addTrack(track));\n            }\n\n            return stream;\n        } catch (error) {\n            console.error(`Error getting stream: ${(error as Error).message}`);\n            uiFunc.uiMsgT('An error occurred while getting the stream');\n            return stream;\n        }\n    },\n\n    isInUserCall(id: Id) {\n        const room = \"user_\" + [id, vars.user._id].sort().join(\"=\");\n        return room == voiceFuncVar.joined;\n    }\n}\n\nsocket.on(\"voice.sendData\", (from: Id, data: any) => {\n    const blob = new Blob(data, { type: \"audio/webm; codecs=vp8,opus\" });\n    const url = URL.createObjectURL(blob);\n    const audio = new Audio(url);\n    audio.play().catch(() => { });\n});\n\nsocket.on(\"connect\", () => {\n    if (!voiceFuncVar.joined) return;\n    debugFunc.msg(LogLevel.INFO, \"reconnected to voice channel\");\n    voiceFunc.joinToVoiceChannel(voiceFuncVar.joined as Id);\n});\n\nsocket.on(\"voice.get.users\", (users: Id[]) => {\n    voiceHTML.users.innerHTML = \"\";\n    users.forEach((user) => {\n        const li = document.createElement(\"li\");\n        li.innerHTML = apis.www.changeUserID(user);\n        voiceHTML.users.appendChild(li);\n    });\n\n    if (users.length > 1) {\n        voiceFunc.send();\n    } else if (users.length == 1) {\n        if (typeof voiceFuncVar.sending === \"number\")\n            clearInterval(voiceFuncVar.sending);\n        voiceFuncVar.sending = false;\n    }\n});\n\nsocket.on(\"call.dm.init\", (id: Id, userOffline: boolean = false) => {\n    if (userOffline) {\n        uiFunc.uiMsgT(LangPkg.ui.call.offline, apis.www.changeUserID(id));\n        const join = confirm(LangPkg.ui.call.wait + \"?\");\n        if (!join) return;\n    } else { // if user is online\n        if (voiceFunc.isInUserCall(id))\n            return socket.emit(\"call.dm.answer\", id, true);\n\n        const isConfirm = confirm(langFunc(LangPkg.ui.call.called, apis.www.changeUserID(id)) + \"?\");\n        socket.emit(\"call.dm.answer\", id, isConfirm);\n\n        if (!isConfirm) return;\n    }\n\n    const room = \"user_\" + [id, vars.user._id].sort().join(\"=\");\n    voiceFunc.joinToVoiceChannel(room);\n});\n\nsocket.on(\"call.dm.answer\", (id: Id, answer: boolean) => {\n    if (!answer)\n        return alert(LangPkg.ui.call.rejected);\n\n    const isConfirm = confirm(langFunc(LangPkg.ui.call.answer, apis.www.changeUserID(id)) + \"?\");\n    if (!isConfirm) return;\n\n    const room = \"user_\" + [id, vars.user._id].sort().join(\"=\");\n    voiceFunc.joinToVoiceChannel(room);\n});\n\nsocket.on(\"voice.leave\", (id: Id) => {\n    uiFunc.uiMsgT(LangPkg.ui.call.left, apis.www.changeUserID(id));\n});\n\nsocket.on(\"voice.join\", (to: Id) => {\n    uiFunc.uiMsgT(LangPkg.ui.call.joined, apis.www.changeUserID(to));\n});\n\nexport default voiceFunc;\nmglVar.voiceFunc = voiceFunc;", "import hub from \"../../hub\";\nhub(\"render/event\");\n\nimport vars from \"../../var/var\";\nimport apis from \"../../api/apis\";\nimport { mglInt } from \"../../var/mgl\";\nimport voiceFunc from \"../components/voice\";\nimport LangPkg from \"../../utils/translate\";\nimport socket from \"../../core/socket/socket\";\nimport permissionFunc from \"../../utils/perm\";\nimport formatFunc from \"../../core/mess/format\";\nimport { navHTML, renderHTML } from \"../../var/html\";\nimport { getChannelTypeEmoticon } from \"./realmInit\";\nimport { Ui_render__event } from \"../../types/ui/render\";\nimport uiFunc from \"../helpers/uiFunc\";\n\nconst render_events = {\n    show() {\n        if (vars.chat.to == \"main\" || vars.chat.to.startsWith(\"$\")) return;\n        socket.emit(\"realm.event.list\", vars.chat.to, false, (events: Ui_render__event[]) => {\n            renderHTML.events__container.innerHTML = \"\";\n            renderHTML.events__add.style.display = permissionFunc.isAdmin() ? \"\" : \"none\";\n            events.forEach(render_events.renderEvent);\n            renderHTML.events.fadeIn();\n            navHTML.realm__panel.querySelector(\"#navs__realm__events\").setAttribute(\"data-count\", events.length.toString());\n        });\n    },\n\n    renderEvent(event: Ui_render__event) {\n        const { type, where, topic, time: timeShort, desc, img, _id, author } = event;\n        const time = timeShort * 1000;\n        const eventTime = new Date(time).getTime();\n\n        const eventDiv = document.createElement(\"div\");\n        eventDiv.clA(\"realm_event\");\n\n        eventDiv.innerHTML += `\n            <img src=\"${img || \"/favicon.svg\"}\" />\n            <div class=\"realm_event__info\">\n                <h2>${topic}</h2>\n                ${desc ? `<div data-id=\"eventDesc\"></div>` : \"\"}\n                <p>${LangPkg.ui.author}: ${apis.www.changeUserID(author)}</p>\n                <p>${new Date(time).toLocaleString()} (<span data-id=\"cutdown\"></span>)</p>\n            </div>\n            <div class=\"realm_event__users\">\n                <button data-id=\"users-join\" class=\"btn\">${LangPkg.uni.join}</button>\n                <div>\n                    <p>\n                        ${LangPkg.ui.users}:\n                        <span data-id=\"users-count\"></span>\n                        <button data-id=\"users-show\" class=\"btn\">${LangPkg.uni.show}</button>\n                    </p>\n                    <br />\n                    <div data-id=\"users\" style=\"display: none;\" class=\"realm_event__users__list\"></div>\n                </div>\n            </div>\n        `;\n        const info = eventDiv.querySelector(\".realm_event__info\");\n\n        if (desc) {\n            const eventDesc = eventDiv.querySelector<HTMLDivElement>(\"[data-id='eventDesc']\");\n            formatFunc.formatMess(desc, eventDesc);\n        }\n\n        if (permissionFunc.isAdmin()) {\n            const button = document.createElement(\"button\");\n            button.innerHTML = LangPkg.uni.delete;\n            button.clA(\"btn\");\n            button.addEventListener(\"click\", async () => {\n                const conf = await uiFunc.confirm(LangPkg.ui.confirm.sure + \"?\");\n                if (!conf) return;\n                socket.emit(\"realm.event.delete\", vars.chat.to, _id);\n                setTimeout(() => {\n                    render_events.show();\n                }, 100);\n            });\n            const div = document.createElement(\"div\");\n            div.clA(\"realm_event__delete\");\n            div.appendChild(button);\n            eventDiv.appendChild(div);\n        }\n\n        function addZero(num: number) {\n            return num < 10 ? \"0\" + num : num;\n        }\n\n        const cutdown = eventDiv.querySelector(\"[data-id='cutdown']\");\n        let interval;\n        const updateCutdown = () => {\n            const now = new Date().getTime();\n            const diff = eventTime - now;\n\n            if (diff <= 0) {\n                cutdown.textContent = \"0h 0m 0s\";\n                if (type == \"custom\") {\n                    const div = document.createElement(\"div\");\n                    formatFunc.formatMess(where, div);\n                    info.appendChild(div);\n                } else if (type == \"voice\") {\n                    const button = document.createElement(\"button\");\n                    button.innerHTML = LangPkg.ui.call.call;\n                    button.clA(\"btn\");\n                    button.style.marginTop = \"5px\";\n                    button.addEventListener(\"click\", () => {\n                        voiceFunc.joinToVoiceChannel(where);\n                    });\n\n                    info.appendChild(button);\n                }\n                clearInterval(interval);\n            } else {\n                const hours = Math.floor(diff / (1000 * 60 * 60));\n                const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n                const seconds = Math.floor((diff % (1000 * 60)) / 1000);\n\n                cutdown.textContent = `${addZero(hours)}h ${addZero(minutes)}m ${addZero(seconds)}s`;\n            }\n        };\n\n        if (new Date().getTime() < eventTime) {\n            interval = setInterval(updateCutdown, 1000);\n        }\n        updateCutdown();\n\n        const joinBtn = eventDiv.querySelector<HTMLButtonElement>(\"[data-id='users-join']\");\n        let isUserJoined = event.users.includes(vars.user._id);\n        joinBtn.textContent = isUserJoined ? LangPkg.uni.leave : LangPkg.uni.join;\n        joinBtn.addEventListener(\"click\", () => {\n            if (isUserJoined) {\n                socket.emit(\"realm.event.leave\", vars.chat.to, _id);\n                isUserJoined = false;\n                joinBtn.textContent = LangPkg.uni.join;\n                event.users = event.users.filter((u) => u != vars.user._id);\n            } else {\n                socket.emit(\"realm.event.join\", vars.chat.to, _id);\n                isUserJoined = true;\n                joinBtn.textContent = LangPkg.uni.leave;\n                event.users.push(vars.user._id);\n            }\n            renderJoinedUsers();\n        });\n\n        const usersCount = eventDiv.querySelector<HTMLSpanElement>(\"[data-id='users-count']\");\n        const usersShow = eventDiv.querySelector<HTMLButtonElement>(\"[data-id='users-show']\");\n        const users = eventDiv.querySelector<HTMLDivElement>(\"[data-id='users']\");\n        usersShow.addEventListener(\"click\", () => {\n            if (users.style.display != \"none\") {\n                users.style.display = \"none\";\n                usersShow.innerHTML = LangPkg.uni.show;\n            } else {\n                users.style.display = \"\";\n                usersShow.innerHTML = LangPkg.uni.hide;\n            }\n        });\n        function renderJoinedUsers() {\n            users.innerHTML = \"\";\n            usersCount.textContent = event.users.length.toString();\n            for (const user of event.users) {\n                const userDiv = document.createElement(\"div\");\n                userDiv.textContent = apis.www.changeUserID(user);\n                userDiv.style.cursor = \"pointer\";\n                userDiv.addEventListener(\"click\", () => {\n                     socket.emit(\"user.profile\", user);\n                });\n                users.appendChild(userDiv);\n            }\n        }\n        renderJoinedUsers();\n\n        renderHTML.events__container.appendChild(eventDiv);\n    },\n\n    exit() {\n        renderHTML.events.fadeOut(() => {\n            renderHTML.events__container.innerHTML = \"\";\n        });\n    },\n\n    async create() {\n        if (vars.chat.to == \"main\" || vars.chat.to.startsWith(\"$\")) return;\n        if (!permissionFunc.isAdmin()) return;\n\n        const container = renderHTML.events__container;\n        container.innerHTML = \"\";\n\n        function createLabel(text: string, forId: string) {\n            const label = document.createElement(\"label\");\n            label.textContent = text;\n            label.htmlFor = forId;\n            label.style.marginRight = \"1rem\";\n            container.appendChild(label);\n            container.appendChild(document.createElement(\"br\"));\n        }\n\n        function br() {\n            container.appendChild(document.createElement(\"br\"));\n            container.appendChild(document.createElement(\"br\"));\n        }\n\n        createLabel(LangPkg.ui.event.topic, \"event-topic\");\n        const topic = document.createElement(\"input\");\n        topic.type = \"text\";\n        topic.placeholder = LangPkg.ui.event.topic;\n        topic.id = \"event-topic\";\n        container.appendChild(topic);\n        br();\n\n        createLabel(LangPkg.ui.event.time, \"event-time\");\n        const time = document.createElement(\"input\");\n        time.type = \"datetime-local\";\n        time.id = \"event-time\";\n        container.appendChild(time);\n        br();\n\n        createLabel(LangPkg.ui.event.desc, \"event-desc\");\n        const desc = document.createElement(\"input\");\n        desc.type = \"text\";\n        desc.placeholder = LangPkg.ui.event.desc;\n        desc.id = \"event-desc\";\n        container.appendChild(desc);\n        br();\n\n        createLabel(LangPkg.ui.event.type, \"event-type\");\n        const type = document.createElement(\"select\");\n        type.id = \"event-type\";\n        [\n            {\n                name: LangPkg.ui.event.type_custom,\n                type: \"custom\",\n            },\n            {\n                name: LangPkg.ui.event.type_voice,\n                type: \"voice\",\n            }\n        ].forEach(t => {\n            const option = document.createElement(\"option\");\n            option.value = t.type;\n            option.textContent = t.name;\n            type.appendChild(option);\n        });\n        type.addEventListener(\"change\", whereRender);\n        container.appendChild(type);\n        br();\n\n        createLabel(LangPkg.ui.event.where, \"event-where\");\n        const where = document.createElement(\"div\");\n        container.appendChild(where);\n        br();\n\n        const whereOptions = document.createElement(\"select\");\n        whereOptions.id = \"event-where\";\n        renderWhereOptions();\n\n        function whereRender() {\n            where.innerHTML = \"\";\n            if (type.value == \"custom\") {\n                const input = document.createElement(\"input\");\n                input.type = \"text\";\n                input.placeholder = LangPkg.ui.event.where;\n                input.id = \"event-where\";\n                where.appendChild(input);\n            } else if (type.value == \"voice\") {\n                where.appendChild(whereOptions);\n            }\n        }\n\n        function renderWhereOptions() {\n            navHTML.realm__channels.querySelectorAll<HTMLDivElement>(\".channel_voice:not(details .channel_voice)\").forEach(chnl => {\n                const id = chnl.id.replace(\"channel_\", \"\");\n                const name = chnl.textContent.replace(getChannelTypeEmoticon(\"voice\") + \" | \", \"\");\n                const option = document.createElement(\"option\");\n                option.value = id;\n                option.textContent = name;\n                whereOptions.appendChild(option);\n            });\n\n            navHTML.realm__channels.querySelectorAll<HTMLDetailsElement>(\"details\").forEach(details => {\n                const name = details.querySelector(\"summary\").textContent;\n                const category = document.createElement(\"optgroup\");\n                category.label = name;\n                whereOptions.appendChild(category);\n\n                details.querySelectorAll<HTMLDivElement>(\".channel_voice\").forEach(chnl => {\n                    const id = chnl.id.replace(\"channel_\", \"\");\n                    const name = chnl.textContent.replace(getChannelTypeEmoticon(\"voice\") + \" | \", \"\");\n                    const option = document.createElement(\"option\");\n                    option.value = id;\n                    option.textContent = name;\n                    category.appendChild(option);\n                });\n            });\n        }\n\n        whereRender();\n\n        createLabel(LangPkg.ui.event.img, \"event-img\");\n        const img = document.createElement(\"input\");\n        img.type = \"text\";\n        img.placeholder = LangPkg.ui.event.img;\n        img.id = \"event-img\";\n        container.appendChild(img);\n        br();\n\n        const submit = document.createElement(\"button\");\n        submit.textContent = LangPkg.uni.add;\n        submit.clA(\"btn\");\n        submit.addEventListener(\"click\", () => {\n            const req = {\n                topic: topic.value,\n                time: Math.floor(new Date(time.value).getTime() / 1000),\n                desc: desc.value,\n                type: type.value,\n                where: where.querySelector<HTMLSelectElement | HTMLInputElement>(\"select, input\").value,\n                img: img.value,\n            }\n            socket.emit(\"realm.event.create\", vars.chat.to, req);\n            setTimeout(() => {\n                render_events.show();\n            }, 100)\n        });\n        container.appendChild(submit);\n        br();\n    }\n}\n\nexport default render_events;\nmglInt.realmEvents = render_events;", "import hub from \"../../hub\";\nhub(\"render/realmInit\");\n\nimport Id from \"../../types/Id\";\nimport vars from \"../../var/var\";\nimport { renderState } from \"./var\";\nimport uiFunc from \"../helpers/uiFunc\";\nimport coreFunc from \"../../core/coreFunc\";\nimport voiceFunc from \"../components/voice\";\nimport { Channel_Type } from \"../../types/channel\";\nimport { coreHTML, navHTML } from \"../../var/html\";\nimport contextMenu from \"../components/contextMenu\";\nimport { Ui_render__category, Ui_render__channel } from \"../../types/ui/render\";\nimport LangPkg from \"../../utils/translate\";\nimport socket from \"../../core/socket/socket\";\nimport render_events from \"./event\";\nimport { socketEvt } from \"../../core/socket/engine\";\n\nfunction initRealmState(permission: number = 0) {\n    vars.realm = {\n        users: [],\n        roles: [],\n        permission: permission,\n        text: [],\n        desc: {},\n        chnlPerms: {},\n        threads: []\n    };\n}\n\nfunction createRealmNameSection(name: string, sid: Id) {\n    navHTML.realm__name.innerHTML = \"\";\n\n    const nameText = document.createElement(\"div\");\n    nameText.innerHTML = name;\n    nameText.title = name;\n    nameText.id = \"navs__realm__name__text\";\n    navHTML.realm__name.appendChild(nameText);\n\n    addUsersDisplayButton();\n    addMenuButton(sid);\n}\n\nfunction addUsersDisplayButton() {\n    const usersDisplayBtn = document.createElement(\"span\");\n    usersDisplayBtn.innerHTML = \"\uD83D\uDC65\";\n    usersDisplayBtn.classList.add(\"realm_nav_btn\");\n    usersDisplayBtn.addEventListener(\"click\", toggleUserDisplay);\n    navHTML.realm__name.appendChild(usersDisplayBtn);\n}\n\nfunction toggleUserDisplay() {\n    renderState.chnl_user = !renderState.chnl_user;\n    navHTML.realm__channels.style.display = renderState.chnl_user ? \"none\" : \"\";\n    navHTML.realm__users.style.display = renderState.chnl_user ? \"\" : \"none\";\n}\n\nfunction addMenuButton(sid: Id) {\n    const menuBtn = document.createElement(\"span\");\n    menuBtn.classList.add(\"realm_nav_btn\");\n    menuBtn.innerHTML = \"\u2B07\uFE0F\";\n    menuBtn.addEventListener(\"click\", (e) => {\n        setTimeout(() => {\n            contextMenu.realm(e, sid);\n        }, 20); // wait for click event end\n    });\n    navHTML.realm__name.appendChild(menuBtn);\n}\n\nfunction createChannel(channel: Ui_render__channel, root: HTMLElement, sid: Id) {\n    const { name, type, desc, id: cid } = channel;\n    const btn = document.createElement(\"div\");\n\n    btn.onclick = () => handleChannelClick(type, cid, sid);\n    btn.id = \"channel_\" + cid;\n    btn.classList.add(\"channel_\" + type);\n\n    contextMenu.menuClickEvent(btn, (e) => {\n        contextMenu.channel(e, cid, { type });\n    });\n\n    const typeEmoticon = getChannelTypeEmoticon(type);\n    btn.innerHTML = `${typeEmoticon} | ${name}`;\n    root.appendChild(btn);\n    vars.realm.desc[cid] = desc;\n}\n\nexport function getChannelTypeEmoticon(type: Channel_Type) {\n    switch (type) {\n        case \"text\": return \"\uD83D\uDCDD\";\n        case \"voice\": return \"\uD83C\uDFA4\";\n        case \"announcement\": return \"\uD83D\uDCE3\";\n        case \"open_announcement\": return \"\uD83D\uDCE3\";\n        case \"forum\": return \"\uD83D\uDCDC\";\n        default:\n            const n: never = type;\n            console.error(n);\n    }\n}\n\nfunction handleChannelClick(type: Channel_Type, cid: Id, sid: Id) {\n    if (type === \"text\" || type === \"announcement\" || type === \"open_announcement\") {\n        coreFunc.changeChnl(cid);\n    } else if (type === \"voice\") {\n        handleVoiceChannelJoin(cid, sid);\n    } else if (type === \"forum\") {\n        coreFunc.changeToForum(cid);\n    }\n}\n\nfunction handleVoiceChannelJoin(cid: Id, sid: Id) {\n    const chnl = vars.realm.chnlPerms[cid];\n    if (!chnl || !chnl.write) {\n        uiFunc.uiMsgT(LangPkg.ui.channel.no_permission, [\"!\"]);\n        return;\n    }\n    voiceFunc.joinToVoiceChannel(sid + \"=\" + cid);\n}\n\nfunction createCategory(category: Ui_render__category, root: HTMLElement, sid: Id) {\n    const detail = document.createElement(\"details\");\n    detail.open = true;\n\n    const summary = document.createElement(\"summary\");\n    summary.innerHTML = category.name;\n    detail.appendChild(summary);\n\n    category.chnls.forEach(channel => {\n        createChannel(channel, detail, sid);\n        vars.realm.chnlPerms[channel.id] = channel.perms;\n    });\n\n    root.appendChild(detail);\n}\n\nfunction findFirstTextChannel(categories: Ui_render__category[]) {\n    for (const cat of categories) {\n        const textChannel = cat.chnls.find(chnl => chnl.type === \"text\");\n        if (textChannel) return textChannel.id;\n    }\n    return null;\n}\n\nfunction downPanel() {\n    const downPanel = navHTML.realm__panel;\n    downPanel.innerHTML = \"\";\n    downPanel_events(downPanel);\n\n}\n\nfunction downPanel_events(panel: HTMLElement) {\n    const events = document.createElement(\"button\");\n    events.innerHTML = \"\uD83E\uDE87\";\n    events.title = \"Events\";\n    events.id = \"navs__realm__events\";\n    events.clA(\"btn\");\n    events.addEventListener(\"click\", render_events.show);\n    panel.appendChild(events);\n\n    socket.emit(\"realm.event.list\", vars.chat.to, true, (len: number) => {\n        events.setAttribute(\"data-count\", len.toString());\n    });\n}\n\nfunction realmInit(sid: Id, name: string, categories: Ui_render__category[], permission: number) {\n    initRealmState(permission);\n    createRealmNameSection(name, sid);\n\n    navHTML.realm__channels.innerHTML = \"\";\n    if (categories.length === 0 || categories.every(category => category.chnls.length === 0)) {\n        navHTML.realm__channels.innerHTML = \"No channels in this realm\";\n        vars.chat.chnl = null;\n        return;\n    }\n\n    categories.forEach(category => createCategory(category, navHTML.realm__channels, sid));\n\n    downPanel();\n\n    if (vars.chat.chnl === null)\n        vars.chat.chnl = findFirstTextChannel(categories);\n\n    coreFunc.changeChnl(vars.chat.chnl);\n\n    socketEvt[\"realm.thread.list\"].emitId(sid + \"=null\", sid, null);\n}\n\nexport default realmInit;", "import hub from \"../../hub\";\nhub(\"render/dm\");\n\nimport { navHTML } from \"../../var/html\";\nimport vars from \"../../var/var\";\nimport coreFunc from \"../../core/coreFunc\";\nimport renderUtils from \"./utils\";\nimport utils from \"../../utils/utils\";\nimport apis from \"../../api/apis\";\nimport socket from \"../../core/socket/socket\";\nimport { Core_socket__blocked, Core_socket__dm } from \"../../types/core/socket\";\nimport { updateUserProfileMarker } from \"./userStatusMarker\";\nimport apiVars from \"../../var/api\";\n\nconst render_dm = {\n    chats() {\n        navHTML.priv.innerHTML = \"\";\n\n        renderUtils.sortPrivs(vars.privs).forEach((id) => {\n            const privDiv = document.createElement(\"button\");\n            privDiv.classList.add(\"priv_chat\");\n            privDiv.classList.add(\"btn\");\n            privDiv.classList.add(\"userStatusMarker\");\n            privDiv.id = \"priv_chat_\" + id;\n            privDiv.setAttribute(\"data-status-id\", id);\n\n            const structDiv = document.createElement(\"div\");\n\n            const profileImg = document.createElement(\"img\");\n            profileImg.src = \"/api/profile/img?id=\" + id;\n            structDiv.appendChild(profileImg);\n\n            structDiv.innerHTML += apis.www.changeUserID(id);\n            privDiv.appendChild(structDiv);\n            navHTML.priv.appendChild(privDiv);\n\n            privDiv.addEventListener(\"click\", () => {\n                coreFunc.changeChat(\"$\" + id);\n                setTimeout(() => {\n                    render_dm.privsRead();\n                }, 100);\n            });\n\n            privDiv.addEventListener(\"contextmenu\", (e) => {\n                e.preventDefault();\n                socket.emit(\"user.profile\", id);\n            });\n            updateUserProfileMarker(id, apiVars.user_state[id]?.status.get());\n        });\n        render_dm.privsRead();\n        coreFunc.markSelectedChat();\n    },\n\n    privsRead() {\n        vars.privs.forEach((id) => {\n            const cl = document.querySelector(\"#priv_chat_\" + id)?.classList;\n            if (!cl) return;\n\n            const l = apiVars.lastMess[\"$\" + id]?.main;\n            if (!l) return;\n            let unreadPriv = false;\n\n            if (l.read != null && l.mess != null) {\n                unreadPriv = utils.extractTimeFromId(l.read) < utils.extractTimeFromId(l.mess);\n            } else if (l.read == null && l.mess != null) {\n                unreadPriv = true;\n            }\n\n            unreadPriv ? cl.add(\"unreadPriv\") : cl.remove(\"unreadPriv\");\n        });\n    },\n\n    dm_get(data: Core_socket__dm[], blocked: Core_socket__blocked[]){\n        data.forEach((priv) => {\n            const id = \"$\" + priv.priv;\n    \n            apiVars.lastMess[id] = apiVars.lastMess[id] || {};\n            apiVars.lastMess[id].main = {\n                read: priv.last?.main ?? null,\n                mess: priv.lastMessId ?? null,\n            }\n        })\n        vars.privs = data.map(d => d.priv);\n        render_dm.chats();\n    \n        vars.blocked = blocked;\n        if(vars.chat.to.startsWith(\"$\")) coreFunc.dmPlaceholder(vars.chat.to.substring(1));\n    },\n}\n\nexport default render_dm;", "const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst transactionDoneMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    // This mapping exists in reverseTransformCache but doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(this.request);\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nconst advanceMethodProps = ['continue', 'continuePrimaryKey', 'advance'];\nconst methodMap = {};\nconst advanceResults = new WeakMap();\nconst ittrProxiedCursorToOriginalProxy = new WeakMap();\nconst cursorIteratorTraps = {\n    get(target, prop) {\n        if (!advanceMethodProps.includes(prop))\n            return target[prop];\n        let cachedFunc = methodMap[prop];\n        if (!cachedFunc) {\n            cachedFunc = methodMap[prop] = function (...args) {\n                advanceResults.set(this, ittrProxiedCursorToOriginalProxy.get(this)[prop](...args));\n            };\n        }\n        return cachedFunc;\n    },\n};\nasync function* iterate(...args) {\n    // tslint:disable-next-line:no-this-assignment\n    let cursor = this;\n    if (!(cursor instanceof IDBCursor)) {\n        cursor = await cursor.openCursor(...args);\n    }\n    if (!cursor)\n        return;\n    cursor = cursor;\n    const proxiedCursor = new Proxy(cursor, cursorIteratorTraps);\n    ittrProxiedCursorToOriginalProxy.set(proxiedCursor, cursor);\n    // Map this double-proxy back to the original, so other cursor methods work.\n    reverseTransformCache.set(proxiedCursor, unwrap(cursor));\n    while (cursor) {\n        yield proxiedCursor;\n        // If one of the advancing methods was not called, call continue().\n        cursor = await (advanceResults.get(proxiedCursor) || cursor.continue());\n        advanceResults.delete(proxiedCursor);\n    }\n}\nfunction isIteratorProp(target, prop) {\n    return ((prop === Symbol.asyncIterator &&\n        instanceOfAny(target, [IDBIndex, IDBObjectStore, IDBCursor])) ||\n        (prop === 'iterate' && instanceOfAny(target, [IDBIndex, IDBObjectStore])));\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get(target, prop, receiver) {\n        if (isIteratorProp(target, prop))\n            return iterate;\n        return oldTraps.get(target, prop, receiver);\n    },\n    has(target, prop) {\n        return isIteratorProp(target, prop) || oldTraps.has(target, prop);\n    },\n}));\n\nexport { deleteDB, openDB, unwrap, wrap };\n", "import { Core_mess__dbMessage } from \"../../types/core/mess\";\nimport Id from \"../../types/Id\";\nimport utils from \"../../utils/utils\";\nimport vars from \"../../var/var\";\nimport { message_fetch } from \"../socket/logic/mess\";\nimport { openDB, IDBPDatabase } from \"idb\";\n\nconst DB_NAME = \"messages\";\nlet database: IDBPDatabase | null = null;\n\n/**\n * Opens a database with the current timestamp as the version.\n */\nexport async function getDB(upgrade?: (db: IDBPDatabase) => void): Promise<IDBPDatabase> {\n    if (!upgrade && database) return database;\n\n    const version = Date.now(); // UNIX timestamp\n    const newDB = await openDB(DB_NAME, version, {\n        upgrade(upgraded) {\n            if (upgrade) upgrade(upgraded);\n        },\n    });\n\n    database = newDB;\n    return newDB;\n}\n\n/**\n * Creates a collection if it doesn't exist.\n */\nexport async function createCollection(collection: string): Promise<IDBPDatabase> {\n    let db = await getDB();\n\n    if (!db.objectStoreNames.contains(collection)) {\n        db.close();\n        db = await getDB((upgraded) => {\n            const store = upgraded.createObjectStore(collection, { keyPath: \"_id\" });\n            store.createIndex(\"chnl\", \"chnl\", { unique: false });\n        });\n    }\n\n    return db;\n}\n\ninterface idb_message extends Core_mess__dbMessage {\n    chnl: Id;\n}\n\nclass MessageCacheController {\n    constructor() {\n        getDB();\n    }\n\n    async addMessage(chat: Id, chnl: Id, message: Core_mess__dbMessage) {\n        const msg: idb_message = {\n            ...message,\n            chnl\n        }\n        const db = await createCollection(chat);\n        await db.put(chat, msg);\n        await enforceChannelCacheLimit(db, chat, chnl);\n    }\n\n    async addMessages(chat: Id, chnl: Id, messages: Core_mess__dbMessage[]) {\n        if (messages.length === 0) return;\n\n        const db = await createCollection(chat);\n        const tx = db.transaction(chat, \"readwrite\");\n        const store = tx.objectStore(chat);\n\n        for (const message of messages) {\n            const msg: idb_message = { ...message, chnl };\n            await store.put(msg);\n            // TODO message cache\n            /**\n             * 1. make gen id more precise\n             * 2. remove await\n             */\n        }\n\n        await tx.done;\n        await enforceChannelCacheLimit(db, chat, chnl);\n    }\n\n    async getMessagesRaw(chat: Id, chnl: Id) {\n        const db = await createCollection(chat);\n\n        const tx = db.transaction(chat, \"readonly\");\n        const store = tx.objectStore(chat);\n        const index = store.index(\"chnl\");\n        const data = await index.getAll(chnl);\n        return data;\n    }\n\n    async getMessages() {\n        const { to, chnl } = vars.chat;\n        const data = await this.getMessagesRaw(to, chnl);\n        vars.chat.actMess = data.length;\n        data.reverse();\n        message_fetch(data);\n    }\n\n    async deleteMessage(chat: Id, id: Id) {\n        const db = await createCollection(chat);\n        const store = db.transaction(chat, \"readwrite\").objectStore(chat);\n        await store.delete(id);\n    }\n\n    async deleteMessages(chat: Id, ids: Id[]) {\n        const db = await createCollection(chat);\n        const tx = db.transaction(chat, \"readwrite\");\n        const store = tx.objectStore(chat);\n        for (const id of ids) {\n            store.delete(id);\n        }\n        await tx.done;\n    }\n\n    async editMessage(id: Id, msg: string, time: string, chatId: Id) {\n        const db = await createCollection(chatId);\n        const tx = db.transaction(chatId, \"readwrite\");\n        const store = tx.objectStore(chatId);\n\n        const existingMessage = await store.get(id);\n        if (!existingMessage) return;\n\n        const updatedMessage: idb_message = {\n            ...existingMessage,\n            msg,\n            lastEdit: time\n        }\n\n        await store.put(updatedMessage);\n        await tx.done;\n    }\n}\n\nasync function enforceChannelCacheLimit(db: IDBPDatabase, chat: Id, chnl: Id) {\n    const tx = db.transaction(chat, \"readwrite\");\n    const store = tx.objectStore(chat);\n    const index = store.index(\"chnl\");\n\n    // TODO add message limit to settings\n    const messages = await index.getAll(chnl);\n    if (messages.length <= 150) return;\n\n    messages.sort((a, b) => utils.extractTimeFromId(b._id) - utils.extractTimeFromId(a._id));\n\n    const excess = messages.length - 150;\n    for (let i = 0; i < excess; i++) {\n        await store.delete(messages[i]._id);\n    }\n\n    await tx.done;\n}\n\n\nconst messageCacheController = new MessageCacheController();\nexport default messageCacheController;", "import hub from \"../../../hub\";\nhub(\"socket/mess\");\n\nimport socket from \"../socket\";\nimport Id from \"../../../types/Id\";\nimport vars from \"../../../var/var\";\nimport apis from \"../../../api/apis\";\nimport coreFunc from \"../../coreFunc\";\nimport utils from \"../../../utils/utils\";\nimport messStyle from \"../../mess/style\";\nimport formatFunc from \"../../mess/format\";\nimport { messHTML } from \"../../../var/html\";\nimport render_dm from \"../../../ui/render/dm\";\nimport messInteract from \"../../mess/interact\";\nimport uiFunc from \"../../../ui/helpers/uiFunc\";\nimport messFunc, { editMessText } from \"../../mess/mess\";\nimport contextMenu from \"../../../ui/components/contextMenu\";\nimport { Vars_mess__pinned, Vars_realm__thread } from \"../../../types/var\";\nimport { Core_mess__dbMessage, Core_mess__receivedMessage } from \"../../../types/core/mess\";\nimport LangPkg, { langFunc } from \"../../../utils/translate\";\nimport apiVars from \"../../../var/api\";\nimport messageCacheController from \"../../cacheControllers/mess\";\n\nexport function mess(data: Core_mess__receivedMessage) {\n    // generate last message storage if needed\n    apiVars.lastMess[data.to] = apiVars.lastMess[data.to] || {};\n    apiVars.lastMess[data.to][data.chnl] = apiVars.lastMess[data.to][data.chnl] || { read: null, mess: null };\n\n    // update last message\n    apiVars.lastMess[data.to][data.chnl].mess = data._id;\n\n    messageCacheController.addMessage(data.to, data.chnl, convertReceivedMessageToDbMessage(data));\n\n    const isPrivateChat = data.to.startsWith(\"$\");\n    const currentChatIsDM = vars.chat.to.startsWith(\"$\");\n    const isSenderCurrentUser = data.fr === vars.user._id;\n\n    if (isPrivateChat && !currentChatIsDM && !isSenderCurrentUser) {\n        const title = langFunc(LangPkg.ui.new_message, apis.www.changeUserID(data.fr));\n        uiFunc.uiMsg(title);\n\n        if (\n            vars.settings.notifications &&\n            vars.user.status !== \"dnd\"\n        ) utils.sendNotification(title, data.msg, { msg: data });\n    }\n    if (isPrivateChat) render_dm.chats();\n\n    // end if not in chat\n    if (vars.chat.to !== data.to || vars.chat.chnl !== data.chnl) return;\n\n    // update last message read\n    apiVars.lastMess[data.to][data.chnl].read = data._id;\n    if (isPrivateChat) render_dm.privsRead();\n\n    // add message to chat\n    messFunc.addMess(convertReceivedMessageToDbMessage(data));\n    messStyle.hideFromMessageInfo();\n    messStyle.colorRole();\n\n    setTimeout(() => {\n        const lastMessageId = apiVars.lastMess[data.to][data.chnl].mess;\n        if (lastMessageId === data._id) {\n            socket.emit(\"message.mark.read\", data.to, data.chnl, data._id);\n        }\n    }, 1000);\n}\n\nfunction convertReceivedMessageToDbMessage(data: Core_mess__receivedMessage): Core_mess__dbMessage {\n    const mess: Core_mess__dbMessage = {\n        _id: data._id,\n        fr: data.fr,\n        msg: data.msg,\n    }\n\n    if (data.embed) mess.embed = data.embed;\n    if (data.res) mess.res = data.res;\n\n    return mess;\n}\n\nexport function message_fetch(data: Core_mess__dbMessage[]) {\n    try {\n        data.forEach((mess) => {\n            try {\n                messFunc.addMess(mess, false, true);\n            } catch (e) {\n                console.error(e);\n                console.error(mess);\n                const div = document.createElement(\"div\");\n                div.innerHTML = `<span style=\"color: red;\">${LangPkg.ui.failed_to_load_message}!</span>`;\n                messHTML.div.add(div);\n            }\n        });\n        messStyle.hideFromMessageInfo();\n        setTimeout(coreFunc.scrollToBottom, 30);\n    } catch (e) {\n        console.error(e);\n        const div = document.createElement(\"div\");\n        div.innerHTML = `<span style=\"color: red;\">${LangPkg.ui.failed_to_load_messages}! :(</span>`;\n        messHTML.div.add(div);\n    }\n    messStyle.colorRole();\n}\n\nexport function message_delete(id: Id, chatId: Id) {\n    document.querySelector(\"#mess__\" + id)?.remove();\n    messStyle.hideFromMessageInfo();\n    messageCacheController.deleteMessage(chatId, id);\n}\n\nexport function messages_delete(ids: Id[], chatId: Id) {\n    ids.forEach(id => {\n        document.querySelector(\"#mess__\" + id)?.remove();\n    })\n    messStyle.hideFromMessageInfo();\n    messageCacheController.deleteMessages(chatId, ids);\n}\n\nexport function message_edit(id: Id, msg: string, time: string, chatId: Id) {\n    const messageDiv = document.querySelector(\"#mess__\" + id + \" .mess_content\") as HTMLDivElement;\n    if (!messageDiv) return;\n    messageDiv.setAttribute(\"_plain\", msg);\n    formatFunc.formatMess(msg, messageDiv);\n    messageDiv.innerHTML += editMessText.replace(\"$$\", utils.formatDateFormUnix(parseInt(time, 36) * 1000));\n\n    const responeMessages = document.querySelectorAll(`[resMsgID=${id}] .res_msg`);\n    responeMessages.forEach(mess => {\n        mess.innerHTML = msg;\n    });\n    messStyle.hideFromMessageInfo();\n    messageCacheController.editMessage(id, msg, time, chatId);\n}\n\nexport function message_react(uid: Id, realm: Id, messId: Id, react: string) {\n    if (vars.chat.to != realm) return;\n\n    const mess = document.querySelector(\"#mess__\" + messId);\n    if (!mess) return;\n\n    const reactSpan = mess.querySelector(`span[_key=\"${react}\"]`);\n    if (!reactSpan) {\n        const span = document.createElement(\"span\");\n        span.setAttribute(\"_key\", react);\n        span.setAttribute(\"_users\", uid);\n        span.innerHTML = react + \" 1\";\n        span.title = apis.www.changeUserID(uid);\n        span.addEventListener(\"click\", () => {\n            socket.emit(\"message.react\", realm, messId, react);\n        });\n        mess.querySelector(\".mess_reacts\").appendChild(span);\n        messStyle.styleMessReacts(mess.querySelector(\".mess_reacts\"));\n        return;\n    }\n\n    let users = reactSpan.getAttribute(\"_users\").split(\",\");\n    if (users.includes(uid)) {\n        users = users.filter(u => u != uid);\n    } else {\n        users.push(uid);\n    }\n\n    reactSpan.setAttribute(\"_users\", users.join(\",\"));\n    messStyle.styleMessReacts(mess.querySelector(\".mess_reacts\"));\n}\n\nexport function message_search(data: Core_mess__dbMessage[]) {\n    if (data.length == 0) {\n        messHTML.div.innerHTML += LangPkg.ui.message.search_no_results;\n        return;\n    }\n    messHTML.div.innerHTML = \"<h2>\" + LangPkg.ui.message.search_results + \":</h2>\";\n\n    data.forEach((mess) => {\n        messFunc.addMess(mess, false);\n    });\n}\n\nexport function message_fetch_pinned(data: Vars_mess__pinned[]) {\n    vars.chat.pinned = data;\n}\n\nexport function realm_thread_list(data: Vars_realm__thread[]) {\n    vars.realm.threads = [\n        ...new Set(\n            [...vars.realm.threads, ...data]\n        )\n    ];\n\n    data.forEach(t => {\n        const chnlDiv = document.querySelector(\"#channel_\" + t.thread);\n        if (!chnlDiv) return;\n\n        const exists = document.querySelector(\"#channel_\\\\&\" + t._id);\n        if (!exists) {\n            const div = document.createElement(\"div\");\n            div.classList.add(\"channel_text\");\n            div.id = \"channel_&\" + t._id;\n            div.style.paddingLeft = \"2.4rem\";\n            div.innerHTML = `\\`- ${t.name}`;\n            div.addEventListener(\"click\", () => {\n                coreFunc.changeChnl(\"&\" + t._id);\n            });\n            chnlDiv.insertAdjacentElement(\"afterend\", div);\n            contextMenu.menuClickEvent(div, (e) => {\n                contextMenu.thread(e, t);\n            })\n        }\n\n        if (t.reply) {\n            const mess = document.querySelector<HTMLDivElement>(\"#mess__\" + t.reply);\n            if (mess) messInteract.thread(t, mess);\n        }\n    })\n}\n\nexport function realm_thread_delete(id: Id) {\n    document.querySelector(\"#channel_\\\\&\" + id)?.remove();\n    document.querySelector(\"#thread__\" + id)?.remove();\n}", "import SocketController from \"../cacheControllers/socketGeneral\";\nimport {\n    self_status_get,\n    realm_users_sync,\n    realm_users_activity_sync,\n    realm_event_notify,\n    user_status_update,\n} from \"./logic/evt\";\nimport render_realm from \"../../ui/render/realm\";\nimport render_user from \"../../ui/render/user\";\nimport realmInit from \"../../ui/render/realmInit\";\nimport render_dm from \"../../ui/render/dm\";\nimport { friend_get_all, friend_requests_get } from \"../../ui/components/mainView\";\nimport hub from \"../../hub\";\nimport { message_fetch_pinned, realm_thread_list } from \"./logic/mess\";\nhub(\"socket/engine\");\n\nconst eventsBuilder = [\n    [\"self.status.get\", self_status_get],\n    [\"realm.users.sync\", realm_users_sync],\n    [\"realm.users.activity.sync\", realm_users_activity_sync],\n    [\"realm.event.notify\", realm_event_notify],\n    [\"user.status.update\", user_status_update],\n    [\"user.status.update\", user_status_update],\n\n    [\"dm.get\", render_dm.dm_get],\n    [\"realm.get\", render_realm.realms],\n    [\"realm.setup\", realmInit],\n    [\"user.profile\", render_user.userProfile],\n\n    [\"friend.get.all\", friend_get_all],\n    [\"friend.requests.get\", friend_requests_get],\n\n    [\"message.fetch.pinned\", message_fetch_pinned],\n    [\"realm.thread.list\", realm_thread_list],\n] as const;\n\ntype EventKeys = (typeof eventsBuilder)[number][0];\n\nexport const socketEvt: Record<EventKeys, SocketController> = Object.fromEntries(\n    eventsBuilder.map(([eventName, handler]) => [eventName, new SocketController(eventName, handler)])\n) as Record<EventKeys, SocketController>;", "import hub from \"../../hub\";\nhub(\"components/mainView\");\n\nimport vars from \"../../var/var\";\nimport { mainViewHTML } from \"../../var/html\";\nimport coreFunc from \"../../core/coreFunc\";\nimport apis from \"../../api/apis\";\nimport socket from \"../../core/socket/socket\";\nimport uiFunc from \"../helpers/uiFunc\";\nimport Id from \"../../types/Id\";\nimport { Vars_mainView__friend, Vars_mainView__page } from \"../../types/var\";\nimport LangPkg, { langFunc } from \"../../utils/translate\";\nimport { updateUserProfileMarker } from \"../render/userStatusMarker\";\nimport apiVars from \"../../var/api\";\nimport UserStateManager from \"../helpers/userStateManager\";\nimport { socketEvt } from \"../../core/socket/engine\";\n\nconst mainView = {\n    show() {\n        socket.emit(\"friend.get.all\");\n        socket.emit(\"friend.requests.get\");\n    },\n\n    renderFriends() {\n        mainViewHTML.friendsContainer.innerHTML = \"\";\n\n        if (vars.mainView.friends.length == 0) {\n            mainViewHTML.noFriends.style.display = \"\";\n            return;\n        } else mainViewHTML.noFriends.style.display = \"none\";\n\n        vars.mainView.friends.forEach(friend => {\n            const friendDiv = document.createElement(\"div\");\n            friendDiv.classList.add(\"main__view__friend\");\n            friendDiv.classList.add(\"userStatusMarker\");\n            friendDiv.setAttribute(\"data-status-id\", friend._id);\n\n            friendDiv.innerHTML = `\n                <img class=\"friend__avatar\" src=\"/api/profile/img?id=${friend._id}\" />\n                <div>\n                    <span class=\"friend__name\">${apis.www.changeUserID(friend._id)}</span>\n                    <br />\n                    <span class=\"friend__status\">${friend.status}</span>\n                    ${friend.text ? `<span class=\"friend__status_text\">${friend.text}</span>` : \"\"}\n                </div>\n            `.trim();\n\n            friendDiv.querySelector(\".friend__name\").addEventListener(\"click\", (e) => {\n                e.stopPropagation();\n                socketEvt[\"user.profile\"].emitDataId(friend._id);\n            });\n            friendDiv.addEventListener(\"click\", () => {\n                coreFunc.changeChat(\"$\" + friend._id);\n            });\n            mainViewHTML.friendsContainer.appendChild(friendDiv);\n\n            UserStateManager.set(friend._id, {\n                status: friend?.status,\n                statusText: friend?.text\n            });\n        });\n\n        mainView.sortFriends(vars.mainView.page);\n    },\n\n    changeView(page: Vars_mainView__page) {\n        vars.mainView.page = page;\n        if ([\"all\", \"online\", \"offline\"].includes(page)) {\n            mainView.sortFriends(page);\n            mainViewHTML.friends.style.display = \"\";\n            mainViewHTML.requests.style.display = \"none\";\n            mainView.renderFriends();\n        }\n        else if (page == \"requests\") {\n            mainView.renderRequests();\n            mainViewHTML.requests.style.display = \"\";\n            mainViewHTML.friends.style.display = \"none\";\n        }\n\n        mainViewHTML.div.querySelectorAll<HTMLElement>(\"[main_view]\").forEach(e => e.style.backgroundColor = \"\");\n        document.querySelector<HTMLElement>(`[main_view=\"${page}\"]`).style.backgroundColor = \"var(--accent)\";\n    },\n\n    sortFriends(status: Vars_mainView__page) {\n        const friends = mainViewHTML.div.querySelectorAll<HTMLElement>(\".main__view__friend\");\n        if (friends.length == 0) return;\n        mainViewHTML.noFriends.style.display = \"none\";\n        let visibleCount = friends.length;\n\n        friends.forEach(friend => {\n            const friendStatus = friend.getAttribute(\"data-status\") || \"offline\";\n\n            if (status == \"all\") {\n                friend.style.display = \"\";\n            }\n            else if (status == \"online\" && (friendStatus == \"online\" || friendStatus == \"idle\" || friendStatus == \"dnd\")) {\n                friend.style.display = \"\";\n            }\n            else if (status == \"offline\" && friendStatus == \"offline\") {\n                friend.style.display = \"\";\n            }\n            else {\n                friend.style.display = \"none\";\n                visibleCount--;\n            }\n        });\n\n        if (visibleCount == 0) mainViewHTML.noFriends.style.display = \"\";\n    },\n\n    renderRequests() {\n        mainViewHTML.requestsContainer.innerHTML = \"\";\n        mainViewHTML.requestCount.innerHTML = `(${vars.mainView.requests.length})`;\n\n        if (vars.mainView.requests.length == 0) {\n            mainViewHTML.noRequests.style.display = \"\";\n            return;\n        } else mainViewHTML.noRequests.style.display = \"none\";\n\n        vars.mainView.requests.forEach(request => {\n            const requestDiv = document.createElement(\"div\");\n            requestDiv.classList.add(\"main__view__friend\");\n            requestDiv.classList.add(\"userStatusMarker\");\n            requestDiv.setAttribute(\"data-status-id\", request);\n\n            requestDiv.innerHTML = `\n                <img class=\"friend__avatar\" src=\"/api/profile/img?id=${request}\" />\n                <div>\n                    <div class=\"friend__name\">${apis.www.changeUserID(request)}</div>\n                    <button onclick=\"mglInt.mainView.requestFriendResponse('${request}', true)\" class=\"request__btn\">Accept</button>\n                    <button onclick=\"mglInt.mainView.requestFriendResponse('${request}', false)\" class=\"request__btn\">Decline</button>\n                </div>\n            `;\n\n            function showUser() {\n                socket.emit(\"user.profile\", request);\n            }\n            requestDiv.querySelector(\".friend__name\").addEventListener(\"click\", showUser);\n            requestDiv.querySelector(\".friend__avatar\").addEventListener(\"click\", showUser);\n\n            mainViewHTML.requestsContainer.appendChild(requestDiv);\n            updateUserProfileMarker(request, apiVars.user_state[request]?.status.get());\n        });\n    },\n\n    async removeFriend(friend: Id) {\n        if (!friend) return;\n\n        const conf = await uiFunc.confirm(langFunc(LangPkg.ui.confirm.remove_friend, apis.www.changeUserID(friend)) + \"?\");\n        if (!conf) return;\n        const conf2 = await uiFunc.confirm(langFunc(LangPkg.ui.confirm.sure, apis.www.changeUserID(friend)) + \"?\");\n        if (!conf2) return;\n\n        socket.emit(\"friend.remove\", friend);\n        socket.emit(\"friend.get.all\");\n    },\n\n    async removeFriendRequest(friend: Id) {\n        if (!friend) return;\n\n        const conf = await uiFunc.confirm(langFunc(LangPkg.ui.confirm.remove_friend, apis.www.changeUserID(friend)) + \"?\");\n        if (!conf) return;\n\n        socket.emit(\"friend.request.remove\", friend);\n    },\n}\n\nmainView.changeView(\"online\");\n\nexport function friend_get_all(friends: Vars_mainView__friend[]) {\n    vars.mainView.friends = friends;\n    mainView.renderFriends();\n}\n\nexport function friend_requests_get(requests: Id[]) {\n    vars.mainView.requests = requests;\n    mainView.renderRequests();\n}\n\nsocket.on(\"friend.request\", (from) => {\n    const text = langFunc(LangPkg.ui.friend.request, apis.www.changeUserID(from));\n    uiFunc.uiMsg(text, {\n        onClick: () => {\n            coreFunc.changeChat(\"main\");\n            mainView.changeView(\"requests\");\n        }\n    });\n\n    socket.emit(\"friend.requests.get\");\n});\n\nsocket.on(\"friend.response\", (from, accept) => {\n    if (!accept) {\n        uiFunc.uiMsgT(LangPkg.ui.friend.declined, apis.www.changeUserID(from));\n        return;\n    }\n    uiFunc.uiMsgT(LangPkg.ui.friend.request, apis.www.changeUserID(from));\n\n    if (vars.chat.to != \"main\") return;\n    socket.emit(\"friend.get.all\");\n});\n\nexport default mainView;", "import apis from \"../../api/apis\";\nimport coreFunc from \"../../core/coreFunc\";\nimport { realm_thread_list } from \"../../core/socket/logic/mess\";\nimport socket from \"../../core/socket/socket\";\nimport Id from \"../../types/Id\";\nimport { Vars_realm__thread } from \"../../types/var\";\nimport LangPkg from \"../../utils/translate\";\nimport { messHTML } from \"../../var/html\";\nimport vars from \"../../var/var\";\nimport uiFunc from \"../helpers/uiFunc\";\n\nexport default function render_forum(forums: Vars_realm__thread[], chnlId: Id) {\n    const container = document.createElement(\"div\");\n\n    const addBtn = document.createElement(\"button\");\n    addBtn.classList.add(\"btn\");\n    addBtn.id = \"forum_add\";\n    addBtn.innerHTML = LangPkg.ui.create_thread;\n    addBtn.addEventListener(\"click\", async () => {\n        const name = await uiFunc.prompt(LangPkg.ui.create_thread_name);\n        if (!name) return;\n        socket.emit(\"realm.thread.create\", vars.chat.to, chnlId, name, null, (id: Id) => {\n            coreFunc.changeChnl(\"&\" + id);\n        });\n    });\n    container.appendChild(addBtn);\n    container.appendChild(document.createElement(\"hr\"));\n    container.appendChild(document.createElement(\"br\"));\n\n    forums.forEach(forum => {\n        const div = document.createElement(\"div\");\n        div.classList.add(\"forum\");\n        div.id = \"forum__\" + forum._id;\n        div.innerHTML = `\n            <div class=\"forum__author\">${apis.www.changeUserID(forum.author)}</div>\n            <div class=\"forum__name\">${forum.name}</div>\n        `;\n        container.appendChild(div);\n        div.addEventListener(\"click\", () => {\n            realm_thread_list([forum]);\n            coreFunc.changeChnl(\"&\" + forum._id);\n        });\n    });\n    messHTML.div.appendChild(container);\n}", "import hub from \"../hub\";\nhub(\"coreFunc\");\n\nimport Id from \"../types/Id\";\nimport vars, { getEmptyRealmConfig } from \"../var/var\";\nimport apis from \"../api/apis\";\nimport utils from \"../utils/utils\";\nimport socket from \"./socket/socket\";\nimport messStyle from \"./mess/style\";\nimport { renderState } from \"../ui/render/var\";\nimport mainView from \"../ui/components/mainView\";\nimport { customEmoji } from \"../ui/components/emoji\";\nimport { navHTML, coreHTML, messHTML, mainViewHTML } from \"../var/html\";\nimport { mglVar } from \"../var/mgl\";\nimport staticData from \"../var/staticData\";\nimport LangPkg from \"../utils/translate\";\nimport render_dm from \"../ui/render/dm\";\nimport render_forum from \"../ui/render/forum\";\nimport { Vars_realm__thread } from \"../types/var\";\nimport { Core_socket__blocked, Core_socket__dm } from \"../types/core/socket\";\nimport { socketEvt } from \"./socket/engine\";\nimport messageCacheController from \"./cacheControllers/mess\";\n\nconst coreFunc = {\n    async changeChat(id: Id, chnl: Id | \"main\" | null = null) {\n        messHTML.div.innerHTML = \"\";\n        customEmoji.categories = [];\n        customEmoji.emojis = {};\n        vars.realm = getEmptyRealmConfig();\n\n        if (id == \"main\") {\n            vars.chat.to = \"main\";\n            messHTML.bar.style.display = \"none\";\n            document.querySelector(\"title\").innerHTML = staticData.baseTitle;\n\n            navHTML.main.style.display = \"\";\n            navHTML.realms.style.display = \"none\";\n            navHTML.main__call.style.display = \"none\";\n            messHTML.nav.style.display = \"none\";\n            mainViewHTML.div.style.display = \"\";\n            messHTML.div.style.display = \"none\";\n            mainView.show();\n            this.markSelectedChat();\n\n            return;\n        }\n\n        setTimeout(() => {\n            if (!utils.ss()) return;\n            if (id != \"main\" && !id.startsWith(\"$\")) return;\n            document.querySelector(\"nav\").style.left = \"-360px\";\n        }, 300);\n\n        messHTML.bar.style.display = \"block\";\n        messHTML.div.style.display = \"\";\n        messHTML.nav.style.display = \"\";\n        mainViewHTML.div.style.display = \"none\";\n        vars.chat.to = id;\n        vars.chat.actMess = 0;\n\n        if (id.startsWith(\"$\")) {\n            document.querySelector(\"title\").innerHTML = staticData.baseTitle + \" | \" + apis.www.changeUserID(id.substring(1));\n            navHTML.main.style.display = \"\";\n            navHTML.realms.style.display = \"none\";\n            vars.chat.chnl = \"main\";\n\n            if (!vars.privs.includes(id.substring(1))) {\n                const rawId = id.substring(1);\n                const data = await new Promise(res => {\n                    socket.emit(\"dm.create\", rawId, () => {\n                        socket.emit(\"dm.get\", (data: Core_socket__dm[], blocked: Core_socket__blocked[]) => {\n                            res([data, blocked]);\n                        });\n                    });\n                })\n                render_dm.dm_get(data[0], data[1]);\n            }\n\n            coreFunc.loadChat();\n            coreFunc.fetchPinned();\n            vars.realm.users = [];\n            vars.realm.roles = [];\n            vars.realm.chnlPerms = {};\n            coreFunc.dmPlaceholder(id.substring(1));\n            navHTML.main__call.style.display = \"\";\n            messHTML.nav_priv.style.display = \"\";\n            messHTML.nav_realm.style.display = \"none\";\n        } else {\n            document.querySelector(\"title\").innerHTML = staticData.baseTitle + \" | \" + apis.www.changeChat(id);\n            navHTML.main.style.display = \"none\";\n            navHTML.realms.style.display = \"\";\n            messHTML.nav_priv.style.display = \"none\";\n            messHTML.nav_realm.style.display = \"\";\n            vars.chat.chnl = chnl;\n            renderState.chnl_user = false;\n            navHTML.realm__channels.style.display = \"\";\n            navHTML.realm__users.style.display = \"none\";\n            socketEvt[\"realm.setup\"].emitDataId(id);\n            socketEvt[\"realm.users.sync\"].emitDataId(id);\n            socketEvt[\"realm.users.activity.sync\"].emitDataId(id);\n        }\n        coreFunc.markSelectedChat();\n    },\n\n    changeChnl(id: Id) {\n        vars.chat.chnl = id;\n        vars.chat.actMess = 0;\n        vars.chat.selectedMess = null;\n\n        document.querySelectorAll(\".channel_textActive\").forEach(e => e.classList.remove(\"channel_textActive\"));\n        document.querySelector(\"#channel_\" + utils.escape(id))?.classList?.add(\"channel_textActive\");\n        coreHTML.messages_nav__realm__description.innerHTML = vars.realm.desc[id] || \"\";\n\n        coreFunc.loadChat();\n        coreFunc.fetchPinned();\n        if (!id.startsWith(\"&\")) {\n            setTimeout(() => {\n                socketEvt[\"realm.thread.list\"].emitId(vars.chat.to + \"=\" + vars.chat.chnl, vars.chat.to, vars.chat.chnl);\n            }, 100); // wait for load chat\n        }\n\n        let permToWrite = false;\n        if (id.startsWith(\"&\")) {\n            const tid = id.substring(1);\n            const thread = vars.realm.threads.find(t => t._id == tid);\n            if (thread) {\n                const chnl = vars.realm.chnlPerms[thread.thread];\n                permToWrite = chnl.threadWrite;\n            }\n        }\n        else if (id.startsWith(\"^\")) {\n            permToWrite = vars.realm.chnlPerms[id]?.threadWrite || false;\n        }\n        else {\n            const chnl = vars.realm.chnlPerms[id];\n            if (chnl) {\n                permToWrite = chnl.write;\n            }\n        }\n\n        messHTML.input.placeholder = permToWrite ?\n            LangPkg.ui.message.placeholder + \"...\" :\n            LangPkg.ui.message.read_only + \"!\";\n        messHTML.input.disabled = !permToWrite;\n        messHTML.bar.style.display = \"\";\n    },\n\n    loadChat() {\n        coreFunc.loadMess();\n        setTimeout(coreFunc.focusInp, 100);\n        setTimeout(() => {\n            messHTML.div.scrollTop = messHTML.div.scrollHeight;\n        }, 300);\n    },\n\n    focusInp(end: boolean = false) {\n        if (utils.ss()) return;\n        setTimeout(() => {\n            messHTML.input.focus();\n            // move cursor to end\n            if (end) messStyle.setSelectionStart();\n        }, 100);\n    },\n\n    loadMess() {\n        messHTML.div.innerHTML = \"\";\n        const tmp = vars.chat.actMess;\n        vars.chat.actMess += staticData.messCount;\n        if (vars.chat.to == \"main\") return;\n\n        if(socket.connected) {\n            socket.emit(\"message.fetch\", vars.chat.to, vars.chat.chnl, tmp, vars.chat.actMess);\n            socket.emit(\"message.mark.read\", vars.chat.to, vars.chat.chnl, \"last\");\n        } else {\n            messageCacheController.getMessages();\n        }\n    },\n\n    scrollToBottom() {\n        if (vars.temp.scrollBlock) return;\n        vars.temp.scrollBlock = true;\n        setTimeout(() => {\n            messHTML.div.scrollTop = messHTML.div.scrollHeight;\n        }, 50);\n        setTimeout(() => {\n            vars.temp.scrollBlock = false;\n        }, 300);\n    },\n\n    markSelectedChat() {\n        document.querySelectorAll(\".priv_chat\").forEach((ele) => {\n            ele.classList.remove(\"priv_chatActive\")\n        });\n        document.querySelectorAll(\".realm\").forEach((ele) => {\n            ele.classList.remove(\"realm_chatActive\")\n        });\n\n        const to = vars.chat.to;\n        if (to == \"main\") { }\n        else if (to.startsWith(\"$\")) document.querySelector(\"#priv_chat_\" + to.substring(1)).classList.add(\"priv_chatActive\");\n        else document.querySelector(\"#realm_chat_\" + to).classList.add(\"realm_chatActive\");\n    },\n\n    dmPlaceholder(id: Id) {\n        function set(text: string, disabled: boolean) {\n            messHTML.input.placeholder = text;\n            messHTML.input.disabled = disabled;\n        }\n\n        const toBlocked = vars.blocked.some(block => block.block == id);\n        if (toBlocked) return set(LangPkg.ui.message.block_placeholder.block + \"!\", true);\n\n        const frBlocked = vars.blocked.some(block => block.blocked == id);\n        if (frBlocked) return set(LangPkg.ui.message.block_placeholder.blocked + \"!\", true);\n\n        set(LangPkg.ui.message.placeholder + \"...\", false);\n    },\n\n    async changeToForum(id: Id) {\n        vars.chat.chnl = \"\";\n        const forms = await new Promise(r => {\n            socketEvt[\"realm.thread.list\"].emitId(vars.chat.to + \"=\" + id, vars.chat.to, id, r);\n        }) as Vars_realm__thread[];\n        messHTML.div.innerHTML = \"\";\n        render_forum(forms, id);\n        messHTML.input.placeholder = LangPkg.ui.message.read_only + \"!\";\n        messHTML.input.disabled = true;\n        messHTML.bar.style.display = \"none\";\n    },\n\n    fetchPinned(){\n        socketEvt[\"message.fetch.pinned\"].emitId(vars.chat.to + \"=\" + vars.chat.chnl, vars.chat.to, vars.chat.chnl);\n    }\n}\n\nexport default coreFunc;\nmglVar.coreFunc = coreFunc;", "import hub from \"../hub\";\nhub(\"var/keys\");\n\nexport const KeyState = {\n    shift: false,\n    ctrl: false,\n    alt: false,\n}\nexport default KeyState;\n\ndocument.addEventListener(\"keydown\", (e) => {\n    KeyState.shift = e.shiftKey;\n    KeyState.ctrl = e.ctrlKey;\n    KeyState.alt = e.altKey;\n});\n\ndocument.addEventListener(\"keyup\", (e) => {\n    KeyState.shift = e.shiftKey;\n    KeyState.ctrl = e.ctrlKey;\n    KeyState.alt = e.altKey;\n});", "import hub from \"../../hub\";\nhub(\"interact/ui\");\n\nimport Id from \"../../types/Id\";\nimport vars from \"../../var/var\";\nimport { messHTML } from \"../../var/html\";\nimport coreFunc from \"../../core/coreFunc\";\nimport messStyle from \"../../core/mess/style\";\nimport socket from \"../../core/socket/socket\";\nimport uiFunc, { promptDiv } from \"../helpers/uiFunc\";\nimport KeyState from \"../../var/keys\";\nimport LangPkg from \"../../utils/translate\";\nimport { socketEvt } from \"../../core/socket/engine\";\n\nconst uiInteract = {\n    editMess(id: Id) {\n        const messageDiv = document.querySelector(\"#mess__\" + id + \" .mess_content\");\n        if (!messageDiv) return;\n        const message = messageDiv.getAttribute(\"_plain\");\n        messHTML.input.value = message;\n        vars.temp.editId = id;\n\n        messHTML.editClose.style.display = \"block\";\n        coreFunc.focusInp(true);\n        messStyle.sendBtnStyle();\n        messStyle.messageHeight();\n        messStyle.setSelectionStart();\n    },\n\n    clipboardError(text: string) {\n        const div = document.createElement(\"div\");\n        div.style.opacity = \"0\";\n        div.classList.add(\"prompt\");\n        div.innerHTML = \"<h2>\" + LangPkg.ui.clipboard.error + \".</h2>\";\n        div.innerHTML += \"<h3>\" + LangPkg.ui.clipboard.error_text + \".</h3>\";\n\n        div.appendChild(document.createElement(\"br\"));\n\n        const textarea = document.createElement(\"textarea\");\n        textarea.value = text;\n        div.appendChild(textarea);\n\n        div.appendChild(document.createElement(\"br\"));\n\n        const btn = document.createElement(\"button\");\n        btn.innerHTML = \"OK\";\n        div.appendChild(btn);\n        btn.addEventListener(\"click\", () => {\n            div.fadeOut();\n            setTimeout(() => {\n                div.remove();\n            }, 2000);\n        });\n\n        promptDiv.appendChild(div);\n        div.fadeIn(() => {\n            textarea.select();\n        });\n    },\n\n    async createThread(messId: Id = null) {\n        const { to, chnl } = vars.chat;\n        if (!to || !chnl) return;\n        if (to.startsWith(\"$\")) return;\n        if (!vars.realm.chnlPerms[chnl]?.threadCreate) return;\n\n        const name = await uiFunc.prompt(LangPkg.ui.create_thread_name);\n        if (!name) return;\n\n        socket.emit(\"realm.thread.create\", to, chnl, name, messId, () => {\n            socketEvt[\"realm.thread.list\"].emitId(to + \"=\" + chnl, to, chnl);\n        });\n    },\n\n    async deleteMess(id: Id) {\n        const keys = KeyState.shift || KeyState.ctrl; // if shift or ctrl is pressed skip confirmation\n        if (!keys) {\n            const conf = await uiFunc.confirm(LangPkg.ui.confirm.delete_message + \"?\"); // TODO rm mess confirm make better (popup with content) \n            if (!conf) return;\n        }\n        socket.emit(\"message.delete\", vars.chat.to, id);\n    }\n}\n\nexport default uiInteract;", "import hub from \"../hub\";\nhub(\"utils\");\n\nimport apis from \"../api/apis\";\nimport Id from \"../types/Id\";\nimport uiInteract from \"../ui/interact/ui\";\n\nconst utils = {\n    ss(): boolean {\n        return window.innerWidth < 800;\n    },\n\n    isMobile(): boolean {\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    },\n\n    extractTimeFromId(id: Id): number {\n        if (!id) return 0;\n        const timePart = id.split(\"-\")[0];\n        const timeUnix = parseInt(timePart, 36);\n        return timeUnix;\n    },\n\n    formatDateFormUnix(unixTimestamp: number): string {\n        const date = new Date(unixTimestamp);\n\n        const day = date.getDate();\n        const month = date.getMonth() + 1;\n        const year = date.getFullYear();\n        const hours = date.getHours();\n        const minutes = date.getMinutes();\n\n        const formattedDate = `${day}.${month}.${year} ${hours}:${(minutes < 10 ? '0' : '')}${minutes}`;\n        return formattedDate;\n    },\n\n    validId(id: Id): boolean {\n        if (!id) return false;\n        if (typeof id !== \"string\") return false;\n        if (id.split(\"-\").length != 3) return false;\n        return true;\n    },\n\n    writeToClipboard(text: string): Promise<boolean> {\n        return new Promise((resolve) => {\n            navigator.clipboard.writeText(text).then(() => {\n                resolve(true);\n            }).catch(() => {\n                uiInteract.clipboardError(text);\n                resolve(false);\n            });\n        })\n    },\n\n    sendNotification(title: string, body: string, payload: Record<string, any> = {}): void {\n        switch (apis.app.apiType) {\n            case \"rn\":\n            case \"ele\":\n                apis.api.send({\n                    type: \"notif\",\n                    title,\n                    msg: body,\n                    payload\n                });\n                break;\n            case \"web\":\n                if (Notification.permission === \"granted\") {\n                    const notification = new Notification(title, { body: body });\n                    notification.onclick = () => {\n                        window.focus();\n                        notification.close();\n                    }\n                }\n                break;\n            default:\n                break;\n        }\n    },\n\n    escape(selector: string): string {\n        return selector.replace(/([.&*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n    },\n\n    rmRef<T>(obj: T): T {\n        return JSON.parse(JSON.stringify(obj));\n    }\n}\n\nexport default utils;", "import hub from \"../hub\";\nimport cw from \"../core\";\nimport { Lang_Pkg } from \"../types/utils\";\nimport utils from \"./utils\";\nhub(\"translate\");\n\nexport const LangRef:\n    { localesList: string[] } =\n    { localesList: [] }\n\nconst LangPkg: Lang_Pkg = {};\n\nexport function langFunc(text: string, ...data: any[]): string {\n    return text.replace(/\\\\\\$|(?<!\\\\)\\$/g, (match) => {\n        if (match === \"\\\\$\") return \"$\";\n        return data.shift()?.toString() || \"$\";\n    });\n}\n\nexport async function init_translate() {\n    document.querySelectorAll(\"[translate]\").forEach(ele => {\n        if (ele.getAttribute(\"translate\")) return;\n        ele.setAttribute(\"translate\", ele.innerHTML.trim());\n    });\n\n    LangRef.localesList = cw.get(\"lang/list.txt\").split(\"\\n\");\n    LangRef.localesList.unshift(\"en\");\n\n    let lang = localStorage.getItem(\"lang\");\n    if (!lang) {\n        const navigatorLang = navigator.language.split(\"-\")[0];\n        const langIndex = LangRef.localesList.indexOf(navigatorLang);\n        lang = langIndex > -1 ? LangRef.localesList[langIndex] : \"en\";\n    }\n\n    await load_translate(lang);\n}\n\nexport async function load_translate(lang: string = \"en\") {\n    if (!LangRef.localesList.includes(lang)) return;\n    localStorage.setItem(\"lang\", lang);\n\n    const LocalLangPkg: Lang_Pkg = {\n        api: await importData<Lang_Pkg[\"api\"]>(lang, \"api\"),\n        media: await importData<Lang_Pkg[\"media\"]>(lang, \"media\"),\n        settings: await importData<Lang_Pkg[\"settings\"]>(lang, \"settings\"),\n        settings_realm: await importData<Lang_Pkg[\"settings_realm\"]>(lang, \"settings.realm\"),\n        settings_user: await importData<Lang_Pkg[\"settings_user\"]>(lang, \"settings.user\"),\n        socket: await importData<Lang_Pkg[\"socket\"]>(lang, \"socket\"),\n        ui: await importData<Lang_Pkg[\"ui\"]>(lang, \"ui\"),\n        uni: await importData<Lang_Pkg[\"uni\"]>(lang, \"uni\"),\n        common: await importData<Lang_Pkg[\"common\"]>(lang, \"common\"),\n        InternalCode: await importData<Lang_Pkg[\"InternalCode\"]>(lang, \"code\")\n    }\n\n    for (const key in LocalLangPkg) {\n        LangPkg[key] = LocalLangPkg[key];\n    }\n\n    translateHTML();\n}\n\nexport function translateHTML() {\n    document.querySelectorAll(\"[translate]\").forEach(ele => {\n        const key = ele.getAttribute(\"translate\");\n        ele.innerHTML = getDataByKey(key);\n    });\n}\n\nfunction getDataByKey(keyChain: string): string | null {\n    const keys = keyChain.split(\".\");\n    let data = utils.rmRef(LangPkg);\n\n    for (const key of keys.slice(0, -1)) {\n        data = data[key];\n        if (!data) return null;\n    }\n\n    return data?.[keys[keys.length - 1]];\n}\n\nasync function importData<T>(lang: string, pkg: string) {\n    const dynamicImport = new Function(\"path\", \"return import(path);\");\n    const data = await dynamicImport(`./lang/${lang}/${pkg}.js`)\n    return data.default as T;\n}\n\nexport default LangPkg;\n", "import hub from \"../../hub\";\nhub(\"helpers/uiFunc\");\n\nimport debugFunc, { LogLevel } from \"../../core/debug\";\nimport LangPkg, { langFunc } from \"../../utils/translate\";\nimport { Ui_helper_uiMessage__opts, Ui_helper_uiMsg__opts } from \"../../types/ui/helpers\";\n\nexport const errMessesDiv = document.querySelector<HTMLDivElement>(\"#errMesses\");\nexport const promptDiv = document.querySelector<HTMLDivElement>(\"#prompt\");\n\nconst uiFunc = {\n    async uiMessage(message: string, opts: Ui_helper_uiMessage__opts = {}) {\n        opts = {\n            displayTime: 6000,\n            ...opts,\n        }\n        const div = document.createElement(\"div\");\n        div.innerHTML = message;\n\n        div.style.top = `-${div.offsetHeight + 20}px`;\n        if (opts.className) div.classList.add(opts.className);\n        if (opts.backgroundColor) div.style.backgroundColor = opts.backgroundColor;\n\n        const padding = 10;\n        let topPosition = calculateTopPosition();\n\n        function calculateTopPosition() {\n            let top = 0;\n            for (const child of errMessesDiv.children)\n                top += (child as HTMLDivElement).offsetHeight + padding;\n            return top;\n        }\n\n        let ended = false;\n\n        async function end() {\n            ended = true;\n            div.style.top = `-${div.offsetHeight + 20}px`;\n\n            await delay(700);\n            for (const child of errMessesDiv.children) {\n                const childE = child as HTMLDivElement;\n                const currentTop = parseInt(childE.style.top.replace(\"px\", \"\"));\n                childE.style.top = `${currentTop - padding - div.offsetHeight}px`;\n            }\n            div.remove();\n        }\n\n        div.addEventListener(\"click\", end);\n        if (opts.onClick) div.addEventListener(\"click\", opts.onClick);\n\n        errMessesDiv.appendChild(div);\n        await delay(100);\n        div.style.top = `${10 + topPosition}px`;\n\n        await delay(opts.displayTime - 700);\n        if (ended) return;\n        await end();\n    },\n\n    uiMsg(data: string, opts: Ui_helper_uiMsg__opts = {}) {\n        debugFunc.msg(LogLevel.INFO, \"uiMsg:\", data);\n\n        opts = {\n            extraTime: 0,\n            ...opts\n        }\n\n        const speed = 1 / 3; //1s = 3 words\n        const time = data.split(\" \").length * speed + 6 + opts.extraTime;\n\n        const msgOpts: Ui_helper_uiMessage__opts = {\n            displayTime: time * 1000,\n            className: \"uiMsgClass\",\n        }\n        if (opts.onClick) msgOpts.onClick = opts.onClick;\n\n        uiFunc.uiMessage(data, msgOpts);\n    },\n\n    uiMsgT(text: string, ...data: any) {\n        let lastText = \"\";\n        if (data.length > 0) {\n            if (Array.isArray(data[0])) {\n                lastText = data.shift();\n            }\n        }\n\n        text = langFunc(text, ...data) + lastText;\n        uiFunc.uiMsg(text);\n    },\n\n    prompt(text, defaultValue = \"\"): Promise<string> {\n        return new Promise((resolve) => {\n            function end() {\n                resolve(input.value);\n                div.fadeOut();\n                setTimeout(() => {\n                    div.remove();\n                }, 2000);\n            }\n\n            const div = document.createElement(\"div\");\n            div.style.opacity = \"0\";\n            div.classList.add(\"prompt\");\n            div.innerHTML = \"<p>\" + text + \"<p><br />\";\n\n            const input = document.createElement(\"input\");\n            input.type = \"text\";\n            input.value = defaultValue;\n            input.addEventListener(\"keydown\", (e) => {\n                if (e.key == \"Enter\") end();\n            })\n            div.appendChild(input);\n            setTimeout(() => {\n                input.focus();\n            }, 100);\n\n            div.appendChild(document.createElement(\"br\"));\n\n            const btn = document.createElement(\"button\");\n            btn.innerHTML = \"OK\";\n            div.appendChild(btn);\n            btn.addEventListener(\"click\", end);\n\n            promptDiv.appendChild(div);\n            div.fadeIn();\n        });\n    },\n\n    confirm(text: string, yesText: string=LangPkg.uni.ok, noText: string=LangPkg.uni.cancel): Promise<boolean> {\n        return new Promise((resolve) => {\n            function end(accept: boolean) {\n                return () => {\n                    resolve(accept);\n                    div.fadeOut();\n                    setTimeout(() => {\n                        div.remove();\n                    }, 2000);\n                }\n            }\n\n            const div = document.createElement(\"div\");\n            div.style.opacity = \"0\";\n            div.classList.add(\"prompt\");\n            div.innerHTML = \"<p>\" + text + \"<p><br />\";\n\n            const flex = document.createElement(\"div\");\n            flex.style.display = \"flex\";\n            flex.style.justifyContent = \"space-evenly\";\n\n            const reject = document.createElement(\"button\");\n            reject.innerHTML = noText || LangPkg.uni.cancel;\n            reject.addEventListener(\"click\", end(false));\n            flex.appendChild(reject);\n\n            const accept = document.createElement(\"button\");\n            accept.innerHTML = yesText || LangPkg.uni.ok;\n            accept.addEventListener(\"click\", end(true));\n            flex.appendChild(accept);\n\n            div.appendChild(flex);\n            promptDiv.appendChild(div);\n            div.fadeIn();\n        });\n    },\n\n    selectPrompt<T>(text: string, options, optionsValues = [], categories: { name: string; options: T[], value?: T }[] = []): Promise<string | T> {\n        return new Promise((resolve) => {\n            function end() {\n                resolve(select.value);\n                div.fadeOut();\n                setTimeout(() => {\n                    div.remove();\n                }, 2000);\n            }\n\n            const div = document.createElement(\"div\");\n            div.style.opacity = \"0\";\n            div.classList.add(\"prompt\");\n            div.innerHTML = \"<p>\" + text + \"<p><br />\";\n            const select = document.createElement(\"select\");\n            for (let i = 0; i < categories.length; i++) {\n                const category = categories[i];\n                const selectElement = document.createElement(\"optgroup\");\n                selectElement.label = category.name;\n                for (let j = 0; j < category.options.length; j++) {\n                    const optionElement = document.createElement(\"option\");\n                    optionElement.value = category.options[j] as string || category.options[j] as string;\n                    optionElement.innerHTML = category.options[j] as string;\n                    selectElement.appendChild(optionElement);\n                }\n                select.appendChild(selectElement);\n            }\n            for (let i = 0; i < options.length; i++) {\n                const optionElement = document.createElement(\"option\");\n                optionElement.value = optionsValues[i] || options[i];\n                optionElement.innerHTML = options[i];\n                select.appendChild(optionElement);\n            }\n            select.querySelector(\"option\").selected = true;\n\n            div.appendChild(select);\n            div.appendChild(document.createElement(\"br\"));\n\n            const btn = document.createElement(\"button\");\n            btn.innerHTML = \"OK\";\n            div.appendChild(btn);\n            btn.addEventListener(\"click\", end);\n\n            promptDiv.appendChild(div);\n            div.fadeIn();\n        });\n    },\n\n    promptTime(\n        text: string,\n        inputType: \"time\" | \"date\" | \"datetime\" | \"datetime-local\" = \"datetime-local\",\n        min?: number,\n        max?: number\n    ): Promise<string> {\n        return new Promise((resolve) => {\n            function end() {\n                resolve(input.value);\n                div.fadeOut();\n                setTimeout(() => {\n                    div.remove();\n                }, 2000);\n            }\n\n            const div = document.createElement(\"div\");\n            div.style.opacity = \"0\";\n            div.classList.add(\"prompt\");\n            div.innerHTML = \"<p>\" + text + \"<p><br />\";\n\n            const input = document.createElement(\"input\");\n            input.type = inputType;\n            input.value = \"00:00\";\n            if (min) input.min = new Date(min).toISOString();\n            if (max) input.max = new Date(max).toISOString();\n\n            input.addEventListener(\"keydown\", (e) => {\n                if (e.key == \"Enter\") end();\n            })\n            div.appendChild(input);\n            setTimeout(() => {\n                input.focus();\n            }, 100);\n\n            div.appendChild(document.createElement(\"br\"));\n\n            const btn = document.createElement(\"button\");\n            btn.innerHTML = \"OK\";\n            div.appendChild(btn);\n            btn.addEventListener(\"click\", end);\n\n            promptDiv.appendChild(div);\n            div.fadeIn();\n        });\n    }\n}\n\nexport default uiFunc;", "import LangPkg from \"./translate\";\n\nexport enum InternalCodeCategory {\n    Info = 1,\n    Success = 2,\n    RedirectOrWaiting = 3,\n    UserError = 4,\n    ServerError = 5,\n}\n\nexport enum InternalCodeSubcategory {\n    General,\n    Socket,\n    Express,\n}\n\nfunction changeCodeToString(code: string): string {\n    const category = InternalCodeCategory[code[0]];\n    const subcategory = InternalCodeSubcategory[code[1]];\n\n    return LangPkg.InternalCode[category][subcategory][code] || code;\n}\n\nexport default changeCodeToString;", "import uiFunc from \"../../ui/helpers/uiFunc\";\n\nexport const send = (data) => {\n    uiFunc.uiMsg(data);\n}", "import hub from \"../../hub\";\nhub(\"helpers/stateManager\");\n\nimport apis from \"../../api/apis\";\nimport coreFunc from \"../../core/coreFunc\";\nimport socket from \"../../core/socket/socket\";\nimport Id from \"../../types/Id\";\nimport utils from \"../../utils/utils\";\nimport vars from \"../../var/var\";\nimport uiFunc from \"./uiFunc\";\nimport LangPkg, { langFunc } from \"../../utils/translate\";\nimport render_events from \"../render/event\";\nimport mainView from \"../components/mainView\";\n\nconst stateManager = {\n    handle(type: string, ...data: string[]) {\n        const fn = stateManagerFunc[type];\n        if (!fn) return false;\n        return fn(...data) || true;\n    },\n\n    async handleArray(arr: { type: string, value: any }[]) {\n        for (const data of arr) {\n            const val = Array.isArray(data.value) ? data.value : [data.value];\n            await stateManager.handle(data.type, ...val);\n            await delay(100);\n        }\n    },\n\n    async handleGetParam() {\n        const params = new URLSearchParams(window.location.search);\n        const ctrls = [];\n\n        for (const [key, value] of params.entries()) {\n            let [prefix, numStr, type] = key.split(\"_\");\n            if (prefix != \"ctrl\") continue;\n            if (!numStr) continue;\n            if (!type) continue;\n\n            const num = parseInt(numStr);\n            if (isNaN(num)) continue;\n\n            ctrls.push({ type, value, num });\n        }\n\n        ctrls.sort((a, b) => a.num - b.num);\n        await stateManager.handleArray(ctrls);\n    },\n\n    removeControlParams() {\n        const getParam = new URLSearchParams(window.location.search);\n\n        Array.from(getParam.entries()).forEach(([key]) => {\n            if (key.startsWith('ctrl_')) getParam.delete(key);\n        });\n\n        const newParams = getParam.toString();\n        const newUrl = window.location.origin + window.location.pathname + (newParams ? \"?\" + newParams : \"\");\n        window.history.replaceState({}, '', newUrl);\n    },\n\n    extractUrl() {\n        const path = window.location.origin + window.location.pathname;\n        const params = new URLSearchParams(window.location.search);\n        if (vars.chat.to.startsWith(\"$\")) {\n            params.set(\"ctrl_1_chat\", vars.chat.to);\n        } else {\n            params.set(\"ctrl_1_cc\", vars.chat.to + \"_\" + vars.chat.chnl);\n        }\n\n        const url = path + \"?\" + params.toString();\n        setTimeout(() => {\n            utils.writeToClipboard(url).then(ok => {\n                if (ok) uiFunc.uiMsgT(LangPkg.ui.copied);\n            });\n        }, 2000);\n    }\n}\n\nconst stateManagerFunc = {\n    chat(id: string) {\n        if (!utils.validId(id)) return;\n        coreFunc.changeChat(id as Id);\n    },\n\n    chnl(id: string) {\n        if (!utils.validId(id)) return;\n        coreFunc.changeChnl(id as Id);\n    },\n\n    cc(ids: string) {\n        const [chat, chnl] = ids.split(\"_\");\n        if (!utils.validId(chat)) return;\n        if (!utils.validId(chnl) && chnl != \"main\") return;\n        coreFunc.changeChat(chat as Id, chnl as Id);\n    },\n\n    async call(id: string) {\n        if (!utils.validId(id)) return;\n        const conf = await uiFunc.confirm(langFunc(LangPkg.ui.confirm.call_to, apis.www.changeUserID(id as Id)));\n        if (!conf) return;\n        socket.emit(\"call.dm.init\", id);\n    },\n\n    realmEvt() {\n        render_events.show();\n    },\n\n    friendReq() {\n        mainView.changeView(\"requests\");\n    },\n}\n\nexport default stateManager;", "import vars from \"../../var/var\";\nimport debugFunc, { LogLevel } from \"../../core/debug\";\nimport socket from \"../../core/socket/socket\";\nimport stateManager from \"../../ui/helpers/stateManager\";\n\nexport const send = (data) => {\n    // @ts-ignore\n    window.electronAPI.send(JSON.stringify(data));\n}\n\nexport const receiveMessage = (data) => {\n    data = JSON.parse(data);\n    switch (data.type) {\n        case \"debug\":\n            debugFunc.msg(LogLevel.INFO, data.msg);\n            break;\n        case \"status\":\n            if (!vars.settings.desktopHandling) return;\n            const state = data.data;\n            if (state === \"clear\") {\n                socket.emit(\"status.activity.remove\");\n            } else if (typeof state == \"object\" && !Array.isArray(state)) {\n                socket.emit(\"status.activity.set\", data.data);\n            }\n            break;\n        case \"ctrl\":\n            if (typeof data.ctrl == \"object\" && !Array.isArray(data.ctrl)) data.ctrl = [data.ctrl];\n            const ctrl = data.ctrl.map(c => ({ type: c[0], value: c.slice(1) }));\n            stateManager.handleArray(ctrl);\n            break;\n    }\n}\n\nconst electronApiDiv = document.createElement(\"div\");\nelectronApiDiv.style.display = \"none\";\nelectronApiDiv.id = \"electronApiDiv\";\nelectronApiDiv.addEventListener(\"electronAPI\", (e) => {\n    // @ts-ignore\n    receiveMessage(e.detail);\n});\ndocument.querySelector(\"#assets\").appendChild(electronApiDiv);\n\nsetTimeout(() => {\n    send({\n        type: \"desktopHandling\",\n        data: vars.settings.desktopHandling\n    })\n}, 5_000);", "import socket from \"../../core/socket/socket\";\nimport debugFunc, { LogLevel } from \"../../core/debug\";\nimport stateManager from \"../../ui/helpers/stateManager\";\n\nexport const send = (data) => {\n    // @ts-ignore\n    window.ReactNativeWebView.postMessage(JSON.stringify(data));\n}\n\nexport const receiveMessage = (data) => {\n    data = JSON.parse(data);\n    switch (data.type) {\n        case \"debug\":\n            debugFunc.msg(LogLevel.INFO, data.msg);\n            break;\n        case \"close\":\n            socket.disconnect();\n            break;\n        case \"unclose\":\n            socket.connect();\n            break;\n        case \"ctrl\":\n            if (typeof data.ctrl == \"object\" && !Array.isArray(data.ctrl)) data.ctrl = [data.ctrl];\n            const ctrl = data.ctrl.map(c => ({ type: c[0], value: c.slice(1) }));\n            stateManager.handleArray(ctrl);\n            break;\n    }\n}\n\nconst processMediaRN = {\n    init() {\n        this.audioContext = new AudioContext();\n        this.destination = this.audioContext.createMediaStreamDestination();\n        const track = this.destination.stream.getAudioTracks()[0];\n        this.mediaStream = new MediaStream([track]);\n    },\n\n    base64ToArrayBuffer(base64) {\n        const binaryString = window.atob(base64);\n        const len = binaryString.length;\n        const bytes = new Uint8Array(len);\n        for (let i = 0; i < len; i++) {\n            bytes[i] = binaryString.charCodeAt(i);\n        }\n        return bytes.buffer;\n    },\n\n    async handleAudioData(wavDataBuffer) {\n        try {\n            const audioBuffer = await this.audioContext.decodeAudioData(wavDataBuffer);\n            const source = this.audioContext.createBufferSource();\n            source.buffer = audioBuffer;\n            source.connect(this.destination);\n            source.start();\n        } catch (error) {\n            debugFunc.msg(LogLevel.ERROR, 'Error processing audio data: ' + error);\n        }\n    },\n\n    async getStream() {\n        send({\n            type: \"startAudio\",\n        });\n\n        await globalThis.delay(1000);\n        return this.mediaStream;\n    }\n};\n\nexport const receiveAudio = async (base64WavData) => {\n    const wavDataBuffer = processMediaRN.base64ToArrayBuffer(base64WavData);\n    processMediaRN.handleAudioData(wavDataBuffer);\n};\n\nsetTimeout(() => {\n    try {\n        processMediaRN.init();\n    } catch (error) {\n        debugFunc.msg(LogLevel.ERROR, error);\n    }\n}, 1000);\n\nsetTimeout(() => {\n    socket.emit(\"fireToken.get\", localStorage.getItem(\"token\"), (token: string) => {\n        send({\n            type: \"fireToken\",\n            fireToken: token,\n        });\n    })\n}, 5000);", "import uiFunc from \"../../ui/helpers/uiFunc\";\n\nexport const send = (data) => {\n    uiFunc.uiMsg(data);\n}\n\nsetTimeout(() => {\n    uiFunc.uiMsg(\"Warning: Fusion Chat is being loaded within an external source. Proceed with caution.\");\n}, 5_500);", "import hub from \"../hub\";\nhub(\"apis\");\n\nimport debugFunc, { LogLevel } from \"../core/debug\";\nimport uiFunc from \"../ui/helpers/uiFunc\";\nimport vars from \"../var/var\";\nimport { mglVar } from \"../var/mgl\";\nimport cw from \"../core\";\nimport Id from \"../types/Id\";\nimport LangPkg from \"../utils/translate\";\nimport { Core_Api__GetInServer__Response } from \"../types/core/api\";\nimport changeCodeToString from \"../utils/code\";\nimport apiVars from \"../var/api\";\n\nconst apis = {\n    www: {\n        changeUserID(id: Id): string {\n            const chat = vars.chat.to;\n            const temp = apiVars.temp.user;\n\n            if (chat.startsWith(\"$\") || chat == \"main\") { // if dm or main\n                if (temp.main[id]) return temp.main[id];\n                const data = apis.www.getInServer(\"/api/id/u?id=\" + id).name;\n                if (!data) return \"Unknown\";\n                temp.main[id] = data;\n                return data;\n            }\n\n            // if realm\n            if (!temp[chat]) temp[chat] = {};\n\n            const issetData = temp[chat][id];\n            if (issetData) return issetData;\n            if (issetData == 0) return temp.main[id];\n\n            if (id.startsWith(\"%\")) { // if webhook\n                const data = apis.www.getInServer(\"/api/id/wh?id=\" + id.replace(\"%\", \"\") + \"&chat=\" + chat).name + \" (APP)\";\n                if (!data) return \"Unknown\";\n                temp[chat][id] = data;\n                return data;\n            } else if (id.startsWith(\"^\")) { // if bot\n                const data = apis.www.getInServer(\"/api/id/bot?id=\" + id.replace(\"^\", \"\") + \"&chat=\" + chat).name + \" (BOT)\";\n                if (!data) return \"Unknown\";\n                temp[chat][id] = data;\n                return data;\n            } else if (id.startsWith(\"(\")) { // if event chnl\n                const data = apis.www.getInServer(\"/api/id/event?id=\" + id.replace(\"(\", \"\")).name + \" (EVENT)\";\n                if (!data) return \"Unknown\";\n                temp[chat][id] = data;\n                return data;\n            }\n            else { // if user in chat\n                interface Data extends Core_Api__GetInServer__Response {\n                    c: -1 | 0 | 1\n                }\n                const data = apis.www.getInServer<Data>(\"/api/id/u?id=\" + id + \"&chat=\" + chat);\n                if (!data) return \"Unknown\";\n                if (data.c == 1) {\n                    temp[chat][id] = data.name;\n                    return data.name;\n                }\n                else if (data.c == 0) {\n                    temp[chat][id] = 0;\n                    if (temp.main[id]) return temp.main[id];\n                    const name = apis.www.getInServer(\"/api/id/u?id=\" + id).name;\n                    if (!name) return \"Unknown\";\n                    temp.main[id] = name;\n                    return name;\n                } else {\n                    temp.main[id] = data.name;\n                    return data.name;\n                }\n            }\n        },\n\n        changeChat(id: Id): string {\n            if (apiVars.temp.realm[id]) return apiVars.temp.realm[id];\n            const data = apis.www.getInServer(\"/api/id/chat?chat=\" + id).name;\n            apiVars.temp.realm[id] = data;\n            return data;\n        },\n\n        getInServer<T = Core_Api__GetInServer__Response>(url: string): T {\n            const dataS = cw.get(url);\n            const data = JSON.parse(dataS);\n            if (data.err) {\n                uiFunc.uiMsgT(LangPkg.api.error_fetch, [\".\"]);\n                uiFunc.uiMsgT(LangPkg.api.error, changeCodeToString(data.c));\n                debugFunc.msg(LogLevel.ERROR, data);\n                return null;\n            }\n            return data;\n        }\n    },\n    app: {\n        async init(): Promise<void> {\n            const dev = {\n                isElectron: navigator.userAgent.toLowerCase().includes(\"electron\"),\n                isInIframe: window.self !== window.top,\n                // @ts-ignore\n                isReactNative: !!window.ReactNativeWebView,\n            }\n\n            let path = \"web\";\n            if (dev.isElectron) path = \"ele\";\n            else if (dev.isReactNative) path = \"rn\";\n            else if (dev.isInIframe) path = \"if\";\n            this.apiType = path;\n\n            const devices = {\n                web: () => import(\"./devices/web.js\"),\n                ele: () => import(\"./devices/ele.js\"),\n                rn: () => import(\"./devices/rn.js\"),\n                if: () => import(\"./devices/if.js\"),\n            };\n            \n            apis.api = await devices[path]();            \n            debugFunc.msg(LogLevel.INFO, \"load api: \" + path);\n        },\n        apiType: \"\",\n    },\n    api: {\n        send(data: any): void {\n            debugFunc.msg(LogLevel.INFO, \"default api: \" + JSON.stringify(data));\n        }\n    }\n}\n\nexport default apis;\nmglVar.apis = apis;", "import hub from \"../hub\";\nhub(\"debug\");\n\nimport apis from \"../api/apis\";\nimport { mglInt } from \"../var/mgl\";\n\nconst debugFunc = {\n    isDebug: localStorage.getItem(\"config.debug\") == \"true\",\n    lvl: parseInt(localStorage.getItem(\"config.debugLvl\"), 10) || 0,\n\n    init() {\n        setTimeout(() => {\n            if (apis.app.apiType == \"rn\"){\n                this.isDebug = true;\n                this.lvl = 0b1111;\n            }\n        }, 1000);\n    },\n\n    msg(level: number, ...data: any) {\n        if (!this.isDebug) return;\n\n        if ((this.lvl & level) === 0) return; \n\n        lo(...data);\n        if (apis.app.apiType == \"rn\") {\n            apis.api.send({ type: \"debug\", msg: (data.length == 1 ? data[0] : data) });\n        }\n    },\n};\n\nexport enum LogLevel {\n    INFO = 0b0001,\n    WARN = 0b0010,\n    ERROR = 0b0100,\n    SOCKET_ERROR = 0b1000,\n}\n\nexport default debugFunc;\n\nmglInt.debug = {\n    enable(info: boolean, warn: boolean, error: boolean, socketError: boolean) {\n        debugFunc.isDebug = info || warn || error || socketError;\n        const lvl = \n            (info ? 0b0001 : 0) |\n            (warn ? 0b0010 : 0) |\n            (error ? 0b0100 : 0) |\n            (socketError ? 0b1000 : 0);\n        localStorage.setItem(\"config.debug\", debugFunc.isDebug.toString());\n        localStorage.setItem(\"config.debugLvl\", lvl.toString());\n    },\n    disable() {\n        debugFunc.isDebug = false;\n        debugFunc.lvl = 0;\n        localStorage.setItem(\"config.debug\", debugFunc.isDebug.toString());\n        localStorage.setItem(\"config.debugLvl\", \"0\");\n    },\n}", "import hub from \"../../../hub\";\nhub(\"socket/evt\");\n\nimport socket from \"../socket\";\nimport Id from \"../../../types/Id\";\nimport vars from \"../../../var/var\";\nimport debugFunc, { LogLevel } from \"../../debug\";\nimport apis from \"../../../api/apis\";\nimport coreFunc from \"../../coreFunc\";\nimport render_dm from \"../../../ui/render/dm\";\nimport uiFunc from \"../../../ui/helpers/uiFunc\";\nimport render_user from \"../../../ui/render/user\";\nimport render_realm from \"../../../ui/render/realm\";\nimport render_events from \"../../../ui/render/event\";\nimport { Ui_UserState } from \"../../../types/ui/render\";\nimport LangPkg, { langFunc } from \"../../../utils/translate\";\nimport { Vars_realm__role, Vars_realm__user } from \"../../../types/var\";\nimport { Core_socket__refresh, Core_socket__user_status_type } from \"../../../types/core/socket\";\nimport changeCodeToString from \"../../../utils/code\";\nimport apiVars from \"../../../var/api\";\nimport UserStateManager from \"../../../ui/helpers/userStateManager\";\n\nexport function connect() {\n    debugFunc.msg(LogLevel.INFO, \"connected to socket\");\n    socket.emit(\"realm.get\");\n    socket.emit(\"self.status.get\");\n    socket.emit(\"dm.get\");\n}\n\nexport function error(evt_name: string, ...data: any[]) {\n    debugFunc.msg(LogLevel.ERROR, evt_name, ...data);\n    if (data.length == 0) return;\n\n    const first = data[0];\n    if (/^[1-5][0-2]\\.\\d{3}$/.test(first)) {\n        uiFunc.uiMsgT(LangPkg.api.error, changeCodeToString(first));\n        return;\n    }\n\n    uiFunc.uiMsg(first);\n}\n\nexport function error_valid(evt: string, name: string, ...data: any[]) {\n    uiFunc.uiMsgT(LangPkg.socket.valid_error);\n    debugFunc.msg(LogLevel.ERROR, `Valid error: ${evt} - ${name}`, ...data)\n}\n\nexport function error_spam(type: string, ...data: any[]) {\n    const pkg = LangPkg.socket.spam;\n    const map = {\n        \"last warning\": pkg.last,\n        \"ban\": pkg.ban,\n        \"warn\": pkg.warn,\n    }\n    let text = map[type] || pkg.spam;\n\n    uiFunc.uiMsgT(text, [], ...data);\n}\n\nexport function connect_error(data: Error) {\n    if (!localStorage.getItem(\"token\")) window.location.href = \"/login?err=true\";\n\n    debugFunc.msg(LogLevel.SOCKET_ERROR, data);\n    const dataStr = data.toString();\n    if (dataStr.includes(\"Error: Authentication error\")) {\n        window.location.href = \"/login?err=true\";\n    } else\n        if (dataStr.includes(\"Ban:\")) {\n            const timeMath = dataStr.match(/Ban: You are temporarily banned. Please try again after (\\d+) minutes./);\n            let text = \"\";\n            let param = \"\";\n            if (timeMath) {\n                text = LangPkg.socket.ban;\n                param = timeMath[1];\n            } else {\n                text = dataStr;\n                param = \"\";\n            }\n\n            uiFunc.uiMsgT(text, param);\n            return;\n        }\n\n    uiFunc.uiMsg(data.toString(), {\n        extraTime: 10\n    });\n}\n\nexport function system_refreshToken(newToken: string, cb: (value: boolean) => void) {\n    localStorage.setItem(\"token\", newToken);\n    socket.auth[\"token\"] = newToken;\n    cb(true);\n}\n\nexport async function refreshData(settings: string | string[] | Core_socket__refresh, ...moreData: any[]) {\n    let events = [];\n\n    if (Array.isArray(settings)) {\n        events = settings;\n    } else\n        if (typeof settings == \"string\") {\n            events = [settings];\n        } else\n            if (typeof settings == \"object\") {\n                const { realm, chnl, evt, wait } = settings as Core_socket__refresh;\n                events = typeof evt == \"string\" ? [evt] : Array.isArray(evt) ? evt : [];\n\n                if (realm && realm != vars.chat.to && realm !== \"*\") return;\n                if (chnl && chnl != vars.chat.chnl && chnl !== \"*\") return;\n                if (wait) await delay(wait);\n            }\n            else return;\n\n    events.forEach(evt => {\n        socket.emit(evt, ...moreData);\n    });\n}\n\nexport function self_status_get(status: Core_socket__user_status_type, text: string) {\n    vars.user.status = status;\n    vars.user.statusText = text;\n    render_user.localUserProfile();\n}\n\nexport function message_mark_read(to: Id, chnl: Id, id: Id) {\n    if (!to || !chnl || !id) return;\n    try {\n        // generate last message storage if needed\n        apiVars.lastMess[to] = apiVars.lastMess[to] || {};\n        apiVars.lastMess[to][chnl] = apiVars.lastMess[to][chnl] || { read: null, mess: null };\n\n        apiVars.lastMess[to][chnl].read = id;\n        if (to.startsWith(\"$\")) render_dm.chats();\n    } catch { }\n}\n\nexport function realm_users_sync(users: Vars_realm__user[], roles: Vars_realm__role[]) {\n    vars.realm.users = users;\n    vars.realm.roles = roles;\n    render_realm.usersInChat();\n}\n\ninterface Core_socket__realm_users_activity_sync extends Ui_UserState {\n    uid: Id\n}\n\nexport function realm_users_activity_sync(userActivity: Core_socket__realm_users_activity_sync[]) {\n    userActivity.forEach(user => {\n        const { uid, status, activity } = user;\n        if (!status && !activity) return;\n\n        UserStateManager.set(uid, user);\n    })\n}\n\nexport function realm_event_notify(realm: Id, evt: Id) {\n    socket.emit(\"realm.event.get.topic\", realm, evt, (topic: string) => {\n        const text = langFunc(LangPkg.ui.event.notif, `<b>\"${topic}\"</b>`, `<b>${apis.www.changeChat(realm)}</b>`);\n        uiFunc.uiMsg(text, {\n            onClick: () => {\n                coreFunc.changeChat(realm).then(() => {\n                    render_events.show();\n                });\n            }\n        });\n    })\n}\n\nexport function user_status_update(id: Id, status: Core_socket__user_status_type, text: string) {\n    UserStateManager.set(id, { status, statusText: text });\n}", "import hub from \"../../hub\";\nhub(\"socket/_evt\");\n\nimport socket from \"./socket\";\nimport {\n    connect,\n    error,\n    error_valid,\n    error_spam,\n    connect_error,\n    system_refreshToken,\n    refreshData,\n} from \"./logic/evt\";\n\nsocket.on(\"connect\", connect);\nsocket.on(\"error\", error);\nsocket.on(\"error.valid\", error_valid);\nsocket.on(\"error.spam\", error_spam);\nsocket.on(\"connect_error\", connect_error);\nsocket.on(\"system.refreshToken\", system_refreshToken);\nsocket.on(\"refreshData\", refreshData);", "import hub from \"../../hub\";\nimport socket from \"../socket/socket\";\nhub(\"mess/socket\");\n\nimport {\n    mess,\n    message_fetch,\n    message_delete,\n    messages_delete,\n    message_edit,\n    message_react,\n    message_search,\n    realm_thread_delete,\n} from \"../socket/logic/mess\";\nimport { message_mark_read } from \"../socket/logic/evt\";\nimport vars from \"../../var/var\";\nimport { Core_mess__dbMessage } from \"../../types/core/mess\";\nimport messageCacheController from \"../cacheControllers/mess\";\n\nsocket.on(\"mess\", mess);\nsocket.on(\"message.fetch\", message_fetch);\nsocket.on(\"message.fetch\", (data: Core_mess__dbMessage[]) => {\n    messageCacheController.addMessages(vars.chat.to, vars.chat.chnl, data);\n});\nsocket.on(\"message.delete\", message_delete);\nsocket.on(\"messages.delete\", messages_delete);\nsocket.on(\"message.edit\", message_edit);\nsocket.on(\"message.react\", message_react);\nsocket.on(\"message.search\", message_search);\nsocket.on(\"realm.thread.delete\", realm_thread_delete);\nsocket.on(\"message.mark.read\", message_mark_read);", "import hub from \"../../hub\";\nhub(\"mess/listeners\");\n\nimport messFunc from \"./mess\";\nimport messStyle from \"./style\";\nimport vars from \"../../var/var\";\nimport { messHTML } from \"../../var/html\";\nimport uiInteract from \"../../ui/interact/ui\";\n\nconst { input } = messHTML;\n\ninput.addEventListener(\"keydown\", (e) => {\n    if (e.key != \"Enter\") return;\n    if (e.shiftKey) return; //if shift + enter - new line\n\n    e.preventDefault();\n    messFunc.sendMess();\n});\n\ninput.addEventListener(\"keydown\", (e) => {\n    if (e.key != \"ArrowUp\" || input.value.length > 0) return;\n    e.preventDefault();\n\n    const messages = document.querySelectorAll(\".mess_message\");\n    const lastUserMessage = Array.from(messages).reverse().find(message =>\n        message.querySelector(\".mess_meta\").getAttribute(\"_author\") === vars.user._id\n    );\n    if (!lastUserMessage) return;\n\n    const id = lastUserMessage.id.split(\"mess__\")[1];\n    if (!id) return;\n\n    uiInteract.editMess(id);\n});\n\ninput.addEventListener(\"keydown\", (e) => {\n    if (e.key != \"ArrowDown\" || input.value.length > 0) return;\n    e.preventDefault();\n\n    const lastMessage = document.querySelector(\".mess_message:last-child\") as HTMLElement;\n    if (!lastMessage) return;\n\n    const id = lastMessage.id.split(\"mess__\")[1];\n    if (!id) return;\n\n    vars.temp.replyId = id;\n    messHTML.replyClose.style.display = \"block\";\n    lastMessage.style.backgroundColor = \"var(--panel)\";\n});\n\ninput.addEventListener(\"input\", messStyle.sendBtnStyle);\ninput.addEventListener(\"input\", messStyle.messageHeight);\n\n// Paste\nfunction pasteText(e: ClipboardEvent) {\n    if(!pasteCheck()) return;\n    e.preventDefault();\n    const pasteText = (e.clipboardData || (window as any).clipboardData).getData(\"text\");\n    input.value += pasteText;\n    messStyle.setSelectionStart();\n    messStyle.sendBtnStyle();\n    messStyle.messageHeight();\n}\n\nfunction pasteImage(e: ClipboardEvent) {\n    if(!pasteCheck()) return;\n    const items = (e.clipboardData || (e as any).originalEvent.clipboardData).items;\n\n    for (const item of items) {\n        if (item.type.indexOf(\"image\") === -1) continue;\n        e.preventDefault();\n\n        const file = item.getAsFile();\n        messFunc.sendFile(file);\n    }\n}\n\nfunction pasteCheck() {\n    const tag = document.activeElement.tagName.toLowerCase();\n    if (tag == \"input\" || tag == \"textarea\") return false;\n    return true;\n}\n\ndocument.addEventListener(\"paste\", pasteText);\ndocument.addEventListener(\"paste\", pasteImage);\ndocument.addEventListener(\"paste\", () => {\n    if (input == document.activeElement) return;\n    const tag = document.activeElement.tagName.toLowerCase();\n    if (tag == \"input\" || tag == \"textarea\") return;\n\n    input.focus();\n    messStyle.setSelectionStart();\n})\n\ndocument.addEventListener(\"keydown\", (e: KeyboardEvent) => {\n    if (input == document.activeElement) return;\n    if (e.ctrlKey) return;\n    if (e.altKey) return;\n\n    const tag = document.activeElement.tagName.toLowerCase();\n    if (tag == \"input\" || tag == \"textarea\") return;\n\n    input.focus();\n    messStyle.setSelectionStart();\n});\n\ndocument.addEventListener(\"keydown\", (e: KeyboardEvent) => {\n    if (e.key != \"Delete\") return;\n    if (!vars.chat.selectedMess) return;\n\n    uiInteract.deleteMess(vars.chat.selectedMess);\n})", "import hub from \"../hub\";\nhub(\"swipeLib\");\n\ntype SwipeCallback = () => void;\n\nfunction setupSwipe(\n    element: HTMLElement,\n    onSwipeLeft: SwipeCallback,\n    onSwipeRight: SwipeCallback,\n    onSwipeUp: SwipeCallback,\n    onSwipeDown: SwipeCallback\n) {\n    let startX: number, startY: number, endX: number, endY: number;\n    const swipeThreshold = 100;\n\n    element.addEventListener('touchstart', (e) => {\n        startX = e.touches[0].clientX;\n        startY = e.touches[0].clientY;\n    });\n\n    element.addEventListener('touchend', (e) => {\n        endX = e.changedTouches[0].clientX;\n        endY = e.changedTouches[0].clientY;\n\n        if (shouldIgnoreSwipe(e.target as HTMLElement)) return;\n        handleSwipe();\n    });\n\n    element.addEventListener('mousedown', (e) => {\n        startX = e.clientX;\n        startY = e.clientY;\n\n        element.addEventListener('mouseup', onMouseUp);\n    });\n\n    function onMouseUp(e: MouseEvent) {\n        endX = e.clientX;\n        endY = e.clientY;\n\n        if (!shouldIgnoreSwipe(e.target as HTMLElement)) handleSwipe();\n        element.removeEventListener('mouseup', onMouseUp);\n    }\n\n    function handleSwipe() {\n        let diffX = startX - endX;\n        let diffY = startY - endY;\n\n        if (Math.abs(diffX) > Math.abs(diffY)) {\n            if (Math.abs(diffX) < swipeThreshold) return;\n            if (diffX > 0) {\n                if (onSwipeLeft) onSwipeLeft();\n            } else {\n                if (onSwipeRight) onSwipeRight();\n            }\n        } else {\n            if (Math.abs(diffY) < swipeThreshold) return;\n            if (diffY > 0) {\n                if (onSwipeUp) onSwipeUp();\n            } else {\n                if (onSwipeDown) onSwipeDown();\n            }\n        }\n    }\n\n    function shouldIgnoreSwipe(target: HTMLElement) {\n        const diffX = Math.abs(startX - endX);\n        const diffY = Math.abs(startY - endY);\n\n        if (diffX > diffY && target.scrollWidth != target.clientWidth)\n            return true;\n\n        if (diffY > diffX && target.scrollHeight != target.clientHeight)\n            return true;\n\n        return false;\n    }\n}\n\nexport default setupSwipe;", "import hub from \"../hub\";\nhub(\"features\");\n\nimport vars from \"../var/var\";\nimport messFunc from \"../core/mess/mess\";\nimport setupSwipe from \"../lib/swipeLib\";\nimport staticData from \"../var/staticData\";\nimport { navHTML } from \"../var/html\";\n\ndocument.querySelector(\"#nav__toggle\").addEventListener(\"click\", () => {\n    const nav = document.querySelector(\"nav\").style;\n    nav.left = nav.left == \"0px\" ? \"-360px\" : \"0px\";\n});\n\ndocument.querySelector<HTMLImageElement>(\"#navs__user img\").src = \"/api/profile/img?id=\" + vars.user._id;\nnavHTML.navs__user.setAttribute(\"data-status-id\", vars.user._id);\n\ndocument.querySelector(\"#app\").addEventListener(\"contextmenu\", (e) => {\n    const target = e.target as HTMLElement;\n    const tag = target.tagName.toLowerCase();\n    if(staticData.contextmenuTags.includes(tag)) return;\n\n    e.preventDefault();\n});\n\nsetupSwipe(\n    document.body,\n    () => {\n        document.querySelector(\"nav\").style.left = \"-360px\";\n    },\n    () => {\n        document.querySelector(\"nav\").style.left = \"0px\";\n    },\n    () => {\n        // up\n    },\n    () => {\n        // down\n    }\n);\n\n(function initDragAndDrop() {\n    const app = document.querySelector(\"#app\");\n    app.addEventListener(\"dragover\", function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n    });\n\n    app.addEventListener(\"dragenter\", function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n    });\n\n    app.addEventListener(\"drop\", function (e: DragEvent) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (vars.chat.to == \"main\") return;\n\n        const files = e.dataTransfer.files;\n        for (const file of files) {\n            messFunc.sendFile(file);\n        }\n    });\n})();", "import hub from \"../../hub\";\nimport utils from \"../../utils/utils\";\nhub(\"helpers/reloadImages\");\n\nexport function reloadProfileImages(id: string): void {\n    const escapedUrl = utils.escape(`/api/profile/img?id=${id}`);\n    const imageSelector = `img[src*=\"${escapedUrl}\"]`;\n    const imgs = document.querySelectorAll<HTMLImageElement>(imageSelector);\n\n    imgs.forEach(img => {\n        const src = new URL(img.src);\n        src.searchParams.set(\"t\", new Date().getTime().toString());\n        img.src = src.toString();\n    });\n}\n", "import hub from \"../../hub\";\nhub(\"settingsData\");\n\nimport vars from \"../../var/var\";\nimport apis from \"../../api/apis\";\nimport fileFunc from \"../../api/file\";\nimport uiFunc from \"../helpers/uiFunc\";\nimport render_user from \"../render/user\";\nimport socket from \"../../core/socket/socket\";\nimport staticData from \"../../var/staticData\";\nimport { reloadProfileImages } from \"../helpers/reloadImages\";\nimport { Settings_settingsManager__category } from \"../../types/ui/settings\";\nimport LangPkg, { LangRef, load_translate } from \"../../utils/translate\";\nimport apiVars from \"../../var/api\";\nimport UserStateManager from \"../helpers/userStateManager\";\n\ninterface SettingsData {\n    user: () => Settings_settingsManager__category[];\n    userSave: (data: any) => void\n}\n\nconst settingsData: SettingsData = {\n    user: () => [\n        {\n            name: \"User settings\",\n            txt: LangPkg.settings_user.user_settings,\n            type: \"obj\",\n            settings: [\n                {\n                    name: \"Status\",\n                    txt: LangPkg.settings_user.status,\n                    type: \"select\",\n                    defaultValue: vars.user.status || \"online\",\n                    options: [\"online\", \"idle\", \"dnd\", \"offline\"]\n                },\n                {\n                    name: \"Status text\",\n                    txt: LangPkg.settings_user.status_text,\n                    type: \"text\",\n                    defaultValue: vars.user.statusText || \"\"\n                },\n                {\n                    name: \"Nickname\",\n                    txt: LangPkg.settings_user.nick,\n                    type: \"text\",\n                    defaultValue: apis.www.changeUserID(vars.user._id) || vars.user.fr\n                },\n            ]\n        },\n        {\n            name: \"Profile image\",\n            txt: LangPkg.settings_user.image,\n            type: \"fn\",\n            settings: () => {\n                const div = document.createElement(\"div\");\n                const tmpData: { img: File | null } = {\n                    img: null\n                };\n                div.innerHTML = `\n                    <div id=\"_1\" style=\"display: flex; align-items: center; column-gap: 2rem;\"></div>\n                `.trim();\n                const container = div.querySelector('#_1');\n\n                const imgPrev = document.createElement('img');\n                imgPrev.src = \"/api/profile/img?id=\" + vars.user._id + \"&t=\" + Date.now();\n                imgPrev.css(\"width: 128px; height: 128px; object-fit: cover;\");\n                container.appendChild(imgPrev);\n\n                const imgSel = document.createElement('input');\n                imgSel.type = 'file';\n                imgSel.accept = staticData.uploadImgTypes.join(', ');\n                imgSel.addEventListener(\"change\", (e: Event) => {\n                    const target = e.target as HTMLInputElement;\n                    if (target.files && target.files[0]) {\n                        const file = target.files[0];\n                        tmpData.img = file;\n                        imgPrev.src = URL.createObjectURL(file);\n                    }\n                });\n                container.appendChild(imgSel);\n\n                return [div, tmpData];\n            },\n            save: (div, tmpData) => {\n                if (tmpData.img) {\n                    fileFunc.profile(tmpData.img);\n                    setTimeout(() => {\n                        reloadProfileImages(vars.user._id);\n                    }, 3000);\n                }\n\n                return {}\n            }\n        },\n        {\n            name: \"Client settings\",\n            txt: LangPkg.settings_user.client_settings,\n            type: \"obj\",\n            settings: [\n                {\n                    name: \"Language\",\n                    txt: LangPkg.settings_user.lang,\n                    type: \"select\",\n                    defaultValue: localStorage.getItem(\"lang\") || \"en\",\n                    options: LangRef.localesList\n                },\n                {\n                    name: \"Notifications\",\n                    txt: LangPkg.settings_user.notifications,\n                    type: \"checkbox\",\n                    defaultValue: localStorage.getItem(\"notifications\") == \"true\" || false,\n                    only: [\"web\", \"ele\"]\n                },\n                {\n                    txt: LangPkg.settings_user.check_notifications_permissions,\n                    type: \"button\",\n                    onclick: () => {\n                        window.Notification.requestPermission((result) => {\n                            if (result == \"granted\") uiFunc.uiMsgT(LangPkg.uni.ok);\n                            else uiFunc.uiMsgT(LangPkg.settings_user.notifications_error);\n                        });\n                    },\n                    only: [\"web\", \"ele\"]\n                },\n                { type: \"hr\" },\n                {\n                    txt: LangPkg.settings_user.experimental_features,\n                    type: \"h2\"\n                },\n                {\n                    txt: LangPkg.settings_user.experimental_warning,\n                    type: \"h3\"\n                },\n                {\n                    name: \"desktopHandling\",\n                    txt: \"Desktop app handling fullscreen and set activity\",\n                    type: \"checkbox\",\n                    only: \"ele\",\n                    defaultValue: localStorage.getItem(\"desktopHandling\") == \"true\" || false\n                }\n            ]\n        },\n        {\n            name: \"Account settings\",\n            txt: LangPkg.settings_user.account_settings,\n            type: \"obj\",\n            settings: [\n\n                {\n                    name: \"Logout\",\n                    txt: LangPkg.settings_user.logout,\n                    type: \"button\",\n                    onclick: async () => {\n                        const confText = LangPkg.settings_user.confirm_logout + \"?\";\n                        if (!await uiFunc.confirm(confText)) return;\n                        if (!await uiFunc.confirm(confText + \" (\" + LangPkg.settings_user.double_check + \")\")) return;\n\n                        localStorage.removeItem(\"user_id\");\n                        localStorage.removeItem(\"from\");\n                        localStorage.removeItem(\"token\");\n                        socket.emit(\"logout\", () => {\n                            location.href = \"/login\";\n                        });\n                    },\n                    css: {\n                        color: \"red\"\n                    }\n                },\n                {\n                    name: \"Delete Account\",\n                    txt: LangPkg.settings_user.delete,\n                    type: \"button\",\n                    onclick: async () => {\n                        if (!await uiFunc.confirm(LangPkg.settings_user.confirm_delete.w1 + \"?\")) return;\n                        if (!await uiFunc.confirm(LangPkg.settings_user.confirm_delete.w2 + \"?\")) return;\n                        if (!await uiFunc.confirm(LangPkg.settings_user.confirm_delete.w3 + \"?\")) return;\n\n                        socket.emit(\"user.delete\", () => {\n                            localStorage.removeItem(\"user_id\");\n                            localStorage.removeItem(\"from\");\n                            localStorage.removeItem(\"token\");\n                            alert(LangPkg.settings_user.after_delete);\n                            location.href = \"/login\";\n                        });\n                    },\n                    css: {\n                        color: \"red\"\n                    }\n                }\n            ]\n        }\n    ],\n\n    userSave: (settings) => {\n        if (settings[\"Status\"] != undefined) {\n            vars.user.status = settings[\"Status\"];\n        }\n        if (settings[\"Status text\"] != undefined) {\n            vars.user.statusText = settings[\"Status text\"];\n        }\n        if (settings[\"Status\"] != undefined || settings[\"Status text\"] != undefined) {\n            socket.emit(\"self.status.update\", vars.user.status, vars.user.statusText);\n            render_user.localUserProfile();\n            UserStateManager.set(vars.user._id, { status: vars.user.status, statusText: vars.user.statusText });\n        }\n\n        if (settings[\"Nickname\"] != undefined) {\n            socket.emit(\"profile.set_nickname\", settings[\"Nickname\"]);\n            apiVars.temp.user.main[vars.user._id] = settings[\"Nickname\"];\n            render_user.localUserProfile();\n        }\n\n        const lang = settings[\"Language\"];\n        if (lang != undefined) {\n            if (lang != localStorage.getItem(\"lang\")) load_translate(lang);\n        }\n\n        const notifications = settings[\"Notifications\"];\n        if (notifications != undefined) {\n            localStorage.setItem(\"notifications\", notifications);\n            vars.settings.notifications = notifications;\n            if (notifications) {\n                // check permissions\n                window.Notification.requestPermission((result) => {\n                    if (result == \"granted\") return;\n                    uiFunc.uiMsgT(LangPkg.settings_user.notifications_error);\n                });\n            }\n        }\n\n        const desktopHandling = settings[\"desktopHandling\"];\n        if (desktopHandling != undefined) {\n            localStorage.setItem(\"desktopHandling\", desktopHandling);\n            vars.settings.desktopHandling = desktopHandling;\n            if (!desktopHandling) socket.emit(\"status.activity.remove\");\n            if (apis.app.apiType == \"ele\") apis.api.send({ type: \"desktopHandling\", data: desktopHandling });\n        }\n    },\n}\n\nexport default settingsData;", "import hub from \"../../hub\";\nhub(\"settingsLib\");\n\nimport apis from \"../../api/apis\";\nimport LangPkg from \"../../utils/translate\";\nimport {\n    Settings_settingsManager__category,\n    Settings_settingsManager__fns,\n    Settings_settingsManager__saveFn,\n    Settings_settingsManager__settings,\n    Settings_settingsManager__settings_button,\n    Settings_settingsManager__settings_checkbox,\n    Settings_settingsManager__settings_select,\n    Settings_settingsManager__settings_text\n} from \"../../types/ui/settings\";\n\nconst fns: Settings_settingsManager__fns = {\n    createCheckbox(setting: Settings_settingsManager__settings_checkbox) {\n        const checkbox = document.createElement(\"input\");\n        checkbox.type = \"checkbox\";\n        checkbox.checked = setting.defaultValue;\n        checkbox.classList.add(\"checkbox_switch\");\n        return checkbox;\n    },\n\n    createTextInput(setting: Settings_settingsManager__settings_text) {\n        const input = document.createElement(\"input\");\n        input.type = \"text\";\n        input.value = setting.defaultValue;\n        return input;\n    },\n\n    createSelectInput(setting: Settings_settingsManager__settings_select) {\n        const select = document.createElement(\"select\");\n        setting.options.forEach(option => {\n            const optionElement = document.createElement(\"option\");\n            optionElement.value = option;\n            optionElement.textContent = option;\n            if (option === setting.defaultValue) {\n                optionElement.selected = true;\n            }\n            select.appendChild(optionElement);\n        });\n        return select;\n    },\n\n    createButton(setting: Settings_settingsManager__settings_button) {\n        const button = document.createElement(\"button\");\n        button.textContent = setting.txt || setting.name;\n        button.onclick = setting.onclick;\n        return button;\n    }\n}\n\nclass SettingsManager {\n    settings: Settings_settingsManager__category[];\n    saveCallback: (settings: Settings_settingsManager__category) => void;\n    exitCallback: () => void;\n    container: HTMLDivElement;\n\n    constructor(settings: Settings_settingsManager__category[], container: HTMLDivElement, saveCallback: (settings: Settings_settingsManager__category) => void, exitCallback: () => void) {\n        this.settings = settings;\n        this.saveCallback = saveCallback;\n        this.exitCallback = exitCallback;\n        this.container = container;\n        this.init();\n    }\n\n    init() {\n        this.container.innerHTML = \"\";\n        const saveFns: Settings_settingsManager__saveFn[] = [];\n\n        function onlyFilter<T extends { only?: string | string[] }>(data: T[]): T[] {\n            return data.filter(setting => {\n                if (!('only' in setting)) return true;\n                if (!setting.only) return true;\n\n                let only = setting.only as string[];\n                if (typeof only == \"string\") only = [only];\n\n                if (!only.includes(apis.app.apiType)) return false;\n\n                return true;\n            });\n        }\n\n        this.settings = onlyFilter<Settings_settingsManager__category>(this.settings);\n        this.settings.forEach(setting => {\n            if (setting.type != \"obj\") return;\n            setting.settings = onlyFilter<Settings_settingsManager__settings>(setting.settings);\n        })\n\n        this.renderCategorySwitcher();\n\n        this.settings.forEach(category => {\n            const categoryDiv = document.createElement(\"div\");\n            categoryDiv.className = \"settings__category\";\n            categoryDiv.setAttribute(\"data-id\", category.name);\n            categoryDiv.innerHTML = `<h1>${category.txt || category.name}</h1>`;\n\n            if (category.type == \"obj\") {\n                category.settings.forEach((setting: Settings_settingsManager__settings) => {\n                    const settingElement = document.createElement(\"div\");\n                    settingElement.className = \"settings__setting\";\n\n                    function createLabel() {\n                        const label = document.createElement(\"label\");\n                        label.textContent = setting.txt || setting.name;\n                        label.setAttribute(\"data-txt\", setting.name);\n                        settingElement.appendChild(label);\n                    }\n\n                    let inputElement;\n\n                    switch (setting.type) {\n                        case \"checkbox\":\n                            createLabel();\n                            inputElement = fns.createCheckbox(setting);\n                            break;\n                        case \"text\":\n                            createLabel();\n                            inputElement = fns.createTextInput(setting);\n                            break;\n                        case \"select\":\n                            createLabel();\n                            inputElement = fns.createSelectInput(setting);\n                            break;\n                        case \"button\":\n                            inputElement = fns.createButton(setting);\n                            break;\n                        case \"hr\":\n                            inputElement = document.createElement(\"hr\");\n                            break;\n                        case \"h1\":\n                        case \"h2\":\n                        case \"h3\":\n                        case \"h4\":\n                        case \"h5\":\n                        case \"h6\":\n                        case \"p\":\n                            inputElement = document.createElement(setting.type);\n                            inputElement.textContent = setting.txt || setting.name;\n                            break;\n                        default:\n                            createLabel();\n                    }\n\n                    if (inputElement) {\n                        settingElement.appendChild(inputElement);\n                        if (setting.css) {\n                            inputElement.css(setting.css);\n                        }\n                    }\n\n                    categoryDiv.appendChild(settingElement);\n                });\n            } else\n                if (category.type == \"fn\") {\n                    const [div, tmpData] = category.settings(fns);\n                    categoryDiv.appendChild(div);\n                    saveFns.push({\n                        div,\n                        save: category.save,\n                        tmpData\n                    })\n                }\n\n            this.container.appendChild(categoryDiv);\n        });\n\n        this.changeDisplay(this.settings[0]?.name);\n\n        const saveButton = document.createElement(\"button\");\n        saveButton.textContent = LangPkg.settings.save;\n        saveButton.className = \"settings__exitButton\";\n        saveButton.onclick = () => this.saveSettings(saveFns);\n\n        const exitButton = document.createElement(\"button\");\n        exitButton.textContent = LangPkg.settings.exit_without_save;\n        exitButton.className = \"settings__exitButton\";\n        exitButton.onclick = () => this.exitWithoutSaving();\n\n        this.container.appendChild(document.createElement(\"br\"));\n        this.container.appendChild(saveButton);\n        this.container.appendChild(exitButton);\n        this.container.fadeIn();\n    }\n\n    renderCategorySwitcher() {\n        const categorySwitcher = document.createElement(\"div\");\n        categorySwitcher.className = \"settings__categorySwitcher\";\n\n        const displays = this.settings.map(setting => setting.name);\n        displays.forEach(display => {\n            const button = document.createElement(\"button\");\n            button.textContent = display;\n            button.className = \"btn\";\n            button.onclick = () => this.changeDisplay(display);\n            categorySwitcher.appendChild(button);\n        });\n\n        this.container.appendChild(categorySwitcher);\n    }\n\n    changeDisplay(setting: string) {\n        const container = this.container;\n        this.settings.map(setting => setting.name).forEach(display => {\n            const category = container.querySelector<HTMLDivElement>(`[data-id=\"${display}\"]`);\n            if (!category) return;\n            category.style.display = display === setting ? \"\" : \"none\";\n        });\n    }\n\n    saveSettings(saveFns: Settings_settingsManager__saveFn[]) {\n        if (this.saveCallback && typeof this.saveCallback === \"function\") {\n            const dataStatic = this.getCurrentSettings();\n            const datasFn = saveFns.map(saveFn => saveFn.save(saveFn.div, saveFn.tmpData));\n\n            const data = Object.assign({}, dataStatic, ...datasFn);\n            this.saveCallback(data);\n        }\n        this.container.innerHTML = \"\";\n        this.container.fadeOut();\n    }\n\n    exitWithoutSaving() {\n        if (this.exitCallback && typeof this.exitCallback === \"function\") {\n            this.exitCallback();\n        }\n        this.container.innerHTML = \"\";\n        this.container.fadeOut();\n    }\n\n    getCurrentSettings() {\n        const currentSettings = {};\n        this.container.querySelectorAll(\".settings__setting\").forEach(settingElement => {\n            const label = settingElement.querySelector(\"label\");\n            const input = settingElement.querySelector(\"input, select, ul\") as HTMLInputElement;\n            if (label && input) {\n                const data = input.type === \"checkbox\" ? input.checked : input.value;\n                currentSettings[label.getAttribute(\"data-txt\")] = data;\n            }\n        });\n        return currentSettings;\n    }\n}\n\nexport default SettingsManager;", "import hub from \"../../../hub\";\nhub(\"rs/utils\");\n\n/**\n * Initializes a new settings category element\n */\nexport const initCategoryElement = function (container: HTMLElement) {\n    const div = document.createElement(\"div\");\n    div.className = \"settings__category\";\n    if (container) container.appendChild(div);\n    return div;\n}\n\n/**\n * Initializes a text input element with the given label and default value.\n */\nexport const initInputText = function (container: HTMLElement, label: string, defaultValue: string) {\n    const textInputContainer = document.createElement(\"div\");\n    textInputContainer.innerHTML = `<label>${label}</label>`;\n    const inputElement = document.createElement(\"input\");\n    inputElement.type = \"text\";\n    inputElement.value = defaultValue;\n    textInputContainer.appendChild(inputElement);\n    container.appendChild(textInputContainer);\n    return inputElement;\n}\n\n/**\n * Creates a button element with the specified text and click handler, and appends it to the given container.\n */\n\nexport const initButton = function (container: HTMLElement, text: string, onclick: () => void) {\n    const button = document.createElement(\"button\");\n    button.innerHTML = text;\n    // @ts-ignore\n    button.onclick = onclick;\n    button.style.marginInline = \"3px\";\n    container.appendChild(button);\n    return button;\n}\n\n/**\n * Initializes a checkbox with an optional label and appends it to the given container.\n */\n\nexport const initCheckbox = function (container: HTMLElement, label: string, defaultValue: boolean) {\n    const checkboxContainer = document.createElement(\"div\");\n    checkboxContainer.style.marginBottom = \"3px\";\n\n    const inputElement = document.createElement(\"input\");\n    inputElement.type = \"checkbox\";\n    inputElement.checked = defaultValue || false;\n    inputElement.classList.add(\"checkbox_switch\");\n    checkboxContainer.appendChild(inputElement);\n\n    const labelElement = document.createElement(\"label\");\n    labelElement.innerHTML = label;\n    checkboxContainer.appendChild(labelElement);\n\n    container.appendChild(checkboxContainer);\n    return inputElement;\n}\n\n/**\n * Adds a separator to the given container. If no container is provided, the separator is not appended to anything.\n * @param [container] the container to append to. If not provided, the separator is not appended to anything.\n * @param [x=0] the height of the separator in pixels.\n */\nexport const addSeparator = function (container: HTMLElement = undefined, x: number = 0) {\n    const div = document.createElement(\"div\");\n    div.style.height = x + \"px\";\n    if (container) container.appendChild(div);\n    return div;\n}", "import hub from \"../../../hub\";\nimport Id from \"../../../types/Id\";\nimport RealmSettingsManager from \"./realmSettings\";\nimport { initCategoryElement } from \"./rs_utils\";\nimport { Settings_rs__Categories, Settings } from \"./types\";\nhub(\"rs/var\");\n\n/**\n * Initializes a settings page for a realm.\n */\nfunction initCategories(container: HTMLElement) {\n    return {\n        meta: initCategoryElement(container),\n        category: initCategoryElement(container),\n        editChannel: initCategoryElement(container),\n        role: initCategoryElement(container),\n        editRole: initCategoryElement(container),\n        usersManager: initCategoryElement(container),\n        emoji: initCategoryElement(container),\n        webhook: initCategoryElement(container),\n        editWebhook: initCategoryElement(container),\n    }\n}\n\nexport interface Rs_data {\n    html: Settings_rs__Categories,\n    container: HTMLElement,\n    settings: Settings,\n    realmId: Id,\n    _this: RealmSettingsManager\n}\n\nexport let rs_data: Rs_data;\nexport default () => rs_data;\n\n/**\n * Sets the data for the settings page.\n */\nexport function setData(self: RealmSettingsManager) {\n    const {\n        settings,\n        realmId,\n        container\n    } = self;\n\n    rs_data = {\n        html: initCategories(container),\n        container: container,\n        settings: settings,\n        realmId: realmId,\n        _this: self,\n    }\n}", "import hub from \"../../../hub\";\nhub(\"rs/save\");\n\nimport rs_dataF from \"./rs_var\";\nimport uiFunc from \"../../helpers/uiFunc\";\nimport LangPkg from \"../../../utils/translate\";\n\nexport const saveSettings = async function () {\n    const rs_data = rs_dataF();\n    const _this = rs_data._this;\n    const settings = rs_data.settings;\n\n    if (!_this.saveCallback && typeof _this.saveCallback !== \"function\") {\n        rs_data.container.innerHTML = \"\";\n        return;\n    }\n\n    _this.saveMetaSettings();\n    const addons = JSON.parse(JSON.stringify(settings.addons));\n    // @ts-ignore: delete addons property before sending to server\n    delete settings.addons;\n    const saved = await _this.saveCallback(settings);\n    settings.addons = addons;\n    if (!saved) {\n        uiFunc.uiMsgT(LangPkg.settings_realm.failed_to_save);\n        return;\n    }\n    return true;\n}\n\nexport const exitWithoutSaving = function () {\n    const rs_data = rs_dataF();\n    const _this = rs_data._this;\n    if (_this.exitCallback && typeof _this.exitCallback === \"function\") {\n        _this.exitCallback();\n    }\n    rs_data.container.fadeOut();\n    rs_data.container.innerHTML = \"\";\n}\n\nexport const saveAndExitSettings = async function () {\n    const saved = await saveSettings();\n    if (!saved) return;\n    exitWithoutSaving();\n}", "import hub from \"../../../hub\";\nhub(\"rs/meta\");\n\nimport socket from \"../../../core/socket/socket\";\nimport uiFunc from \"../../helpers/uiFunc\";\nimport fileFunc from \"../../../api/file\";\nimport coreFunc from \"../../../core/coreFunc\";\nimport rs_dataF from \"./rs_var\";\nimport { addSeparator, initButton, initInputText } from \"./rs_utils\";\nimport debugFunc, { LogLevel } from \"../../../core/debug\";\nimport staticData from \"../../../var/staticData\";\nimport LangPkg from \"../../../utils/translate\";\nimport { saveAndExitSettings } from \"./rs_save\";\n\nexport const renderMeta = function () {\n    const rs_data = rs_dataF();\n    const settings = rs_data.settings;\n    if (!settings || !settings.meta) return debugFunc.msg(LogLevel.ERROR, LangPkg.settings_realm.no_data);\n    const metaDiv = rs_data.html.meta;\n    metaDiv.innerHTML = `<h1>${LangPkg.settings_realm.basic_settings}</h1>`;\n\n    const meta = settings.meta;\n    let img: boolean | File = false;\n\n    const nameInput = initInputText(metaDiv, LangPkg.settings_realm.realm_name, meta.name);\n\n    addSeparator(metaDiv, 10);\n\n    const realmImg = document.createElement(\"img\");\n    realmImg.id = \"settings__realmImg\";\n    if (meta.img) realmImg.src = \"/userFiles/realms/\" + rs_data.realmId + \".png\";\n    else realmImg.style.display = \"none\";\n    metaDiv.appendChild(realmImg);\n\n    const realmImgFile = document.createElement(\"input\");\n    realmImgFile.type = \"file\";\n    realmImgFile.accept = staticData.uploadImgTypes.join(\", \");\n    realmImgFile.addEventListener(\"change\", e => {\n        meta.img = true;\n        // @ts-ignore\n        img = e.target.files[0];\n        // @ts-ignore\n        realmImg.src = URL.createObjectURL(e.target.files[0]);\n        realmImg.style.display = \"\";\n    });\n\n    metaDiv.appendChild(realmImgFile);\n    addSeparator(metaDiv, 5);\n    initButton(metaDiv, LangPkg.settings_realm.remove_image, () => {\n        realmImg.style.display = \"none\";\n        meta.img = false;\n    });\n\n    addSeparator(metaDiv, 15);\n\n    initButton(metaDiv, LangPkg.settings_realm.delete_realm, async () => {\n        const end = \"? (\" + meta.name + \")\";\n        const warns = [\n            LangPkg.settings_realm.delete_realm_confirm.w1,\n            LangPkg.settings_realm.delete_realm_confirm.w2,\n            LangPkg.settings_realm.delete_realm_confirm.w3\n        ];\n        for (const text of warns) {\n            const result = await uiFunc.confirm(text + end);\n            if (!result) return;\n        }\n\n        const name = await uiFunc.prompt(LangPkg.settings_realm.confirm_realm_name + \"?\");\n        if (name !== meta.name) return uiFunc.uiMsgT(LangPkg.settings_realm.delete_wrong_name);\n\n        saveAndExitSettings();\n        coreFunc.changeChat(\"main\");\n        setTimeout(() => {\n            socket.emit(\"realm.delete\", rs_data.realmId, name);\n        }, 1000);\n    }).style.color = \"red\";\n\n    rs_data._this.saveMetaSettings = () => {\n        settings.meta.name = nameInput.value;\n\n        if (img)\n            fileFunc.realm(img as File, rs_data.realmId);\n    }\n}", "import hub from \"../hub\";\nimport Id from \"../types/Id\";\nhub(\"genId\");\n\nconst usedIdsMap = new Map();\n\n/**\n * Generates a unique identifier based on specified parts.\n * @param [parts] - The number of parts or an array of parts. Defaults to [1, 1].\n * @returns The generated unique identifier.\n */\nfunction genId(parts: number[] = [1, 1]): Id {\n    const time = getTime();\n    const id = getUniqueRandom(time, parts);\n    return id;\n}\n\n/**\n * Generates a unique random identifier based on time and parts.\n * @private\n * @param time - The current time in a base36 string format.\n * @param parts - An array of parts to be used for generating the identifier.\n * @returns The unique random identifier.\n */\nfunction getUniqueRandom(time: string, partsSchema: number[]) {\n    const parts = partsSchema.map(l => getRandom(l));\n    const id = [time, ...parts].join(\"-\");\n    if (usedIdsMap.has(id)) {\n        time = getTime();\n        return getUniqueRandom(time, partsSchema);\n    }\n    usedIdsMap.set(id, true);\n    setTimeout(() => {\n        usedIdsMap.delete(id);\n    }, 1000);\n\n    return id;\n}\n\nfunction getRandom(unix: number) {\n    return (Math.floor(Math.random() * Math.pow(36, unix))).toString(36);\n}\n\nfunction getTime() {\n    return new Date().getTime().toString(36);\n}\n\nexport default genId;", "import hub from \"../../../hub\";\nhub(\"rs/roles\");\n\nimport permissionFunc from \"../../../utils/perm\";\nimport vars from \"../../../var/var\";\nimport genId from \"../../../utils/genId\";\nimport rs_dataF from \"./rs_var\";\nimport debugFunc, { LogLevel } from \"../../../core/debug\";\nimport { addSeparator, initButton, initCheckbox, initInputText } from \"./rs_utils\";\nimport { Settings_rs__Role } from \"./types\";\nimport LangPkg from \"../../../utils/translate\";\nimport uiFunc from \"../../helpers/uiFunc\";\n\nexport const renderRoles = function () {\n    const rs_data = rs_dataF();\n    const settings = rs_data.settings;\n    if (!settings || !settings.roles) return debugFunc.msg(LogLevel.ERROR, LangPkg.settings_realm.no_data);\n\n    const container = rs_data.html.role;\n    container.innerHTML = `<h1>${LangPkg.settings_realm.roles}</h1>`;\n\n    const roles = settings.roles;\n    const rolesElements = new Map();\n\n    function repairHierarchy() {\n        roles.sort((a, b) => a.lvl - b.lvl).forEach((role, i) => role.lvl = i);\n    }\n\n    /**\n     * Creates a HTML representation for a role in the roles manager.\n     */\n    function renderRole(role: Settings_rs__Role, i: number) {\n        const details = document.createElement(\"details\");\n        rolesElements.set(role._id, details);\n        addSeparator(details, 5);\n\n        const summary = document.createElement(\"summary\");\n        summary.innerHTML = role.name;\n        summary.style.color = role.c ?? \"\";\n        details.appendChild(summary);\n\n        const roleContent = document.createElement(\"div\");\n        if (role.p < 0) {\n            roleContent.innerHTML = LangPkg.settings_realm.no_perm_to_edit_role;\n        } else {\n            const opts = {\n                summary\n            }\n            initButton(details, LangPkg.uni.edit, () => renderRoleEdit(role, opts));\n            if (role.lvl != 0) {\n                initButton(details, LangPkg.uni.delete, () => {\n                    settings.roles = roles.filter(r => r._id !== role._id);\n                    repairHierarchy();\n                    renderRoles();\n                });\n            }\n            if (i > 0) {\n                const prevRole = roles[i - 1];\n                if (prevRole.p >= 0) {\n                    initButton(details, LangPkg.settings_realm.move_up, () => {\n                        const _thisLvl = role.lvl;\n                        role.lvl = prevRole.lvl;\n                        prevRole.lvl = _thisLvl;\n                        repairHierarchy();\n                        renderRoles();\n                    });\n                }\n            }\n            if (i < roles.length - 1) {\n                initButton(details, LangPkg.settings_realm.move_down, () => {\n                    const nextRole = roles[i + 1];\n                    const _thisLvl = role.lvl;\n                    role.lvl = nextRole.lvl;\n                    nextRole.lvl = _thisLvl;\n                    repairHierarchy();\n                    renderRoles();\n                });\n            }\n        }\n        details.appendChild(roleContent);\n\n        container.appendChild(details);\n        addSeparator(details, 5);\n    }\n\n    addSeparator(container, 10);\n    initButton(container, LangPkg.uni.add, async () => {\n        const _id = genId();\n        const name = await uiFunc.prompt(LangPkg.settings_realm.enter_name);\n        const role: Settings_rs__Role = {\n            name: name || \"New role\",\n            lvl: roles.length,\n            p: 0,\n            _id\n        }\n        settings.roles.push(role);\n        repairHierarchy();\n        renderRoles();\n    });\n\n    for (let i = 0; i < settings.roles.length; i++) {\n        renderRole(settings.roles[i], i);\n    }\n}\n\n/**\n * Renders the edit role interface, allowing users to modify role details\n * such as name, color, and permissions. Provides options to save,\n * cancel, or delete the role. Handles permission settings for each role.\n */\nexport const renderRoleEdit = function (role: Settings_rs__Role, opts: { summary: HTMLElement }) {\n    const containerElement = rs_dataF().html.editRole;\n    containerElement.innerHTML = `<h1>${LangPkg.settings_realm.edit_role}</h1>`;\n    const nameInput = initInputText(containerElement, LangPkg.settings.name, role.name);\n\n    nameInput.onchange = () => {\n        role.name = nameInput.value;\n        opts.summary.innerHTML = role.name;\n    }\n\n    addSeparator(containerElement, 5);\n\n    const roleColor = document.createElement(\"input\");\n    roleColor.type = \"color\";\n    roleColor.value = role.c || \"\";\n    roleColor.onchange = () => {\n        role.c = roleColor.value;\n        opts.summary.style.color = role.c ?? null;\n    }\n    containerElement.appendChild(roleColor);\n    addSeparator(containerElement, 5);\n\n    function caclulatePermissionsByCheckBoxs() {\n        let newPerms = 0;\n        checkboxs.forEach((c, i) => {\n            if (c.checked) newPerms += (1 << i);\n        })\n        return newPerms;\n    }\n\n    const checkboxs = [];\n    const permsBuild = [\n        \"admin\",\n        \"manage_messages\",\n        \"ban_user\",\n        \"mute_user\",\n        \"kick_user\",\n        \"manage_roles\",\n        \"manage_emojis\",\n        \"manage_invites\",\n        \"manage_webhooks\",\n        \"manage_channels\",\n    ];\n\n    const userPermissions = vars.realm.permission || 0;\n\n    permsBuild.forEach((pb, i) => {\n        const isPerm = permissionFunc.hasPermission(role.p, (1 << i));\n        const checkbox = initCheckbox(containerElement, LangPkg.settings_realm.role_permissions[pb], isPerm);\n\n        // if user not has permission, don't allow to change\n        if(permissionFunc.hasPermission(userPermissions, (1 << i)))\n            checkbox.onchange = () => role.p = caclulatePermissionsByCheckBoxs();\n        else{\n            checkbox.disabled = true;\n            const label = checkbox.nextElementSibling as HTMLLabelElement;\n            label.style.textDecoration = \"line-through\";\n        }\n        \n        checkboxs.push(checkbox);\n    });\n\n    addSeparator(containerElement, 10);\n    initButton(containerElement, LangPkg.uni.close, () => {\n        renderRoles();\n        containerElement.fadeOut();\n    });\n\n    containerElement.fadeIn();\n}", "import hub from \"../../../hub\";\nhub(\"rs/emoji\");\n\nimport socket from \"../../../core/socket/socket\";\nimport fileFunc from \"../../../api/file\";\nimport debugFunc, { LogLevel } from \"../../../core/debug\";\nimport rs_dataF from \"./rs_var\";\nimport { initButton, initInputText } from \"./rs_utils\";\nimport { Settings_rs__Emoji } from \"./types\";\nimport staticData from \"../../../var/staticData\";\nimport LangPkg from \"../../../utils/translate\";\n\nexport const renderEmojis = function () {\n    const rs_data = rs_dataF();\n    const settings = rs_data.settings;\n    if (!settings || !settings.emojis) return debugFunc.msg(LogLevel.ERROR, LangPkg.settings_realm.no_data);\n    rs_data.html.emoji.innerHTML = `<h1>${LangPkg.settings_realm.emoji_manager}</h1>`;\n\n    const uploadButton = document.createElement(\"button\");\n    uploadButton.innerHTML = LangPkg.settings_realm.upload_emoji;\n    uploadButton.onclick = () => {\n        const fileInput = document.createElement(\"input\");\n        fileInput.type = \"file\";\n        fileInput.accept = staticData.uploadImgTypes.join(\",\");\n        fileInput.onchange = async () => {\n            // @ts-ignore\n            const file = fileInput.files[0];\n            if (!file) return;\n            fileFunc.emocji(file, rs_data.realmId);\n            setTimeout(() => {\n                socket.emit(\"realm.emojis.sync\", rs_data.realmId, (emojis) => {\n                    settings.emojis = emojis;\n                    renderEmojis();\n                });\n            }, 1000);\n        }\n        fileInput.click();\n    }\n\n    rs_data.html.emoji.appendChild(uploadButton);\n\n    /**\n     * Renders an emoji element with its associated image, name input, and delete button.\n     */\n    function renderEmoji(emoji: Settings_rs__Emoji) {\n        const emojiDiv = document.createElement(\"div\");\n        emojiDiv.classList.add(\"emoji__container\");\n\n        const img = document.createElement(\"img\");\n        img.src = \"/userFiles/realms/\" + rs_data.realmId + \"/emojis/\" + emoji.emoji + \".png\";\n        img.style.width = \"64px\";\n        emojiDiv.appendChild(img);\n\n        const emojiName = initInputText(emojiDiv, LangPkg.settings.name, emoji.name);\n        emojiName.addEventListener(\"change\", () => {\n            emoji.name = emojiName.value;\n        });\n\n        initButton(emojiDiv, LangPkg.uni.delete, () => {\n            const emojis = settings.emojis;\n            emojis.splice(emojis.indexOf(emoji), 1);\n            renderEmojis();\n        });\n\n        rs_data.html.emoji.appendChild(emojiDiv);\n    }\n\n    for (const emoji of settings.emojis) {\n        renderEmoji(emoji);\n    }\n}", "import hub from \"../../../hub\";\nhub(\"rs/channels\");\n\nimport rs_dataF from \"./rs_var\";\nimport apis from \"../../../api/apis\";\nimport genId from \"../../../utils/genId\";\nimport uiFunc from \"../../helpers/uiFunc\";\nimport debugFunc, { LogLevel } from \"../../../core/debug\";\nimport socket from \"../../../core/socket/socket\";\nimport { Settings_rs__Category, Settings_rs__Channel, Settings_rs__Role } from \"./types\";\nimport { Channel_Type } from \"../../../types/channel\";\nimport LangPkg, { langFunc } from \"../../../utils/translate\";\nimport {\n    initInputText,\n    initButton,\n    addSeparator,\n    initCheckbox,\n} from \"./rs_utils\";\n\nexport const renderChannels = function () {\n    const rs_data = rs_dataF();\n    const settings = rs_data.settings;\n    if (!settings || !settings.categories || !settings.channels) return debugFunc.msg(LogLevel.ERROR, LangPkg.settings_realm.no_data);\n\n    const categoriesContainer = rs_data.html.category;\n    categoriesContainer.innerHTML = `<h1>${LangPkg.settings_realm.categories_and_channels}</h1>`;\n\n    const sortedCategories = settings.categories.sort((a, b) => a.i - b.i);\n    const channels = settings.channels;\n\n    initButton(categoriesContainer, LangPkg.settings_realm.add_category, async () => {\n        const name = await uiFunc.prompt(LangPkg.settings_realm.enter_name);\n\n        settings.categories.push({\n            cid: genId(),\n            name: name || \"New Category\",\n            i: settings.categories.length\n        });\n        renderChannels();\n    })\n\n    sortedCategories.forEach(category => {\n        addSeparator(categoriesContainer, 15);\n        const categoryDiv = document.createElement(\"div\");\n        categoryDiv.innerHTML = `<span style=\"font-size: 1.5rem\" class=\"settings__nameSpan\">- ${category.name}</span>`;\n\n        initButton(categoryDiv, LangPkg.settings_realm.move_up, () => {\n            if (category.i === 0) return;\n\n            const i = category.i;\n            settings.categories[i].i = i - 1;\n            settings.categories[i - 1].i = i;\n            renderChannels();\n        });\n\n        initButton(categoryDiv, LangPkg.settings_realm.move_down, () => {\n            if (category.i === sortedCategories.length - 1) return;\n\n            const i = category.i;\n            settings.categories[i].i = i + 1;\n            settings.categories[i + 1].i = i;\n            renderChannels();\n        });\n\n        initButton(categoryDiv, LangPkg.uni.edit, () => {\n            categoriesContainer.querySelectorAll(\"div\").forEach(div => div.style.border = \"\");\n            categoryDiv.style.border = \"3px dotted var(--accent)\";\n            renderEditCategory(category);\n        });\n\n        initButton(categoryDiv, LangPkg.settings_realm.add_channel, async () => {\n            const name = await uiFunc.prompt(LangPkg.settings_realm.enter_name);\n            const { text, voice, announcement, open_announcement, forum } = LangPkg.settings_realm.channel_types;\n            const type = await uiFunc.selectPrompt(\n                LangPkg.settings_realm.select_type,\n                [text, voice, announcement, open_announcement, forum],\n                [\"text\", \"voice\", \"announcement\", \"open_announcement\", \"forum\"]\n            ) as Channel_Type;\n\n            const newChannel: Settings_rs__Channel = {\n                name: name || \"New Channel\",\n                type: type || \"text\",\n                category: category.cid,\n                i: channels.filter(channel => channel.category === category.cid).length,\n                rp: [],\n                chid: genId(),\n                desc: \"\"\n            };\n            settings.channels.push(newChannel);\n            renderChannels();\n        });\n\n        addSeparator(categoryDiv, 10);\n\n        const categoryChannels = channels.filter(channel => channel.category === category.cid).sort((a, b) => a.i - b.i);\n        categoryChannels.forEach(channel => {\n            const channelElement = document.createElement(\"div\");\n            channelElement.innerHTML =\n                `<span style=\"font-size: 1.2rem\" class=\"settings__nameSpan\">${\"&nbsp;\".repeat(3)}+ ${channel.name} (${channel.type})</span>`;\n\n            initButton(channelElement, LangPkg.settings_realm.move_up, () => {\n                if (channel.i === 0) return;\n\n                const i = channel.i;\n\n                const currentChannelIndex = settings.channels.findIndex(ch => {\n                    if (ch.category !== channel.category) return false;\n                    return ch.i === i;\n                });\n                const previousChannelIndex = settings.channels.findIndex(ch => {\n                    if (ch.category !== channel.category) return false;\n                    return ch.i === i - 1;\n                });\n\n                if (currentChannelIndex === -1 || previousChannelIndex === -1) return;\n                settings.channels[currentChannelIndex].i = i - 1;\n                settings.channels[previousChannelIndex].i = i;\n\n                renderChannels();\n            });\n\n            initButton(channelElement, LangPkg.settings_realm.move_down, () => {\n                if (channel.i >= categoryChannels.length - 1) return;\n\n                const i = channel.i;\n\n                const currentChannelIndex = settings.channels.findIndex(ch => {\n                    if (ch.category !== channel.category) return false;\n                    return ch.i === i;\n                });\n                const nextChannelIndex = settings.channels.findIndex(ch => {\n                    if (ch.category !== channel.category) return false;\n                    return ch.i === i + 1;\n                });\n\n                if (currentChannelIndex === -1 || nextChannelIndex === -1) return;\n                settings.channels[currentChannelIndex].i = i + 1;\n                settings.channels[nextChannelIndex].i = i;\n\n                renderChannels();\n            });\n\n            initButton(channelElement, LangPkg.uni.edit, () => {\n                categoriesContainer.querySelectorAll(\"div\").forEach(div => div.style.border = \"\");\n                channelElement.style.border = \"3px dotted var(--accent)\";\n                renderEditChannel(channel);\n            });\n\n            categoryDiv.appendChild(channelElement);\n            addSeparator(categoryDiv, 10);\n        });\n\n        categoriesContainer.appendChild(categoryDiv);\n    });\n}\n\n/**\n * Renders the edit channel interface, allowing users to modify channel details\n * such as name, description, roles, and subscriptions. Provides options to save,\n * cancel, or delete the channel. Handles permission settings for each role and\n * displays subscribed channels with the option to unsubscribe.\n * \n * @param {Settings_rs__Channel} channel The channel object to edit.\n */\n\nexport const renderEditChannel = function (channel: Settings_rs__Channel) {\n    const rs_data = rs_dataF();\n    const containerElement = rs_data.html.editChannel;\n    const settings = rs_data.settings;\n    containerElement.innerHTML = `<h1>${LangPkg.settings_realm.edit_channel}</h1>`;\n\n    const nameInp = initInputText(containerElement, LangPkg.settings.name, channel.name);\n    const descInp = initInputText(containerElement, LangPkg.settings.description, channel.desc || \"\");\n\n    function renderRole(role: Settings_rs__Role) {\n        const details = document.createElement(\"details\");\n        const summary = document.createElement(\"summary\");\n        summary.innerHTML = role.name;\n        details.appendChild(summary);\n        let roleRp = channel.rp.find(rp => rp.startsWith(role._id));\n        // @ts-ignore: roleRp is string\n        roleRp = roleRp ? parseInt(roleRp.split(\"/\")[1]) : 0;\n\n        vars_channelsFlags().forEach((perm, i) => {\n            // @ts-ignore: i is number\n            const checked = roleRp & (1 << i);\n            const checkbox = initCheckbox(details, perm, !!checked);\n            checkbox.setAttribute(\"data-role\", role._id);\n            checkbox.setAttribute(\"data-perm\", i.toString());\n        });\n        containerElement.appendChild(details);\n        addSeparator(details, 5);\n    }\n\n    settings.roles.forEach(renderRole);\n\n    const subscribed = settings.addons.subscribedChannels.filter(tc => tc.tc === channel.chid);\n    if (subscribed.length > 0) {\n        addSeparator(containerElement, 10);\n\n        const details = document.createElement(\"details\");\n        const summary = document.createElement(\"summary\");\n        summary.innerHTML = LangPkg.settings_realm.subscribed_channels;\n        details.appendChild(summary);\n\n        const ul = document.createElement(\"ul\");\n        subscribed.forEach(sub => {\n            const li = document.createElement(\"li\");\n            li.style.marginLeft = \"1.2rem\";\n            li.innerHTML = apis.www.changeChat(sub.sr) + \" - \" + sub.name;\n\n            const unsubscribe = document.createElement(\"button\");\n            unsubscribe.style.marginLeft = \"1rem\";\n            unsubscribe.innerHTML = LangPkg.settings_realm.unsubscribe_channel;\n            unsubscribe.addEventListener(\"click\", async () => {\n                const text = langFunc(LangPkg.settings_realm.confirm_unsubscribe, apis.www.changeChat(sub.sr) + \" - \" + sub.name) + \"?\";\n                const conf = await uiFunc.confirm(text);\n                if (!conf) return;\n                socket.emit(\"realm.announcement.channel.unsubscribe\", sub.sr, sub.sc, rs_data.realmId, sub.tc);\n                settings.addons.subscribedChannels = settings.addons.subscribedChannels.filter(s => s !== sub);\n                li.remove();\n            });\n            li.appendChild(unsubscribe);\n\n            ul.appendChild(li);\n        });\n\n        details.appendChild(ul);\n        containerElement.appendChild(details);\n    }\n\n\n    addSeparator(containerElement, 15);\n    initButton(containerElement, LangPkg.settings.save, () => {\n        channel.name = nameInp.value;\n        const desc = descInp.value;\n        channel.desc = desc.trim() === \"\" ? undefined : desc;\n        const roles = settings.roles;\n        const rolesMap = new Map();\n        roles.forEach(role => rolesMap.set(role._id, 0));\n\n        containerElement.querySelectorAll(\"input[type=checkbox][data-role][data-perm]\").forEach(checkbox => {\n            // @ts-ignore: checkbox is HTMLInputElement\n            if (!checkbox.checked) return;\n            const role = checkbox.getAttribute(\"data-role\");\n            const perm = checkbox.getAttribute(\"data-perm\");\n\n            const allPerm = rolesMap.get(role);\n            // @ts-ignore: perm is string\n            const number = 1 << parseInt(perm);\n            rolesMap.set(role, allPerm | number);\n        });\n\n        channel.rp = Array.from(rolesMap)\n            .filter(([, value]) => value !== 0)\n            .map(([key, value]) => `${key}/${value}`);\n\n        renderChannels();\n        containerElement.fadeOut();\n    });\n\n    initButton(containerElement, LangPkg.uni.cancel, () => {\n        renderChannels();\n        containerElement.fadeOut();\n    });\n\n    initButton(containerElement, LangPkg.uni.delete, () => {\n        const index = settings.channels.findIndex(ch => ch === channel);\n        if (index !== -1) {\n            settings.channels.splice(index, 1);\n            renderChannels();\n            containerElement.fadeOut();\n        }\n    });\n\n    containerElement.fadeIn();\n}\n\n/**\n * Renders a form to edit the given category.\n * @param {Settings_rs__Category} category The category to edit\n */\nexport const renderEditCategory = function (category: Settings_rs__Category) {\n    const rs_data = rs_dataF();\n    const settings = rs_data.settings;\n    if (!settings || !settings.categories) return debugFunc.msg(LogLevel.ERROR, \"No settings data\");\n\n    const containerElement = rs_data.html.editChannel;\n    containerElement.innerHTML = `<h1>${LangPkg.settings_realm.edit_category}</h1>`;\n\n    const nameInput = initInputText(containerElement, LangPkg.settings.name, category.name);\n\n    addSeparator(containerElement, 15);\n    initButton(containerElement, LangPkg.settings.save, () => {\n        category.name = nameInput.value;\n        renderChannels();\n        containerElement.fadeOut();\n    });\n    initButton(containerElement, LangPkg.uni.cancel, () => {\n        renderChannels();\n        containerElement.fadeOut();\n    });\n    initButton(containerElement, LangPkg.uni.delete, () => {\n        const index = settings.categories.findIndex(cat => cat.cid === category.cid);\n        if (index !== -1) {\n            settings.categories.splice(index, 1);\n            renderChannels();\n            containerElement.fadeOut();\n        }\n    });\n\n    containerElement.fadeIn();\n}\n\nconst vars_channelsFlags = () => [\n    LangPkg.settings_realm.mess_permissions.view,\n    LangPkg.settings_realm.mess_permissions.write,\n    LangPkg.settings_realm.mess_permissions.files,\n    LangPkg.settings_realm.mess_permissions.reactions,\n    LangPkg.settings_realm.mess_permissions.thread,\n    LangPkg.settings_realm.mess_permissions.thread_view,\n    LangPkg.settings_realm.mess_permissions.thread_write\n]", "import hub from \"../../../hub\";\nhub(\"rs/webhooks\");\n\nimport genId from \"../../../utils/genId\";\nimport uiFunc from \"../../helpers/uiFunc\";\nimport rs_dataF from \"./rs_var\";\nimport utils from \"../../../utils/utils\";\nimport { addSeparator, initButton, initInputText } from \"./rs_utils\";\nimport { Settings_rs__Category, Settings_rs__Channel, Settings_rs__Webhook } from \"./types\";\nimport Id from \"../../../types/Id\";\nimport LangPkg from \"../../../utils/translate\";\nimport debugFunc, { LogLevel } from \"../../../core/debug\";\nimport socket from \"../../../core/socket/socket\";\n\nconst webhook_available_channels_type = [\n    \"text\",\n    \"open_announcement\",\n    \"announcement\",\n]\n\nexport const renderWebhooks = function () {\n    const rs_data = rs_dataF();\n    const settings = rs_data.settings;\n    if (!settings || !settings.webhooks) return debugFunc.msg(LogLevel.ERROR, LangPkg.settings_realm.no_data);\n\n    const container = rs_data.html.webhook;\n    container.innerHTML = `<h1>${LangPkg.settings_realm.webhooks.webhook}</h1>`;\n\n    initButton(container, LangPkg.settings_realm.add_webhook, () => {\n        function findFirstTextChannel(categories: Settings_rs__Category[], channels: Settings_rs__Channel[]) {\n            categories = categories.sort((a, b) => a.i - b.i);\n\n            for (let category of categories) {\n                const textChannels = channels\n                    .filter(item => item.type === \"text\" && item.category === category.cid)\n                    .sort((a, b) => a.i - b.i);\n\n                if (textChannels.length > 0)\n                    return textChannels[0].chid;\n            }\n\n            return null;\n        }\n\n        const id = \"$\" + genId();\n        const chnl = findFirstTextChannel(settings.categories, settings.channels);\n        if (!chnl) return uiFunc.uiMsgT(LangPkg.settings_realm.no_channels);\n\n        const webhook: Settings_rs__Webhook = {\n            whid: id,\n            name: \"Webhook\",\n            template: \"$content\",\n            chnl,\n            ajv: {},\n            required: []\n        }\n\n        settings.webhooks.push(webhook);\n        renderWebhooks();\n        renderWebhookEdit(id);\n    });\n\n    addSeparator(container, 15);\n\n    settings.webhooks.forEach(webhook => {\n        const webhookDiv = document.createElement(\"div\");\n        webhookDiv.innerHTML = webhook.name;\n\n        initButton(webhookDiv, \"Edit\", () => {\n            renderWebhookEdit(webhook.whid);\n        });\n\n        container.appendChild(webhookDiv);\n    });\n}\n\nexport const renderWebhookEdit = function (id: Id) {\n    const rs_data = rs_dataF();\n    const settings = rs_data.settings;\n    const container = rs_data.html.editWebhook;\n    container.innerHTML = `<h1>${LangPkg.settings_realm.edit_webhook}</h1>`;\n\n    const webhook = settings.webhooks.find(w => w.whid == id);\n    if (!webhook) return uiFunc.uiMsgT(LangPkg.settings_realm.webhooks.not_found);\n\n    if (!webhook.whid.startsWith(\"$\")) {\n        const webhookUrlCopy = document.createElement(\"button\");\n        webhookUrlCopy.innerHTML = \"URL (POST) \" + LangPkg.uni.copy;\n        webhookUrlCopy.onclick = () => {\n            socket.emit(\"realm.webhook.token.get\", rs_data.realmId, webhook.whid, (token: Id) => {\n                const webhookUrl = `${window.location.origin}/api/webhook/custom?token=${token}`;\n                utils.writeToClipboard(webhookUrl).then(ok => {\n                    if (ok) uiFunc.uiMsgT(LangPkg.ui.copied);\n                });\n            })\n        }\n        container.appendChild(webhookUrlCopy);\n    } else {\n        const webhookUrl = document.createElement(\"span\");\n        webhookUrl.innerHTML = LangPkg.settings_realm.webhooks.get_url_before;\n        container.appendChild(webhookUrl);\n    }\n\n    const webhookLang = LangPkg.settings_realm.webhooks;\n    addSeparator(container, 15);\n    const name = initInputText(container, LangPkg.settings.name, webhook.name);\n    addSeparator(container, 5);\n    const template = initInputText(container, webhookLang.template, webhook.template);\n\n    function renderChnls(categories: Settings_rs__Category[], channels: Settings_rs__Channel[]) {\n        const select = document.createElement(\"select\");\n\n        categories = categories.sort((a, b) => a.i - b.i);\n        for (let category of categories) {\n            const group = document.createElement(\"optgroup\");\n            group.label = category.name;\n\n            channels\n                .filter(item => item.category === category.cid)\n                .filter(item => webhook_available_channels_type.includes(item.type))\n                .sort((a, b) => a.i - b.i)\n                .forEach(channel => {\n                    const option = document.createElement(\"option\");\n                    option.value = channel.chid;\n                    option.innerHTML = channel.name;\n                    group.appendChild(option);\n                });\n            select.appendChild(group);\n        }\n\n        return select;\n    }\n\n    addSeparator(container, 5);\n    const chnlLabel = document.createElement(\"label\");\n    chnlLabel.innerHTML = webhookLang.channel;\n    container.appendChild(chnlLabel);\n\n    const chnl = renderChnls(settings.categories, settings.channels);\n    chnl.value = webhook.chnl;\n    container.appendChild(chnl);\n\n    addSeparator(container, 10);\n    const advancedDiv = document.createElement(\"div\");\n    advancedDiv.innerHTML = `<h2>${webhookLang.advanced}</h2>`;\n\n    const ajv = initInputText(advancedDiv, webhookLang.ajv, JSON.stringify(webhook.ajv) || \"{}\");\n    addSeparator(advancedDiv, 5);\n    const required = initInputText(advancedDiv, webhookLang.required_fields, JSON.stringify(webhook.required) || \"[]\");\n\n    container.appendChild(advancedDiv);\n\n    addSeparator(container, 10);\n\n    const embedSettings = document.createElement(\"div\");\n    embedSettings.innerHTML = `<h2>${webhookLang.embed_settings}</h2>`;\n    addSeparator(embedSettings, 5);\n\n    const embed = webhook.embed;\n\n    const embedTitle = initInputText(embedSettings, webhookLang.title, embed?.title || \"\");\n    addSeparator(embedSettings, 5);\n    const embedUrl = initInputText(embedSettings, webhookLang.url, embed?.url || \"\");\n    addSeparator(embedSettings, 5);\n    const embedDesc = initInputText(embedSettings, LangPkg.settings.description, embed?.description || \"\");\n    addSeparator(embedSettings, 5);\n    const embedImage = initInputText(embedSettings, webhookLang.image, embed?.image || \"\");\n    addSeparator(embedSettings, 5);\n\n    const embedCustomFields = document.createElement(\"div\");\n    embedCustomFields.innerHTML = `<h3>${webhookLang.custom_fields}</h3>`;\n    embedSettings.appendChild(embedCustomFields);\n    addSeparator(embedCustomFields, 5);\n\n    const embedCustomFieldsData = [];\n\n    function createEmbedCustomFields(key: string, value: string) {\n        const li = document.createElement(\"li\");\n        const customFieldName = document.createElement(\"input\");\n        const customFieldValue = document.createElement(\"input\");\n        customFieldName.type = \"text\";\n        customFieldValue.type = \"text\";\n        customFieldName.value = key;\n        customFieldValue.value = value;\n        customFieldValue.classList.add(\"margin-left\");\n        const data = { name: customFieldName, value: customFieldValue };\n\n        const remove = document.createElement(\"button\");\n        remove.innerHTML = LangPkg.uni.delete;\n        remove.classList.add(\"margin-left\");\n        remove.addEventListener(\"click\", () => {\n            embedCustomFieldsData.splice(embedCustomFieldsData.indexOf(data), 1);\n            li.remove();\n        });\n\n        li.appendChild(customFieldName);\n        li.appendChild(customFieldValue);\n        li.appendChild(remove);\n        addSeparator(li, 5);\n        embedCustomFieldsList.appendChild(li);\n        embedCustomFieldsData.push(data);\n    }\n\n    initButton(embedCustomFields, LangPkg.uni.add, () => createEmbedCustomFields(\"\", \"\"));\n    addSeparator(embedSettings, 5);\n\n    const embedCustomFieldsList = document.createElement(\"ul\");\n    embedCustomFieldsList.style.listStyleType = \"none\";\n    embedCustomFieldsList.style.paddingLeft = \"3px\";\n    embedCustomFields.appendChild(embedCustomFieldsList);\n    addSeparator(embedCustomFieldsList, 5);\n\n    if (webhook.embed && webhook.embed.customFields) {\n        Object.entries(webhook.embed.customFields).forEach(([key, value]) => createEmbedCustomFields(key, value));\n    }\n\n    container.appendChild(embedSettings);\n\n    addSeparator(container, 15);\n    initButton(container, LangPkg.settings.save, () => {\n        webhook.name = name.value;\n        webhook.template = template.value;\n        webhook.ajv = ajv.value ? JSON.parse(ajv.value) : {};\n        webhook.required = required.value ? JSON.parse(required.value) : [];\n        webhook.chnl = chnl.value;\n\n        if (embedTitle.value.trim() !== \"\") {\n            const embed = {\n                title: embedTitle.value.trim(),\n                url: embedUrl.value.trim(),\n                description: embedDesc.value.trim(),\n                image: embedImage.value.trim(),\n                customFields:\n                    embedCustomFieldsData\n                        .map(({ name, value }) => ({ name: name.value.trim(), value: value.value.trim() }))\n                        .reduce((acc, { name, value }) => { acc[name] = value; return acc; }, {})\n            }\n\n            webhook.embed = embed;\n        } else {\n            webhook.embed = undefined;\n        }\n\n        renderWebhooks();\n        container.fadeOut();\n    });\n\n    initButton(container, LangPkg.uni.cancel, () => {\n        container.fadeOut();\n        // @ts-ignore\n        if (!webhook.embed?.title) webhook.embed = undefined;\n    });\n\n    initButton(container, LangPkg.uni.delete, () => {\n        settings.webhooks = settings.webhooks.filter(w => w.whid != id);\n        renderWebhooks();\n        container.fadeOut();\n    });\n\n    container.fadeIn();\n}", "import hub from \"../../../hub\";\nhub(\"rs/users\");\n\nimport apis from \"../../../api/apis\";\nimport vars from \"../../../var/var\";\nimport socket from \"../../../core/socket/socket\";\nimport debugFunc, { LogLevel } from \"../../../core/debug\";\nimport rs_dataF from \"./rs_var\";\nimport { addSeparator, initButton, initCheckbox } from \"./rs_utils\";\nimport { Settings_rs__User } from \"./types\";\nimport LangPkg, { langFunc } from \"../../../utils/translate\";\nimport uiFunc from \"../../helpers/uiFunc\";\n\nexport const renderUserRoleManager = function () {\n    const rs_data = rs_dataF();\n    const settings = rs_data.settings;\n    if (!settings || !settings.users) return debugFunc.msg(LogLevel.ERROR, LangPkg.settings_realm.no_data);\n\n    const container = rs_data.html.usersManager;\n    container.innerHTML = `<h1>${LangPkg.settings_realm.users_manager}</h1>`;\n    const users = settings.users;\n    const roles = settings.roles;\n\n    /**\n     * Creates a HTML representation for a user in the users manager.\n     */\n    function renderUser(user: Settings_rs__User) {\n        const details = document.createElement(\"details\");\n        const summary = document.createElement(\"summary\");\n        summary.innerHTML = apis.www.changeUserID(user.u);\n        details.appendChild(summary);\n        const div = document.createElement(\"div\");\n\n        const userRoles = user.r;\n        const checkboxs = [];\n\n        roles.forEach(role => {\n            if (!role._id) return;\n            const checkbox = initCheckbox(div, role.name, userRoles.includes(role._id));\n            checkboxs.push({ id: role._id, checkbox });\n        });\n\n        addSeparator(div, 10);\n        initButton(div, LangPkg.uni.update, () => {\n            const newRoles = [];\n            checkboxs.forEach(c => {\n                const { id, checkbox } = c;\n                if (checkbox.checked) newRoles.push(id);\n            })\n            settings.users.find(u => u === user).r = newRoles;\n            renderUserRoleManager();\n        });\n\n        if (user.u != vars.user._id) {\n            addSeparator(div, 10);\n            initButton(div, LangPkg.settings_realm.role_permissions.kick_user, async () => {\n                const text = langFunc(LangPkg.settings_realm.user_mgmt_confirms.kick_sure, apis.www.changeUserID(user.u)) + \"?\";\n                const conf = await uiFunc.confirm(text); \n                if (!conf) return;\n\n                settings.users = settings.users.filter(u => u.u !== user.u);\n                socket.emit(\"realm.user.kick\", rs_data.realmId, user.u);\n                renderUserRoleManager();\n            });\n\n            initButton(div, LangPkg.settings_realm.role_permissions.ban_user, async () => {\n                const text = langFunc(LangPkg.settings_realm.user_mgmt_confirms.ban_sure, apis.www.changeUserID(user.u)) + \"?\";\n                const conf = await uiFunc.confirm(text);\n                if (!conf) return;\n\n                settings.users = settings.users.filter(u => u.u !== user.u);\n                socket.emit(\"realm.user.kick\", rs_data.realmId, user.u, true);\n                renderUserRoleManager();\n            });\n        }\n\n        details.appendChild(div);\n        addSeparator(details, 10);\n        return details;\n    }\n\n    users.forEach(user => {\n        container.appendChild(renderUser(user));\n        addSeparator(container, 10);\n    });\n\n    if (settings.banUsers.length > 0) {\n        const banUsersDetails = document.createElement(\"details\");\n\n        const banUsersSummary = document.createElement(\"summary\");\n        banUsersSummary.innerHTML = LangPkg.settings_realm.banned_users;\n        banUsersDetails.appendChild(banUsersSummary);\n\n        settings.banUsers.forEach(u => {\n            const userName = document.createElement(\"span\");\n            userName.innerHTML = apis.www.changeUserID(u);\n            banUsersDetails.appendChild(userName);\n\n            initButton(banUsersDetails, LangPkg.settings_realm.unban_user, async () => {\n                const text = langFunc(LangPkg.settings_realm.user_mgmt_confirms.unban_sure, apis.www.changeUserID(u)) + \"?\";\n                const conf = await uiFunc.confirm(text);\n                if (!conf) return;\n\n                settings.banUsers = settings.banUsers.filter(u => u !== u);\n                socket.emit(\"realm.user.unban\", rs_data.realmId, u);\n                renderUserRoleManager();\n            });\n        });\n\n        container.appendChild(banUsersDetails);\n    }\n}", "import { Channel_Type } from \"../../../types/channel\";\nimport Id from \"../../../types/Id\";\n\nexport interface Settings_rs__SubscribedChannel {\n    sr: Id; // source realm ID\n    sc: Id; // source channel ID\n    tc: Id; // target channel ID\n    // tr: the target realm ID can be inferred from the context in which the subscription is stored\n    name: string;\n}\n\nexport interface Settings_rs__Addons {\n    subscribedChannels: Settings_rs__SubscribedChannel[];\n}\n\nexport interface Settings_rs__Meta {\n    name: string;\n    owner: Id;\n    img: boolean;\n}\n\nexport interface Settings_rs__Category {\n    cid: Id;\n    name: string;\n    i: number; // index\n}\n\nexport interface Settings_rs__Channel {\n    chid: Id;\n    name: string;\n    type: Channel_Type;\n    category: Id;\n    i: number; // index\n    rp: Id[]; // role permissions\n    desc?: string; // description\n}\n\nexport interface Settings_rs__Emoji {\n    emoji: Id;\n    name: string;\n}\n\nexport interface Settings_rs__Webhook {\n    whid: Id;\n    name: string;\n    template: string;\n    chnl: Id;\n    ajv: Record<string, any>; // additional JSON validation\n    required: string[];\n    embed?: {\n        title: string;\n        description: string;\n        url: string;\n        image: string;\n        customFields: Record<string, any>;\n    };\n}\n\nexport interface Settings_rs__User {\n    u: Id; // user ID\n    r: Id[]; // roles\n}\n\nexport interface Settings_rs__Role {\n    _id: Id;\n    lvl: number;\n    name: string;\n    p: number; // permissions\n    c?: string; // color code\n}\n\nexport interface Settings {\n    addons: Settings_rs__Addons;\n    meta: Settings_rs__Meta;\n    categories: Settings_rs__Category[];\n    channels: Settings_rs__Channel[];\n    banUsers: Id[];\n    emojis: Settings_rs__Emoji[];\n    webhooks: Settings_rs__Webhook[];\n    users: Settings_rs__User[];\n    roles: Settings_rs__Role[];\n}\n\nexport interface Settings_rs__Categories {\n    meta: HTMLElement;\n    category: HTMLElement;\n    editChannel: HTMLElement;\n    role: HTMLElement;\n    editRole: HTMLElement;\n    usersManager: HTMLElement;\n    emoji: HTMLElement;\n    webhook: HTMLElement;\n    editWebhook: HTMLElement;\n}\n\nexport const settingsKeys = [\n    \"meta\",\n    \"category\",\n    \"editChannel\",\n    \"role\",\n    \"editRole\",\n    \"usersManager\",\n    \"emoji\",\n    \"webhook\",\n    \"editWebhook\",\n] as const;\n\nexport type Settings_rs__SettingsNav = {\n    [Key in typeof settingsKeys[number]]?: boolean;\n};\n\nexport interface Settings_rs__CategorySwitcherButton {\n    text: string;\n    name: string;\n    req: string[];\n    p?: number;\n    render?: () => void;\n}", "import hub from \"../../../hub\";\nhub(\"rs/nav\");\n\nimport LangPkg from \"../../../utils/translate\";\nimport permissionFunc, { PermissionFlags } from \"../../../utils/perm\";\nimport socket from \"../../../core/socket/socket\";\nimport rs_dataF from \"./rs_var\";\n\nimport { renderMeta } from \"./rs_meta\";\nimport { renderWebhooks } from \"./rs_webhooks\";\nimport { renderEmojis } from \"./rs_emoji\";\nimport { renderUserRoleManager } from \"./rs_users\";\nimport { renderRoles } from \"./rs_roles\";\nimport { renderChannels } from \"./rs_channels\";\nimport { addSeparator } from \"./rs_utils\";\nimport { Settings_rs__CategorySwitcherButton, settingsKeys, Settings_rs__SettingsNav } from \"./types\";\n\n/**\n * Updates the display status of various sections in the UI based on the provided options.\n * Each section can be toggled between \"block\" and \"none\" display styles.\n */\nexport const changeDisplay = function (options: Settings_rs__SettingsNav) {\n    const rs_data = rs_dataF();\n    for (const category of settingsKeys) {\n        const div = rs_data.html[category];\n        div.style.display = options[category] ? \"block\" : \"none\";\n    }\n}\n\n/**\n * Renders a container with buttons for each section of the realm settings.\n * Each button, when clicked, will toggle the display of the corresponding section.\n * \n * The sections available are:\n * - Basic Settings\n * - Categories & Channels\n * - Roles\n * - Users Manager\n * - Emoji Manager\n * - Webhooks\n * \n * Note that some sections may be hidden or disabled based on the user's permissions.\n */\nexport const renderCategorySwitcher = function () {\n    const categoryButtonsBuilder: Settings_rs__CategorySwitcherButton[] =\n        [\n            {\n                text: LangPkg.settings_realm.basic_settings,\n                name: \"meta\",\n                req: [\"meta\"],\n                render: renderMeta\n            },\n            {\n                text: LangPkg.settings_realm.categories_and_channels,\n                name: \"category\",\n                req: [\"categories\", \"channels\"],\n                p: PermissionFlags.ManageChannels,\n                render: renderChannels\n            },\n            {\n                text: LangPkg.settings_realm.roles,\n                name: \"role\",\n                req: [\"roles\"],\n                p: PermissionFlags.ManageRoles,\n                render: renderRoles\n            },\n            {\n                text: LangPkg.settings_realm.users_manager,\n                req: [\"users\", \"banUsers\", \"roles\"],\n                name: \"usersManager\",\n                p: PermissionFlags.BanUser,\n                render: renderUserRoleManager\n            },\n            {\n                text: LangPkg.settings_realm.emoji_manager,\n                name: \"emoji\",\n                req: [\"emojis\"],\n                p: PermissionFlags.ManageEmojis,\n                render: renderEmojis\n            },\n            {\n                text: LangPkg.settings_realm.webhooks.webhook,\n                name: \"webhook\",\n                req: [\"webhooks\"],\n                p: PermissionFlags.ManageWebhooks,\n                render: renderWebhooks\n            },\n        ]\n\n    const categoryButtons = categoryButtonsBuilder\n        .map(category => {\n            let isPerm = true;\n            if (category.p && !permissionFunc.canAction(category.p)) isPerm = false;\n\n            const button = document.createElement(\"button\");\n            button.className = \"btn\";\n            button.textContent = category.text;\n            button.disabled = !isPerm;\n            if (isPerm) {\n                button.onclick = () => {\n                    categorySwitcherButtonOnClick(category);\n                };\n            }\n            return button;\n        });\n\n    const categorySwitcherContainer = document.createElement(\"div\");\n    categorySwitcherContainer.className = \"settings__categorySwitcher\";\n    categoryButtons.forEach(button => {\n        categorySwitcherContainer.appendChild(button);\n    });\n\n    const rs_data = rs_dataF();\n    rs_data.container.insertAdjacentElement(\"afterbegin\", addSeparator(undefined, 20));\n    rs_data.container.insertAdjacentElement(\"afterbegin\", categorySwitcherContainer);\n}\n\nfunction categorySwitcherButtonOnClick(category: Settings_rs__CategorySwitcherButton) {\n    const updateDisplay = () => changeDisplay({ [category.name]: true });\n\n    const rs_data = rs_dataF();\n    const currentSettings = rs_data.settings;\n\n    const requiredSections = category.req;\n    if (!requiredSections) return updateDisplay();\n\n    const missingSections = requiredSections.filter(section => !currentSettings[section]);\n\n    if (missingSections.length == 0) return updateDisplay();\n\n    socket.emit(\"realm.settings.get\", rs_data.realmId, missingSections, (fetchedData) => {\n        rs_data.settings = { ...currentSettings, ...fetchedData };\n        category.render?.();\n        updateDisplay();\n    });\n}\n\n\n\n", "import hub from \"../../../hub\";\nhub(\"realmSettings\");\n\nimport Id from \"../../../types/Id\";\nimport { setData } from \"./rs_var\";\nimport { Settings } from \"./types\";\nimport { renderMeta } from \"./rs_meta\";\nimport { renderRoles } from \"./rs_roles\";\nimport { renderEmojis } from \"./rs_emoji\";\nimport { renderChannels } from \"./rs_channels\";\nimport { renderWebhooks } from \"./rs_webhooks\";\nimport { renderUserRoleManager } from \"./rs_users\";\nimport { saveSettings, exitWithoutSaving, saveAndExitSettings } from \"./rs_save\";\nimport { renderCategorySwitcher, changeDisplay } from \"./rs_nav\";\nimport LangPkg from \"../../../utils/translate\";\n\nclass RealmSettingsManager {\n    settings: Settings;\n    saveCallback: (settings: Settings) => Promise<boolean>;\n    exitCallback: () => void;\n    container: HTMLDivElement;\n    realmId: Id;\n    saveMetaSettings: () => void;\n\n    constructor(settings: Settings, realmId: Id, container: HTMLDivElement, saveCallback: (settings: Settings) => Promise<boolean>, exitCallback: () => void) {\n        this.settings = settings;\n        this.saveCallback = saveCallback;\n        this.exitCallback = exitCallback;\n        this.container = container;\n        this.realmId = realmId;\n        if (!this.settings) {\n            console.warn(\"No settings found\");\n            return;\n        }\n        this.container.innerHTML = \"\";\n\n        setData(this);\n    }\n\n    /* init gui elements */\n\n    init() {\n        if (!this.settings) return console.warn(\"No settings found\");\n\n        renderCategorySwitcher();\n\n        renderMeta();\n        renderChannels();\n        renderRoles();\n        renderUserRoleManager();\n        renderEmojis();\n        renderWebhooks();\n        changeDisplay({ meta: true });\n\n        const saveAndExitButton = document.createElement(\"button\");\n        saveAndExitButton.textContent = LangPkg.settings.save_and_exit;\n        saveAndExitButton.className = \"settings__exitButton\";\n        saveAndExitButton.onclick = () => saveAndExitSettings();\n\n        const saveButton = document.createElement(\"button\");\n        saveButton.textContent = LangPkg.settings.save;\n        saveButton.className = \"settings__exitButton\";\n        saveButton.onclick = () => saveSettings();\n\n        const exitButton = document.createElement(\"button\");\n        exitButton.textContent = LangPkg.settings.exit_without_save;\n        exitButton.className = \"settings__exitButton\";\n        exitButton.onclick = () => exitWithoutSaving();\n\n        this.container.appendChild(document.createElement(\"br\"));\n        this.container.appendChild(saveAndExitButton);\n        this.container.appendChild(saveButton);\n        this.container.appendChild(exitButton);\n        this.container.fadeIn();\n    }\n}\n\nexport default RealmSettingsManager;", "import hub from \"../../hub\";\nhub(\"settings\");\n\nimport Id from \"../../types/Id\";\nimport { mglInt } from \"../../var/mgl\";\nimport { Settings } from \"./realm/types\";\nimport debugFunc, { LogLevel } from \"../../core/debug\";\nimport settingsData from \"./settingsData\";\nimport SettingsManager from \"./settingsLib\";\nimport socket from \"../../core/socket/socket\";\nimport RealmSettingsManager from \"./realm/realmSettings\";\nconst settingDiv = document.querySelector<HTMLDivElement>(\"#settings\");\n\nconst settingsFunc = {\n    showUserSettings(){\n        new SettingsManager(\n            settingsData.user(),\n            settingDiv,\n            settingsData.userSave,\n            () => {}\n        );\n    },\n\n    showRealmSettings(settings: Settings, id: Id){\n        const settingsManager = new RealmSettingsManager(\n            settings,\n            id,\n            settingDiv,\n            (data: Settings) => {\n                return new Promise(res => {\n                    socket.emit(\"realm.settings.set\", id, data, (...errs) => {\n                        if(errs.length == 1 && errs[0] === false) return res(true);\n                        res(false);\n                        debugFunc.msg(LogLevel.ERROR, \"Error saving realm settings: \", ...errs);\n                    });\n                })\n            },\n            () => {}\n        );\n        settingsManager.init();\n    },\n}\n\nsocket.on(\"realm.settings.get\", settingsFunc.showRealmSettings);\nexport default settingsFunc;\nmglInt.settingsFunc = settingsFunc;", "import hub from \"../../hub\";\nhub(\"interact/subscribeEventChnl\");\n\nimport apis from \"../../api/apis\";\nimport { mglInt } from \"../../var/mgl\";\nimport socket from \"../../core/socket/socket\";\n\nconst subscribeEventChnl = {\n    popup: document.querySelector(\"#subscribeEventChnl\"),\n\n    init() {\n        const p = this.popup;\n        this.realms = p.querySelector(\"#subscribeEventChnl_realms\");\n        this.channels = p.querySelector(\"#subscribeEventChnl_channels\");\n        this.okBtn = p.querySelector(\"#subscribeEventChnl_subscribe\");\n        this.cancelBtn = p.querySelector(\"#subscribeEventChnl_exit\");\n    },\n\n    loadChannels() {\n        const realm = this.realms.value;\n        if (!realm) return;\n        const _this = this;\n        this.channels.innerHTML = \"\";\n\n        socket.emit(\"realm.announcement.channel.list\", realm, (data) => {\n            data.forEach((channel) => {\n                const option = document.createElement(\"option\");\n                option.value = channel.chid;\n                option.innerHTML = channel.name;\n                _this.channels.appendChild(option);\n            });\n        });\n    },\n\n    show(sourceRealmId, sourceChannelId) {\n        this.realms.innerHTML = \"\";\n        this.realms.onchange = () => this.loadChannels();\n        const _this = this;\n        socket.emit(\"realm.announcement.channel.available\", (data) => {\n            data.forEach((realm) => {\n                const option = document.createElement(\"option\");\n                option.value = realm;\n                option.innerHTML = apis.www.changeChat(realm);\n                _this.realms.appendChild(option);\n            });\n            this.loadChannels();\n        });\n\n        this.okBtn.onclick = () => {\n            const realm = this.realms.value;\n            const channel = this.channels.value;\n            if (realm && channel) {\n                socket.emit(\"realm.announcement.channel.subscribe\", sourceRealmId, sourceChannelId, realm, channel);\n                this.popup.fadeOut();\n            }\n        }\n\n        this.cancelBtn.onclick = () => {\n            this.popup.fadeOut();\n        }\n\n        this.popup.fadeIn();\n    }\n}\nsubscribeEventChnl.init();\nexport default subscribeEventChnl;\nmglInt.subscribeEventChnl = subscribeEventChnl;", "import hub from \"../../hub\";\nhub(\"interact/context\");\n\nimport uiInteract from \"./ui\";\nimport vars from \"../../var/var\";\nimport apis from \"../../api/apis\";\nimport utils from \"../../utils/utils\";\nimport uiFunc from \"../helpers/uiFunc\";\nimport coreFunc from \"../../core/coreFunc\";\nimport socket from \"../../core/socket/socket\";\nimport permissionFunc from \"../../utils/perm\";\nimport { messHTML } from \"../../var/html\";\nimport { mglInt } from \"../../var/mgl\";\nimport messInteract from \"../../core/mess/interact\";\nimport subscribeEventChnl from \"../interact/subscribeEventChnl\";\nimport { Context__channel, Context__message, Context__realm, Context__thread } from \"../../types/context\";\nimport LangPkg, { langFunc } from \"../../utils/translate\";\n\nconst contextFunc = {\n    message(type: Context__message) {\n        const id = document.querySelector(\"#message_context_menu\").getAttribute(\"_id\");\n        switch (type) {\n            case \"copy\":\n                const message = document.querySelector(\"#mess__\" + id + \" .mess_content\").getAttribute(\"_plain\");\n                utils.writeToClipboard(message).then(ok => {\n                    if (ok) uiFunc.uiMsgT(LangPkg.ui.copied);\n                });\n                break;\n            case \"edit\":\n                uiInteract.editMess(id);\n                break;\n            case \"delete\":\n                uiInteract.deleteMess(id);\n                break;\n            case \"reply\":\n                vars.temp.replyId = id;\n                messHTML.replyClose.style.display = \"block\";\n                (document.querySelector(\"#mess__\" + id) as HTMLElement).style.backgroundColor = \"var(--panel)\";\n                break;\n            case \"copy_id\":\n                utils.writeToClipboard(id).then(ok => {\n                    if (ok) uiFunc.uiMsgT(LangPkg.ui.copied);\n                })\n                break;\n            case \"add_reaction\":\n                const chnl = vars.chat.chnl;\n                if (chnl) {\n                    if (!vars.realm.chnlPerms[chnl].react) return uiFunc.uiMsgT(LangPkg.ui.message.no_react, [\"!\"]);\n                }\n                messInteract.emocjiPopup((e) => {\n                    if (!e) return;\n                    socket.emit(\"message.react\", vars.chat.to, id, e);\n                });\n                break;\n            case \"pin\":\n            case \"unpin\":\n                socket.emit(\"message.pin\", vars.chat.to, vars.chat.chnl, id, type === \"pin\");\n                break;\n            case \"create_thread\":\n                uiInteract.createThread(id);\n                break;\n            default:\n                const n: never = type;\n                console.error(n);\n        }\n    },\n\n    async realm(type: Context__realm) {\n        const id = document.querySelector(\"#realm_context_menu\").getAttribute(\"_id\");\n        switch (type) {\n            case \"copy_id\":\n                utils.writeToClipboard(id).then(ok => {\n                    if (ok) uiFunc.uiMsgT(LangPkg.ui.copied);\n                });\n                break;\n            case \"copy_invite\":\n                // socket.emit(\"getInviteLink\", id);\n                const link = location.protocol + \"//\" + location.host + \"/ir?id=\" + id;\n                utils.writeToClipboard(link).then(ok => {\n                    if (ok) uiFunc.uiMsgT(LangPkg.ui.copied);\n                });\n                break;\n            case \"exit\":\n                const conf = await uiFunc.confirm(langFunc(LangPkg.ui.confirm.exit_realm, apis.www.changeChat(id)) + \"?\");\n                if (conf) {\n                    socket.emit(\"realm.exit\", id);\n                    coreFunc.changeChat(\"main\");\n                }\n                break;\n            case \"mute\":\n                const realm = vars.realms.find(g => g.realm == id);\n                if (!realm) return;\n\n                let muted = false;\n                let endTime: string;\n                if (realm.muted != undefined) {\n                    if (realm.muted == -1) {\n                        muted = false;\n                    } else if (realm.muted == 0) {\n                        muted = true;\n                    } else if (realm.muted > new Date().getTime()) {\n                        muted = true;\n                        endTime = new Date(realm.muted).toLocaleString();\n                    } else {\n                        muted = false;\n                    }\n                }\n\n                const muteStatus = muted ? LangPkg.ui.muted : LangPkg.ui.unmuted;\n                let endTimeText = '';\n\n                if (muted) {\n                    if (realm.muted === 0) {\n                        endTimeText = LangPkg.ui.mute.is_permanent;\n                    } else if (realm.muted > new Date().getTime()) {\n                        const endTime = new Date(realm.muted).toLocaleString();\n                        endTimeText = langFunc(LangPkg.ui.mute.ends_at, endTime);\n                    }\n                }\n\n                const text = `\n                    ${langFunc(LangPkg.ui.mute.realm, apis.www.changeChat(id))}\n                    <br />\n                    ${LangPkg.ui.status}: ${muteStatus}\n                    ${endTimeText ? \"<br />\" + endTimeText : ''}\n                `;\n\n                const durations = LangPkg.ui.durations;\n                uiFunc.selectPrompt(\n                    text,\n                    [\n                        durations.minutes15,\n                        durations.hour1,\n                        durations.day1,\n                        durations.permanently,\n                        LangPkg.ui.mute.unmute,\n                        LangPkg.uni.cancel\n                    ],\n                ).then(value => {\n                    if (!value) return;\n\n                    const now = new Date();\n                    let targetTime = -1;\n                    switch (value) {\n                        case durations.minutes15:\n                            now.setMinutes(now.getMinutes() + 15);\n                            targetTime = now.getTime();\n                            break;\n                        case durations.hour1:\n                            now.setHours(now.getHours() + 1);\n                            targetTime = now.getTime();\n                            break;\n                        case durations.day1:\n                            now.setDate(now.getDate() + 1);\n                            targetTime = now.getTime();\n                            break;\n                        case durations.permanently:\n                            targetTime = 0;\n                            break;\n                        case LangPkg.ui.mute.unmute:\n                            targetTime = -1;\n                            break;\n                        case LangPkg.uni.cancel:\n                            return;\n                    }\n\n                    socket.emit(\"realm.mute\", id, targetTime);\n                    realm.muted = targetTime;\n                });\n                break;\n            case \"settings\":\n                socket.emit(\"realm.settings.get\", id)\n                break;\n            default:\n                const n: never = type;\n                console.error(n);\n        }\n    },\n\n    channel(type: Context__channel) {\n        const id = document.querySelector(\"#channel_context_menu\").getAttribute(\"_id\");\n        switch (type) {\n            case \"copy_id\":\n                utils.writeToClipboard(id).then(ok => {\n                    if (ok) uiFunc.uiMsgT(LangPkg.ui.copied);\n                });\n                break;\n            case \"subscribe\":\n                subscribeEventChnl.show(vars.chat.to, id);\n                break;\n            case \"create_thread\":\n                uiInteract.createThread();\n                break;\n            default:\n                const n: never = type;\n                console.error(n);\n        }\n    },\n\n    async thread(type: Context__thread) {\n        const id = document.querySelector(\"#thread_context_menu\").getAttribute(\"_id\");\n        switch (type) {\n            case \"copy_id\":\n                utils.writeToClipboard(id).then(ok => {\n                    if (ok) uiFunc.uiMsgT(LangPkg.ui.copied);\n                });\n                break;\n            case \"delete\":\n                const conf = await uiFunc.confirm(LangPkg.ui.confirm.delete_thread + \"?\");\n                if (!conf) return;\n\n                const thread = vars.realm.threads.find(t => t._id == id);\n                if (!thread) return;\n\n                if (vars.user._id !== thread.author && !permissionFunc.isAdmin()) return;\n                socket.emit(\"realm.thread.delete\", vars.chat.to, id);\n\n                document.querySelector(\"#channel_\\\\&\" + thread._id)?.remove();\n                document.querySelector(\"#thread__\" + thread._id)?.remove();\n                if (vars.chat.chnl == \"&\" + thread._id) {\n                    coreFunc.changeChnl(thread.thread);\n                }\n                break;\n            default:\n                const n: never = type;\n                console.error(n);\n        }\n    }\n}\n\nmglInt.contextFunc = contextFunc;\nexport default contextFunc;\n", "import hub from \"../../hub\";\nhub(\"interact/relations\");\n\nimport Id from \"../../types/Id\";\nimport uiFunc from \"../helpers/uiFunc\";\nimport socket from \"../../core/socket/socket\";\nimport { otherHTML } from \"../../var/html\";\nimport { mglVar } from \"../../var/mgl\";\nimport LangPkg from \"../../utils/translate\";\n\nconst makeRealmDiv = otherHTML.makeRealm;\n\nconst buttonFunc = {\n    async addDm() {\n        const to = await uiFunc.prompt(LangPkg.ui.enter_dm);\n        if (!to) return;\n        socket.emit(\"dm.create\", to);\n    },\n\n    async createRealm() {\n        makeRealmDiv.fadeOut();\n        const name = await uiFunc.prompt(LangPkg.ui.create_realm_name);\n        if (!name) return;\n        socket.emit(\"realm.create\", name);\n        setTimeout(() => {\n            socket.emit(\"realm.get\");\n        }, 1500);\n    },\n\n    async joinRealm() {\n        makeRealmDiv.fadeOut();\n        let id = await uiFunc.prompt(LangPkg.ui.enter_realm_invite) as Id;\n        if (!id) return;\n\n        id = id\n            .replace(location.protocol + \"//\", \"\")\n            .replace(location.host, \"\")\n            .replace(\"/ir?id=\", \"\");\n\n        socket.emit(\"realm.join\", id);\n    },\n}\n\nexport default buttonFunc;\nmglVar.buttonFunc = buttonFunc;", "import hub, { reqButNotReg, regButNotReq, getReg, getReq } from \"../hub\";\nhub(\"start\");\n\nimport debugFunc, { LogLevel } from \"../core/debug\";\nimport apis from \"../api/apis\";\nimport coreFunc from \"../core/coreFunc\";\nimport socket from \"../core/socket/socket\";\nimport stateManager from \"../ui/helpers/stateManager\";\nimport { init_translate } from \"../utils/translate\";\n\ndebugFunc.init();\nawait apis.app.init();\n\ncoreFunc.changeChat(\"main\");\nawait init_translate();\nsocket.connect();\n\nsetTimeout(async () => {\n    await stateManager.handleGetParam();\n    stateManager.removeControlParams();\n}, 3000);\n\nsetTimeout(async () => {\n    const unexpected = regButNotReq();\n    const unregistered = reqButNotReg();\n    const reg = getReg().length;\n    const req = getReq().length;\n    debugFunc.msg(LogLevel.INFO, `Loaded ${reg}/${req} (${Math.round(reg/req*100)}%) modules.`);\n    if(unexpected.length > 0) debugFunc.msg(LogLevel.WARN, \"Unexpected modules:\", unexpected);\n    if(unregistered.length > 0) debugFunc.msg(LogLevel.WARN, \"Unregistered modules:\", unregistered);\n}, 1000);", "import hub from \"../hub\";\nhub(\"warning\");\n\nimport debugFunc from \"../core/debug\";\nimport LangPkg from \"../utils/translate\";\n\n(function () {\n    if (debugFunc.isDebug) return;\n    const lang = LangPkg.common.console_warning;\n\n    const csss = [\n        \"60px;color:gold\",\n        \"20px\",\n        \"20px;color:red\",\n        \"20px\",\n    ];\n\n    csss.forEach((css, i) => {\n        console.log(`%c${lang[\"w\"+(i+1)]}`, `font-size:${css}`);\n    });\n})();", "// init\nawait import(\"./init/init.js\");\nawait import(\"./var/var.js\");\nawait import(\"./var/html.js\");\n\n// features\nawait import(\"./core/socket/socket.js\");\nawait import(\"./core/socket/evt.js\");\nawait import(\"./core/socket/engine.js\")\nawait import(\"./core/mess/messSocket.js\");\nawait import(\"./core/mess/listeners.js\");\nawait import(\"./init/features.js\");\nawait import(\"./ui/components/media.js\");\nawait import(\"./ui/components/voice.js\");\nawait import(\"./ui/settings/settings.js\");\n\n// ui interact\nawait import(\"./ui/interact/context.js\");\nawait import(\"./ui/interact/mainView.js\");\nawait import(\"./ui/interact/relations.js\");\nawait import(\"./ui/interact/subscribeEventChnl.js\");\n\n// start app\nawait import(\"./init/start.js\");\nawait import(\"./common/warning.js\");\n\nexport {};"],
  "mappings": "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",
  "names": ["cw", "core_default", "init_core", "__esmMin", "ms", "res", "v", "event", "fn", "style", "val", "att", "arg", "className", "from", "options", "time", "cb", "steps", "timeToStep", "d", "index", "interval", "display", "child", "min", "max", "a", "b", "factor", "url", "xhr", "required", "registered", "hub_default", "reqButNotReg", "regButNotReq", "getReq", "getReg", "init_hub", "__esmMin", "__name", "name", "module", "init_exports", "init_init", "__esmMin", "init_core", "init_hub", "hub_default", "core_default", "time", "mglInt", "mglVar", "init_mgl", "__esmMin", "var_exports", "__export", "var_default", "getEmptyRealmConfig", "vars", "init_var", "__esmMin", "init_hub", "init_mgl", "hub_default", "mglVar", "__name", "html_exports", "__export", "coreHTML", "emojiHTML", "mainViewHTML", "messHTML", "mglHTML", "navHTML", "otherHTML", "renderHTML", "voiceHTML", "qd", "selector", "container", "mess", "nav", "core", "render", "events", "mainView", "div", "other", "voice", "emoji", "init_html", "__esmMin", "init_hub", "hub_default", "__name", "socket_exports", "__export", "socket_default", "socket", "init_socket", "__esmMin", "init_hub", "init_mgl", "hub_default", "mglVar", "permissionFunc", "perm_default", "init_perm", "__esmMin", "init_hub", "init_var", "hub_default", "userPermissions", "requiredPermissions", "permission", "permissions", "var_default", "apiVars", "api_default", "init_api", "__esmMin", "init_hub", "init_mgl", "hub_default", "mglVar", "setCurrentCmd", "cmd", "currentCmd", "barc__commads", "messCmds", "messCmd", "cmd_default", "init_cmd", "__esmMin", "init_hub", "init_style", "init_var", "init_coreFunc", "init_socket", "init_html", "init_translate", "init_uiFunc", "init_perm", "init_api", "hub_default", "messHTML", "msg", "args", "query", "socket_default", "var_default", "embed", "userIsMod", "perm_default", "msgs", "container", "id", "category", "key", "__name", "cmdName", "availableCmds", "allCmds", "allCmdsNames", "name", "style_default", "coreFunc_default", "categoryDiv", "ul", "cmdLi", "selectCmd", "e", "tab", "data", "exitCode", "argsVal", "argsObj", "i", "arg", "val", "h", "m", "idToName", "api_default", "usersMap", "uiFunc_default", "translate_default", "map", "valKey", "cmdArgs", "firstTabEle", "argsList", "index", "argItem", "typeDesc", "ele", "opt", "option", "argList", "create", "value", "span", "indexMap", "media_exports", "__export", "MediaPopup", "media_default", "createMediaPopup", "media", "options", "mediaPopupDiv", "init_media", "__esmMin", "init_hub", "init_translate", "init_mgl", "hub_default", "__name", "container", "url", "isVideo", "controls", "lang", "translate_default", "sliders", "group", "ctrl", "button", "property", "icon", "min", "max", "sliderContainer", "iconSpan", "slider", "defaultValue", "value", "e", "target", "delta", "touches", "t", "touch", "now", "lastTap", "lastTapPosition", "currentDistance", "currentRotation", "scale", "rotation", "zoomFactor", "angle", "scaleFactor", "centerX", "centerY", "newScale", "r", "_this", "dx", "dy", "p1", "p2", "mglInt", "format_media", "link", "check", "xhr", "__name", "ele", "media_default", "extractYouTubeVideoId", "match", "videoId", "iframe", "extractTikTokVideoId", "regex", "post", "core_default", "title", "author", "extractSpotifyId", "trackMatch", "playlistMatch", "init_media", "__esmMin", "init_core", "init_hub", "hub_default", "format_list", "list_default", "init_list", "__esmMin", "init_hub", "hub_default", "lines", "result", "spacePerLvl", "line", "index", "spaces", "prevSpaces", "fixedSpaces", "lvl", "linesWithLevels", "listItemRegex", "root", "stack", "getBulletType", "trimmed", "__name", "trimmedLine", "bulletType", "node", "tree", "marginValue", "marginUnits", "html", "listMapOl", "listEnd", "processNode", "listTag", "content", "child", "text", "levels", "format_wrapTable", "tableText", "rows", "htmlTable", "row", "index", "columns", "cell", "column", "init_table", "__esmMin", "init_hub", "hub_default", "__name", "format_text", "text", "excludePattern", "excludeMatches", "exclusions", "match", "exclusion", "placeholder", "format_wrapTable", "markCpu", "list_default", "i", "emojiId", "var_default", "marker", "htmlTag", "result", "isInsideMarker", "tempBuffer", "init_text", "__esmMin", "init_hub", "init_var", "init_list", "init_table", "hub_default", "__name", "isEmojiMessage", "mess_plain", "div", "isNativeEmoji", "isCustomEmoji", "img", "notLoaded", "__name", "formatFunc", "format_default", "init_format", "__esmMin", "init_hub", "init_media", "init_text", "hub_default", "mess", "format_text", "elements", "element", "text", "regex", "matches", "link", "format_media", "ele", "fileFunc", "file_default", "init_file", "__esmMin", "init_hub", "init_uiFunc", "init_debug", "init_translate", "hub_default", "options", "file", "callback", "maxSize", "maxName", "endpoint", "uiFunc_default", "translate_default", "reader", "xhr", "token", "formData", "opt", "__name", "debug_default", "id", "realmId", "opts", "emojiData", "customEmoji", "emojiFunc", "emoji_default", "init_emoji", "__esmMin", "init_core", "init_hub", "init_html", "init_mgl", "init_var", "hub_default", "core_default", "searchEmojiName", "categories", "maths", "processEmoji", "cid", "emojiName", "k", "__name", "category", "emoji", "input", "emojiHTML", "navButton", "catDiv", "catContainer", "emojiDiv", "var_default", "target", "event", "mglVar", "messInteract", "interact_default", "init_interact", "__esmMin", "init_hub", "init_mess", "init_style", "init_var", "init_apis", "init_coreFunc", "init_socket", "init_uiFunc", "init_cmd", "init_html", "init_mgl", "init_emoji", "init_translate", "hub_default", "messHTML", "var_default", "coreFunc_default", "style_default", "url", "urlParts", "uiFunc_default", "translate_default", "urlColored", "end", "__name", "handleYesClick", "cb", "emojiHTML", "evt", "e", "emoji_default", "to", "socket_default", "emojis", "customEmoji", "emoji", "emoticon", "setCurrentCmd", "messCmds", "cmd_default", "m", "mess_default", "thread", "messDiv", "_id", "name", "author", "div", "apis_default", "mglInt", "contextMenuLib", "contextMenuLib_default", "init_contextMenuLib", "__esmMin", "init_hub", "hub_default", "ele", "e", "_handleClick", "_click", "__name", "_removeClick", "doc", "x", "y", "w", "h", "width", "height", "convertTouchEventToMouseEvent", "touchEvent", "touch", "getByDataIdStyle", "ele", "id", "setDisplayByDataId", "display", "canUserManageRealm", "requiredPermissions", "perm", "var_default", "realm", "perm_default", "contextMenu", "contextMenu_default", "init_contextMenu", "__esmMin", "init_hub", "init_contextMenuLib", "init_perm", "init_utils", "init_var", "hub_default", "contextMenuLib_default", "opts", "thread", "permToDelete", "div", "call", "conditionCb", "utils_default", "e", "time", "holdTimeout", "startHold", "cancelHold", "mouseEvent", "__name", "staticData", "staticData_default", "init_staticData", "__esmMin", "init_hub", "hub_default", "format_embed", "embedData", "messDiv", "embedContainer", "customFieldsContainer", "key", "value", "fieldContainer", "fieldName", "fieldValue", "init_embed", "__esmMin", "init_hub", "hub_default", "__name", "format_responeMess", "mess_id", "div", "mess", "messContent", "resMsgDiv", "init_respone", "__esmMin", "init_hub", "hub_default", "__name", "maxMessLen", "editMessText", "messFunc", "mess_default", "init_mess", "__esmMin", "init_hub", "init_cmd", "init_var", "init_style", "init_apis", "init_format", "init_coreFunc", "init_utils", "init_socket", "init_file", "init_interact", "init_html", "init_mgl", "init_contextMenu", "init_perm", "init_staticData", "init_embed", "init_respone", "hub_default", "var_default", "mess", "messHTML", "socket_default", "interact_default", "data", "cmd_default", "coreFunc_default", "style_default", "scroll", "up", "messDiv", "fromDiv", "fromDivImg", "fromDivText", "fromDivTextName", "apis_default", "timeDiv", "utils_default", "messContentDiv", "format_default", "replacer", "format_embed", "reactsDiv", "keys", "key", "users", "span", "isScrollAtBottom", "format_responeMess", "contextMenu_default", "e", "isMessPinned", "m", "canDelete", "perm_default", "target", "staticData_default", "f", "read", "input", "file", "opt", "__name", "xhr", "path", "file_default", "mglVar", "input", "messStyle", "style_default", "init_style", "__esmMin", "init_hub", "init_html", "init_utils", "init_var", "init_apis", "init_mess", "hub_default", "messHTML", "len", "prop", "maxMessLen", "getTimeFromMess", "mess", "id", "utils_default", "__name", "delayTime", "messages", "i", "message", "messageBefore", "messageFrom_author", "messageBeforeFrom_author", "time", "timeBefore", "messageFromText", "roles", "var_default", "users", "userColor", "author", "user", "color", "reactsDiv", "span", "u", "apis_default", "position", "renderState", "init_var", "__esmMin", "init_hub", "hub_default", "updateUserProfileMarker", "id", "status", "elements", "ele", "init_userStatusMarker", "__esmMin", "__name", "render_realm", "realm_default", "init_realm", "__esmMin", "init_hub", "init_var", "init_apis", "init_utils", "init_coreFunc", "init_socket", "init_contextMenu", "init_html", "init_userStatusMarker", "init_api", "hub_default", "data", "renderHTML", "var_default", "realm", "id", "realmDiv", "apis_default", "coreFunc_default", "contextMenu_default", "e", "navHTML", "roles", "users", "userColor", "getColor", "user", "u", "i", "color", "__name", "userID", "isBot", "userDiv", "socket_default", "userImg", "textContainer", "nameDiv", "activityDiv", "updateUserProfileMarker", "api_default", "ele", "utils_default", "act", "renderUtils", "utils_default", "init_utils", "__esmMin", "init_hub", "init_api", "hub_default", "data", "sortedData", "a", "b", "la", "api_default", "lb", "popup", "closePopup", "__name", "cb", "initialValue", "newValue", "dataTemp", "UserStateManager", "userStateManager_default", "init_userStateManager", "__esmMin", "init_api", "init_realm", "init_userStatusMarker", "init_utils", "api_default", "id", "cb", "__name", "utils_default", "realm_default", "updateUserProfileMarker", "data", "status", "statusText", "activity", "openDB", "resolve", "reject", "request", "db", "saveToDB", "entry", "putRequest", "getFromDB", "id", "getRequest", "SocketController", "socketGeneral_default", "init_socketGeneral", "__esmMin", "init_socket", "init_hub", "hub_default", "__name", "evtName", "cb", "socket_default", "key", "data", "customCb", "socketReturnData", "cachedData", "mainView_exports", "__export", "mainView_default", "mainViewInteract", "init_mainView", "__esmMin", "init_hub", "init_uiFunc", "init_socket", "init_html", "init_mgl", "init_translate", "init_var", "hub_default", "mainViewHTML", "friend", "uiFunc_default", "translate_default", "socket_default", "page", "user_id", "accept", "div", "var_default", "e", "mglInt", "init_socket", "__esmMin", "render_user", "user_default", "init_user", "__esmMin", "init_hub", "init_var", "init_apis", "init_utils", "init_coreFunc", "init_socket", "init_mainView", "init_html", "init_translate", "init_userStatusMarker", "init_userStateManager", "hub_default", "navHTML", "apis_default", "var_default", "updateUserProfileMarker", "data", "targetIsMe", "imgLink", "renderHTML", "userStateManager_default", "friendBtn", "friendBtnText", "translate_default", "mainView_default", "coreFunc_default", "btns", "blockBtn", "socket_default", "openDmBtn", "activityDiv", "act", "utils_default", "update", "time", "hours", "minutes", "seconds", "timeP", "__name", "interval", "voice_exports", "__export", "voice_default", "voiceFuncVar", "voiceFunc", "init_voice", "__esmMin", "init_hub", "init_html", "init_mgl", "init_socket", "init_apis", "init_uiFunc", "init_var", "init_translate", "init_debug", "hub_default", "voiceHTML", "stream", "error", "to", "socket_default", "translate_default", "buffer", "mediaRecorder", "event", "debug_default", "apis_default", "track", "id", "var_default", "uiFunc_default", "langFunc", "audio", "video", "getUserMedia", "options", "webkitGetUserMedia", "resolve", "reject", "mozGetUserMedia", "__name", "selectDevice", "devices", "prompt", "labels", "device", "deviceIds", "selectedIndex", "permissions", "audioDevices", "videoDevices", "audioOptions", "videoOptions", "mediaStream", "from", "data", "blob", "url", "users", "user", "li", "userOffline", "isConfirm", "room", "answer", "mglVar", "render_events", "event_default", "init_event", "__esmMin", "init_hub", "init_var", "init_apis", "init_mgl", "init_voice", "init_translate", "init_socket", "init_perm", "init_format", "init_html", "init_realmInit", "init_uiFunc", "hub_default", "var_default", "socket_default", "events", "renderHTML", "perm_default", "navHTML", "event", "type", "where", "topic", "timeShort", "desc", "img", "_id", "author", "time", "eventTime", "eventDiv", "translate_default", "apis_default", "info", "eventDesc", "format_default", "button", "uiFunc_default", "div", "addZero", "num", "__name", "cutdown", "interval", "updateCutdown", "now", "diff", "voice_default", "hours", "minutes", "seconds", "joinBtn", "isUserJoined", "u", "renderJoinedUsers", "usersCount", "usersShow", "users", "user", "userDiv", "container", "createLabel", "text", "forId", "label", "br", "t", "option", "whereRender", "whereOptions", "renderWhereOptions", "input", "chnl", "id", "name", "getChannelTypeEmoticon", "details", "category", "submit", "req", "mglInt", "initRealmState", "permission", "var_default", "createRealmNameSection", "name", "sid", "navHTML", "nameText", "addUsersDisplayButton", "addMenuButton", "usersDisplayBtn", "toggleUserDisplay", "renderState", "menuBtn", "e", "contextMenu_default", "createChannel", "channel", "root", "type", "desc", "cid", "btn", "handleChannelClick", "typeEmoticon", "getChannelTypeEmoticon", "coreFunc_default", "handleVoiceChannelJoin", "chnl", "uiFunc_default", "translate_default", "voice_default", "createCategory", "category", "detail", "summary", "findFirstTextChannel", "categories", "cat", "textChannel", "downPanel", "downPanel_events", "panel", "events", "event_default", "socket_default", "len", "realmInit", "socketEvt", "realmInit_default", "init_realmInit", "__esmMin", "init_hub", "init_var", "init_uiFunc", "init_coreFunc", "init_voice", "init_html", "init_contextMenu", "init_translate", "init_socket", "init_event", "init_engine", "hub_default", "__name", "render_dm", "dm_default", "init_dm", "__esmMin", "init_hub", "init_html", "init_var", "init_coreFunc", "init_utils", "init_apis", "init_socket", "init_userStatusMarker", "init_api", "hub_default", "navHTML", "utils_default", "var_default", "id", "privDiv", "structDiv", "profileImg", "apis_default", "coreFunc_default", "e", "socket_default", "updateUserProfileMarker", "api_default", "cl", "l", "unreadPriv", "data", "blocked", "priv", "d", "getIdbProxyableTypes", "idbProxyableTypes", "getCursorAdvanceMethods", "cursorAdvanceMethods", "promisifyRequest", "request", "promise", "resolve", "reject", "unlisten", "__name", "success", "error", "wrap", "reverseTransformCache", "cacheDonePromiseForTransaction", "tx", "transactionDoneMap", "done", "complete", "replaceTraps", "callback", "idbProxyTraps", "wrapFunction", "func", "args", "unwrap", "transformCachableValue", "value", "instanceOfAny", "transformCache", "newValue", "openDB", "name", "version", "blocked", "upgrade", "blocking", "terminated", "openPromise", "event", "db", "getMethod", "target", "prop", "cachedMethods", "targetFuncName", "useIndex", "isWrite", "writeMethods", "readMethods", "method", "storeName", "iterate", "cursor", "proxiedCursor", "cursorIteratorTraps", "ittrProxiedCursorToOriginalProxy", "advanceResults", "isIteratorProp", "advanceMethodProps", "methodMap", "init_build", "__esmMin", "object", "constructors", "c", "receiver", "oldTraps", "cachedFunc", "getDB", "upgrade", "database", "version", "newDB", "openDB", "DB_NAME", "upgraded", "createCollection", "collection", "db", "enforceChannelCacheLimit", "chat", "chnl", "tx", "store", "messages", "a", "b", "utils_default", "excess", "i", "MessageCacheController", "messageCacheController", "mess_default", "init_mess", "__esmMin", "init_utils", "init_var", "init_build", "__name", "message", "msg", "to", "var_default", "data", "message_fetch", "id", "ids", "time", "chatId", "existingMessage", "updatedMessage", "mess", "data", "api_default", "mess_default", "convertReceivedMessageToDbMessage", "isPrivateChat", "currentChatIsDM", "var_default", "isSenderCurrentUser", "title", "langFunc", "translate_default", "apis_default", "uiFunc_default", "utils_default", "dm_default", "style_default", "socket_default", "message_fetch", "e", "div", "messHTML", "coreFunc_default", "message_delete", "id", "chatId", "messages_delete", "ids", "message_edit", "msg", "time", "messageDiv", "format_default", "editMessText", "message_react", "uid", "realm", "messId", "react", "reactSpan", "span", "users", "u", "message_search", "message_fetch_pinned", "realm_thread_list", "chnlDiv", "contextMenu_default", "interact_default", "realm_thread_delete", "init_mess", "__esmMin", "init_hub", "init_socket", "init_var", "init_apis", "init_coreFunc", "init_utils", "init_style", "init_format", "init_html", "init_dm", "init_interact", "init_uiFunc", "init_contextMenu", "init_translate", "init_api", "hub_default", "__name", "engine_exports", "__export", "socketEvt", "eventsBuilder", "init_engine", "__esmMin", "init_socketGeneral", "init_evt", "init_realm", "init_user", "init_realmInit", "init_dm", "init_mainView", "init_hub", "init_mess", "hub_default", "self_status_get", "realm_users_sync", "realm_users_activity_sync", "realm_event_notify", "user_status_update", "dm_default", "realm_default", "realmInit_default", "user_default", "friend_get_all", "friend_requests_get", "message_fetch_pinned", "realm_thread_list", "eventName", "handler", "socketGeneral_default", "friend_get_all", "friends", "var_default", "mainView", "friend_requests_get", "requests", "mainView_default", "init_mainView", "__esmMin", "init_hub", "init_var", "init_html", "init_coreFunc", "init_apis", "init_socket", "init_uiFunc", "init_translate", "init_userStatusMarker", "init_api", "init_userStateManager", "init_engine", "hub_default", "socket_default", "mainViewHTML", "friend", "friendDiv", "apis_default", "e", "socketEvt", "coreFunc_default", "userStateManager_default", "page", "status", "visibleCount", "friendStatus", "request", "requestDiv", "showUser", "__name", "updateUserProfileMarker", "api_default", "uiFunc_default", "langFunc", "translate_default", "from", "text", "accept", "render_forum", "forums", "chnlId", "container", "addBtn", "translate_default", "name", "uiFunc_default", "socket_default", "var_default", "id", "coreFunc_default", "forum", "div", "apis_default", "realm_thread_list", "messHTML", "init_forum", "__esmMin", "init_apis", "init_coreFunc", "init_mess", "init_socket", "init_translate", "init_html", "init_var", "init_uiFunc", "__name", "coreFunc", "coreFunc_default", "init_coreFunc", "__esmMin", "init_hub", "init_var", "init_apis", "init_utils", "init_socket", "init_style", "init_mainView", "init_emoji", "init_html", "init_mgl", "init_staticData", "init_translate", "init_dm", "init_forum", "init_engine", "init_mess", "hub_default", "id", "chnl", "messHTML", "customEmoji", "var_default", "getEmptyRealmConfig", "staticData_default", "navHTML", "mainViewHTML", "mainView_default", "utils_default", "apis_default", "rawId", "data", "res", "socket_default", "blocked", "dm_default", "renderState", "socketEvt", "e", "coreHTML", "permToWrite", "tid", "thread", "t", "translate_default", "end", "style_default", "tmp", "mess_default", "ele", "to", "set", "text", "disabled", "__name", "block", "forms", "r", "render_forum", "mglVar", "KeyState", "keys_default", "init_keys", "__esmMin", "init_hub", "hub_default", "uiInteract", "ui_default", "init_ui", "__esmMin", "init_hub", "init_var", "init_html", "init_coreFunc", "init_style", "init_socket", "init_uiFunc", "init_keys", "init_translate", "init_engine", "hub_default", "id", "messageDiv", "message", "messHTML", "var_default", "coreFunc_default", "style_default", "text", "div", "translate_default", "textarea", "btn", "promptDiv", "messId", "to", "chnl", "name", "uiFunc_default", "socket_default", "socketEvt", "keys_default", "utils", "utils_default", "init_utils", "__esmMin", "init_hub", "init_apis", "init_ui", "hub_default", "id", "timePart", "unixTimestamp", "date", "day", "month", "year", "hours", "minutes", "text", "resolve", "ui_default", "title", "body", "payload", "apis_default", "notification", "selector", "obj", "langFunc", "text", "data", "match", "init_translate", "ele", "LangRef", "core_default", "lang", "navigatorLang", "langIndex", "load_translate", "LocalLangPkg", "importData", "key", "LangPkg", "translateHTML", "getDataByKey", "keyChain", "keys", "utils_default", "pkg", "translate_default", "__esmMin", "init_hub", "init_core", "init_utils", "hub_default", "__name", "errMessesDiv", "promptDiv", "uiFunc", "uiFunc_default", "init_uiFunc", "__esmMin", "init_hub", "init_debug", "init_translate", "hub_default", "message", "opts", "div", "padding", "topPosition", "calculateTopPosition", "top", "child", "__name", "ended", "end", "childE", "currentTop", "data", "debug_default", "speed", "msgOpts", "text", "lastText", "langFunc", "defaultValue", "resolve", "input", "e", "btn", "yesText", "translate_default", "noText", "accept", "flex", "reject", "options", "optionsValues", "categories", "select", "i", "category", "selectElement", "j", "optionElement", "inputType", "min", "max", "changeCodeToString", "code", "category", "InternalCodeCategory", "subcategory", "InternalCodeSubcategory", "translate_default", "code_default", "init_code", "__esmMin", "init_translate", "__name", "web_exports", "__export", "send", "init_web", "__esmMin", "init_uiFunc", "__name", "data", "uiFunc_default", "stateManager", "stateManagerFunc", "stateManager_default", "init_stateManager", "__esmMin", "init_hub", "init_apis", "init_coreFunc", "init_socket", "init_utils", "init_var", "init_uiFunc", "init_translate", "init_event", "init_mainView", "hub_default", "type", "data", "fn", "arr", "val", "params", "ctrls", "key", "value", "prefix", "numStr", "num", "a", "b", "getParam", "newParams", "newUrl", "path", "var_default", "url", "utils_default", "ok", "uiFunc_default", "translate_default", "id", "coreFunc_default", "ids", "chat", "chnl", "langFunc", "apis_default", "socket_default", "event_default", "mainView_default", "ele_exports", "__export", "receiveMessage", "send", "electronApiDiv", "init_ele", "__esmMin", "init_var", "init_debug", "init_socket", "init_stateManager", "__name", "data", "debug_default", "var_default", "state", "socket_default", "ctrl", "c", "stateManager_default", "rn_exports", "__export", "receiveAudio", "receiveMessage", "send", "processMediaRN", "init_rn", "__esmMin", "init_socket", "init_debug", "init_stateManager", "__name", "data", "debug_default", "socket_default", "ctrl", "c", "stateManager_default", "track", "base64", "binaryString", "len", "bytes", "i", "wavDataBuffer", "audioBuffer", "source", "error", "base64WavData", "token", "if_exports", "__export", "send", "init_if", "__esmMin", "init_uiFunc", "__name", "data", "uiFunc_default", "apis", "apis_default", "init_apis", "__esmMin", "init_hub", "init_debug", "init_uiFunc", "init_var", "init_mgl", "init_core", "init_translate", "init_code", "init_api", "hub_default", "id", "chat", "var_default", "temp", "api_default", "data", "issetData", "name", "url", "dataS", "core_default", "uiFunc_default", "translate_default", "code_default", "debug_default", "dev", "path", "devices", "__name", "mglVar", "debugFunc", "debug_default", "init_debug", "__esmMin", "init_hub", "init_apis", "init_mgl", "hub_default", "apis_default", "level", "data", "mglInt", "info", "warn", "error", "socketError", "lvl", "connect", "debug_default", "socket_default", "error", "evt_name", "data", "first", "uiFunc_default", "translate_default", "code_default", "error_valid", "evt", "name", "error_spam", "type", "pkg", "text", "connect_error", "dataStr", "timeMath", "param", "system_refreshToken", "newToken", "cb", "refreshData", "settings", "moreData", "events", "realm", "chnl", "wait", "var_default", "self_status_get", "status", "user_default", "message_mark_read", "to", "id", "api_default", "dm_default", "realm_users_sync", "users", "roles", "realm_default", "realm_users_activity_sync", "userActivity", "user", "uid", "activity", "userStateManager_default", "realm_event_notify", "topic", "langFunc", "apis_default", "__name", "coreFunc_default", "event_default", "user_status_update", "init_evt", "__esmMin", "init_hub", "init_socket", "init_var", "init_debug", "init_apis", "init_coreFunc", "init_dm", "init_uiFunc", "init_user", "init_realm", "init_event", "init_translate", "init_code", "init_api", "init_userStateManager", "hub_default", "evt_exports", "init_evt", "__esmMin", "init_hub", "init_socket", "hub_default", "socket_default", "connect", "error", "error_valid", "error_spam", "connect_error", "system_refreshToken", "refreshData", "messSocket_exports", "init_messSocket", "__esmMin", "init_hub", "init_socket", "init_mess", "init_evt", "init_var", "hub_default", "socket_default", "mess", "message_fetch", "data", "mess_default", "var_default", "message_delete", "messages_delete", "message_edit", "message_react", "message_search", "realm_thread_delete", "message_mark_read", "listeners_exports", "pasteText", "pasteCheck", "input", "style_default", "pasteImage", "items", "item", "file", "mess_default", "tag", "init_listeners", "__esmMin", "init_hub", "init_mess", "init_style", "init_var", "init_html", "init_ui", "hub_default", "messHTML", "messages", "lastUserMessage", "message", "var_default", "id", "ui_default", "lastMessage", "__name", "setupSwipe", "element", "onSwipeLeft", "onSwipeRight", "onSwipeUp", "onSwipeDown", "startX", "startY", "endX", "endY", "e", "shouldIgnoreSwipe", "handleSwipe", "onMouseUp", "__name", "diffX", "diffY", "target", "swipeLib_default", "init_swipeLib", "__esmMin", "init_hub", "hub_default", "features_exports", "init_features", "__esmMin", "init_hub", "init_var", "init_mess", "init_swipeLib", "init_staticData", "init_html", "hub_default", "nav", "var_default", "navHTML", "tag", "staticData_default", "swipeLib_default", "__name", "app", "e", "files", "file", "mess_default", "reloadProfileImages", "id", "imageSelector", "utils_default", "img", "src", "init_reloadImages", "__esmMin", "init_hub", "init_utils", "hub_default", "__name", "settingsData", "settingsData_default", "init_settingsData", "__esmMin", "init_hub", "init_var", "init_apis", "init_file", "init_uiFunc", "init_user", "init_socket", "init_staticData", "init_reloadImages", "init_translate", "init_api", "init_userStateManager", "hub_default", "__name", "translate_default", "var_default", "apis_default", "div", "tmpData", "container", "imgPrev", "imgSel", "staticData_default", "e", "target", "file", "file_default", "reloadProfileImages", "LangRef", "result", "uiFunc_default", "confText", "socket_default", "settings", "user_default", "userStateManager_default", "api_default", "lang", "load_translate", "notifications", "desktopHandling", "fns", "SettingsManager", "settingsLib_default", "init_settingsLib", "__esmMin", "init_hub", "init_apis", "init_translate", "hub_default", "setting", "checkbox", "input", "select", "option", "optionElement", "button", "__name", "settings", "container", "saveCallback", "exitCallback", "saveFns", "onlyFilter", "data", "only", "apis_default", "category", "categoryDiv", "settingElement", "createLabel", "label", "inputElement", "div", "tmpData", "saveButton", "translate_default", "exitButton", "categorySwitcher", "display", "dataStatic", "datasFn", "saveFn", "currentSettings", "initCategoryElement", "initInputText", "initButton", "initCheckbox", "addSeparator", "init_rs_utils", "__esmMin", "init_hub", "hub_default", "__name", "container", "div", "label", "defaultValue", "textInputContainer", "inputElement", "text", "onclick", "button", "checkboxContainer", "labelElement", "x", "initCategories", "container", "initCategoryElement", "setData", "self", "settings", "realmId", "rs_data", "rs_var_default", "init_rs_var", "__esmMin", "init_hub", "init_rs_utils", "hub_default", "__name", "saveSettings", "exitWithoutSaving", "saveAndExitSettings", "init_rs_save", "__esmMin", "init_hub", "init_rs_var", "init_uiFunc", "init_translate", "hub_default", "__name", "rs_data", "rs_var_default", "_this", "settings", "addons", "saved", "uiFunc_default", "translate_default", "renderMeta", "init_rs_meta", "__esmMin", "init_hub", "init_socket", "init_uiFunc", "init_file", "init_coreFunc", "init_rs_var", "init_rs_utils", "init_debug", "init_staticData", "init_translate", "init_rs_save", "hub_default", "__name", "rs_data", "rs_var_default", "settings", "debug_default", "translate_default", "metaDiv", "meta", "img", "nameInput", "initInputText", "addSeparator", "realmImg", "realmImgFile", "staticData_default", "e", "initButton", "end", "warns", "text", "uiFunc_default", "name", "saveAndExitSettings", "coreFunc_default", "socket_default", "file_default", "genId", "parts", "time", "getTime", "getUniqueRandom", "partsSchema", "l", "getRandom", "id", "usedIdsMap", "unix", "genId_default", "init_genId", "__esmMin", "init_hub", "hub_default", "__name", "renderRoles", "renderRoleEdit", "init_rs_roles", "__esmMin", "init_hub", "init_perm", "init_var", "init_genId", "init_rs_var", "init_debug", "init_rs_utils", "init_translate", "init_uiFunc", "hub_default", "__name", "rs_data", "rs_var_default", "settings", "debug_default", "translate_default", "container", "roles", "rolesElements", "repairHierarchy", "a", "b", "role", "i", "renderRole", "details", "addSeparator", "summary", "roleContent", "opts", "initButton", "r", "prevRole", "_thisLvl", "nextRole", "_id", "genId_default", "uiFunc_default", "containerElement", "nameInput", "initInputText", "roleColor", "caclulatePermissionsByCheckBoxs", "newPerms", "checkboxs", "c", "permsBuild", "userPermissions", "var_default", "pb", "isPerm", "perm_default", "checkbox", "initCheckbox", "label", "renderEmojis", "init_rs_emoji", "__esmMin", "init_hub", "init_socket", "init_file", "init_debug", "init_rs_var", "init_rs_utils", "init_staticData", "init_translate", "hub_default", "__name", "rs_data", "rs_var_default", "settings", "debug_default", "translate_default", "uploadButton", "fileInput", "staticData_default", "file", "file_default", "socket_default", "emojis", "renderEmoji", "emoji", "emojiDiv", "img", "emojiName", "initInputText", "initButton", "renderChannels", "renderEditChannel", "renderEditCategory", "vars_channelsFlags", "init_rs_channels", "__esmMin", "init_hub", "init_rs_var", "init_apis", "init_genId", "init_uiFunc", "init_debug", "init_socket", "init_translate", "init_rs_utils", "hub_default", "__name", "rs_data", "rs_var_default", "settings", "debug_default", "translate_default", "categoriesContainer", "sortedCategories", "a", "b", "channels", "initButton", "name", "uiFunc_default", "genId_default", "category", "addSeparator", "categoryDiv", "i", "div", "text", "voice", "announcement", "open_announcement", "forum", "type", "newChannel", "channel", "categoryChannels", "channelElement", "currentChannelIndex", "ch", "previousChannelIndex", "nextChannelIndex", "containerElement", "nameInp", "initInputText", "descInp", "renderRole", "role", "details", "summary", "roleRp", "rp", "perm", "checked", "checkbox", "initCheckbox", "subscribed", "tc", "ul", "sub", "li", "apis_default", "unsubscribe", "langFunc", "socket_default", "s", "desc", "roles", "rolesMap", "allPerm", "number", "value", "key", "index", "nameInput", "cat", "webhook_available_channels_type", "renderWebhooks", "renderWebhookEdit", "init_rs_webhooks", "__esmMin", "init_hub", "init_genId", "init_uiFunc", "init_rs_var", "init_utils", "init_rs_utils", "init_translate", "init_debug", "init_socket", "hub_default", "__name", "rs_data", "rs_var_default", "settings", "debug_default", "translate_default", "container", "initButton", "findFirstTextChannel", "categories", "channels", "a", "b", "category", "textChannels", "item", "id", "genId_default", "chnl", "uiFunc_default", "webhook", "addSeparator", "webhookDiv", "w", "webhookUrl", "webhookUrlCopy", "socket_default", "token", "utils_default", "ok", "webhookLang", "name", "initInputText", "template", "renderChnls", "select", "group", "channel", "option", "chnlLabel", "advancedDiv", "ajv", "required", "embedSettings", "embed", "embedTitle", "embedUrl", "embedDesc", "embedImage", "embedCustomFields", "embedCustomFieldsData", "createEmbedCustomFields", "key", "value", "li", "customFieldName", "customFieldValue", "data", "remove", "embedCustomFieldsList", "acc", "renderUserRoleManager", "init_rs_users", "__esmMin", "init_hub", "init_apis", "init_var", "init_socket", "init_debug", "init_rs_var", "init_rs_utils", "init_translate", "init_uiFunc", "hub_default", "__name", "rs_data", "rs_var_default", "settings", "debug_default", "translate_default", "container", "users", "roles", "renderUser", "user", "details", "summary", "apis_default", "div", "userRoles", "checkboxs", "role", "checkbox", "initCheckbox", "addSeparator", "initButton", "newRoles", "c", "id", "u", "var_default", "text", "langFunc", "uiFunc_default", "socket_default", "banUsersDetails", "banUsersSummary", "userName", "settingsKeys", "init_types", "__esmMin", "categorySwitcherButtonOnClick", "category", "updateDisplay", "__name", "changeDisplay", "rs_data", "rs_var_default", "currentSettings", "requiredSections", "missingSections", "section", "socket_default", "fetchedData", "renderCategorySwitcher", "init_rs_nav", "__esmMin", "init_hub", "init_translate", "init_perm", "init_socket", "init_rs_var", "init_rs_meta", "init_rs_webhooks", "init_rs_emoji", "init_rs_users", "init_rs_roles", "init_rs_channels", "init_rs_utils", "init_types", "hub_default", "options", "settingsKeys", "div", "categoryButtons", "translate_default", "renderMeta", "renderChannels", "renderRoles", "renderUserRoleManager", "renderEmojis", "renderWebhooks", "isPerm", "perm_default", "button", "categorySwitcherContainer", "addSeparator", "RealmSettingsManager", "realmSettings_default", "init_realmSettings", "__esmMin", "init_hub", "init_rs_var", "init_rs_meta", "init_rs_roles", "init_rs_emoji", "init_rs_channels", "init_rs_webhooks", "init_rs_users", "init_rs_save", "init_rs_nav", "init_translate", "hub_default", "__name", "settings", "realmId", "container", "saveCallback", "exitCallback", "setData", "renderCategorySwitcher", "renderMeta", "renderChannels", "renderRoles", "renderUserRoleManager", "renderEmojis", "renderWebhooks", "changeDisplay", "saveAndExitButton", "translate_default", "saveAndExitSettings", "saveButton", "saveSettings", "exitButton", "exitWithoutSaving", "settings_exports", "__export", "settings_default", "settingDiv", "settingsFunc", "init_settings", "__esmMin", "init_hub", "init_mgl", "init_debug", "init_settingsData", "init_settingsLib", "init_socket", "init_realmSettings", "hub_default", "settingsLib_default", "settingsData_default", "settings", "id", "realmSettings_default", "data", "res", "socket_default", "errs", "debug_default", "mglInt", "subscribeEventChnl_exports", "__export", "subscribeEventChnl_default", "subscribeEventChnl", "init_subscribeEventChnl", "__esmMin", "init_hub", "init_apis", "init_mgl", "init_socket", "hub_default", "p", "realm", "_this", "socket_default", "data", "channel", "option", "sourceRealmId", "sourceChannelId", "apis_default", "mglInt", "context_exports", "__export", "context_default", "contextFunc", "init_context", "__esmMin", "init_hub", "init_ui", "init_var", "init_apis", "init_utils", "init_uiFunc", "init_coreFunc", "init_socket", "init_perm", "init_html", "init_mgl", "init_interact", "init_subscribeEventChnl", "init_translate", "hub_default", "type", "id", "message", "utils_default", "ok", "uiFunc_default", "translate_default", "ui_default", "var_default", "messHTML", "chnl", "interact_default", "e", "socket_default", "link", "langFunc", "apis_default", "coreFunc_default", "realm", "g", "muted", "endTime", "muteStatus", "endTimeText", "text", "durations", "value", "now", "targetTime", "subscribeEventChnl_default", "thread", "t", "perm_default", "mglInt", "relations_exports", "__export", "relations_default", "makeRealmDiv", "buttonFunc", "init_relations", "__esmMin", "init_hub", "init_uiFunc", "init_socket", "init_html", "init_mgl", "init_translate", "hub_default", "otherHTML", "to", "uiFunc_default", "translate_default", "socket_default", "name", "id", "mglVar", "start_exports", "init_start", "__esmMin", "init_hub", "init_debug", "init_apis", "init_coreFunc", "init_socket", "init_stateManager", "init_translate", "hub_default", "debug_default", "apis_default", "coreFunc_default", "socket_default", "stateManager_default", "unexpected", "regButNotReq", "unregistered", "reqButNotReg", "reg", "getReg", "req", "getReq", "warning_exports", "init_warning", "__esmMin", "init_hub", "init_debug", "init_translate", "hub_default", "debug_default", "lang", "translate_default", "css", "i"]
}
