import nodeCache from "node-cache";
import { decode, create, KeyIndex } from "./token/index.js";
import { randomBytes } from "crypto";
import { genId } from "@wxn0brp/db";
export const cache = new nodeCache({
    stdTTL: 2 * 60,
    checkperiod: 15 * 60,
});
export async function createTokenPointer(userId, token) {
    const random = randomBytes(32).toString("hex");
    const id = genId();
    const pointer = await create({ id, random, user: userId }, "2m", KeyIndex.TEMPORARY);
    cache.set(id, token);
    return pointer;
}
export async function getTokenFromPointer(pointerToken) {
    const data = await decode(pointerToken, KeyIndex.TEMPORARY);
    if (!data)
        return null;
    const userToken = cache.get(data.id);
    if (!userToken)
        return null;
    const userTokenData = await decode(userToken, KeyIndex.USER_TOKEN);
    if (!userTokenData)
        return null;
    return {
        user: data.user,
        token: userToken,
        exp: userTokenData.exp
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9iaWxlTm90aWYuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9iYWNrL2xvZ2ljL21vYmlsZU5vdGlmLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sU0FBUyxNQUFNLFlBQVksQ0FBQztBQUNuQyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUNyQyxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBR3BDLE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBRyxJQUFJLFNBQVMsQ0FBQztJQUMvQixNQUFNLEVBQUUsQ0FBQyxHQUFHLEVBQUU7SUFDZCxXQUFXLEVBQUUsRUFBRSxHQUFHLEVBQUU7Q0FDdkIsQ0FBQyxDQUFDO0FBRUgsTUFBTSxDQUFDLEtBQUssVUFBVSxrQkFBa0IsQ0FBQyxNQUFVLEVBQUUsS0FBYTtJQUM5RCxNQUFNLE1BQU0sR0FBRyxXQUFXLENBQUMsRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQy9DLE1BQU0sRUFBRSxHQUFHLEtBQUssRUFBRSxDQUFDO0lBRW5CLE1BQU0sT0FBTyxHQUFHLE1BQU0sTUFBTSxDQUFDLEVBQUUsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLEVBQUUsSUFBSSxFQUFFLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUVyRixLQUFLLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUNyQixPQUFPLE9BQU8sQ0FBQztBQUNuQixDQUFDO0FBRUQsTUFBTSxDQUFDLEtBQUssVUFBVSxtQkFBbUIsQ0FBQyxZQUFvQjtJQUMxRCxNQUFNLElBQUksR0FBRyxNQUFNLE1BQU0sQ0FBQyxZQUFZLEVBQUUsUUFBUSxDQUFDLFNBQVMsQ0FBeUIsQ0FBQztJQUNwRixJQUFHLENBQUMsSUFBSTtRQUFFLE9BQU8sSUFBSSxDQUFDO0lBRXRCLE1BQU0sU0FBUyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBVyxDQUFDO0lBQy9DLElBQUcsQ0FBQyxTQUFTO1FBQUUsT0FBTyxJQUFJLENBQUM7SUFFM0IsTUFBTSxhQUFhLEdBQUcsTUFBTSxNQUFNLENBQUMsU0FBUyxFQUFFLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNuRSxJQUFHLENBQUMsYUFBYTtRQUFFLE9BQU8sSUFBSSxDQUFDO0lBRS9CLE9BQU87UUFDSCxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUk7UUFDZixLQUFLLEVBQUUsU0FBUztRQUNoQixHQUFHLEVBQUUsYUFBYSxDQUFDLEdBQUc7S0FDekIsQ0FBQTtBQUNMLENBQUMifQ==